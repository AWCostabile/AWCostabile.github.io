{"version":3,"sources":["common/context/print/types.ts","utils/sleep.ts","utils/text.ts","common/languages/english.tsx","common/languages/english-info.tsx","pages/print/print-page.tsx","common/hooks/use-print-page.ts","pages/print/contact.tsx","pages/print/objection.tsx","pages/print/privacy.tsx","pages/print/proposal.tsx","common/context/print/helper.ts","common/context/print/provider.tsx","common/context/print/reducer.ts","images/logo.gif","pages/print/header.tsx","common/constants/app.ts","common/context/app/types.ts","utils/class-names.ts","components/print-line/label.tsx","components/print-line/dots.tsx","components/print-line/sub-label.tsx","components/print-line/value.tsx","components/print-line/content.tsx","components/print-line/print-line.tsx","common/hooks/use-language.ts","styles/utils/style-side.ts","styles/utils/helpers.ts","components/page-section/page-section.tsx","components/content/content.tsx","components/footer/footer.tsx","components/header/header.tsx","components/page-layout/page-layout.tsx","images/frame.svg","components/expandable/expandable-overlay.tsx","components/expandable/expandable.tsx","components/formik-field/formik-field.tsx","components/hide-button/hide-button.tsx","pages/form/info.tsx","pages/form/template.tsx","common/hooks/use-grid.tsx","pages/form/signature.tsx","pages/form/validations.ts","pages/form/form-page.tsx","common/hooks/use-save-data.ts","pages/app.tsx","common/hooks/use-app-view.ts","index.tsx","components/link/link.tsx","common/constants/defaults.ts","common/constants/print.ts","components/print-break/print-break.tsx","common/context/app/context.ts","common/context/app/reducer.ts","common/context/app/provider.tsx","common/constants/patterns.ts","utils/language.ts","common/languages/chinese.tsx","common/languages/index.ts","common/context/print/context.ts","utils/local-storage.ts"],"names":["PrintContextAction","PrintContextStatus","PrintValueType","sleep","timeout","Promise","res","rej","setTimeout","undefined","error","textSpace","spaces","Array","from","map","NON_BREAKING_SPACE","join","english","icon","name","nameEnglish","buttons","cancel","createDigitalObjectionForm","createPrintObjectionForm","go","hide","reset","show","document","date","signature","labels","miscellaneous","hiddenFields","hiddenText","qrCodeLabel","placeholder","sections","concernedParty","proposal","objection","titles","about","header","validations","warning","info","delivery","to","description","style","display","padding","ZOOM_LINK","ZOOM_ID","color","ZOOM_PASSWORD","PUBLIC_AMENITY","more","PROPOSAL_LINK","EMAIL","translationBy","PrintViewPage","isDebug","isMobile","toFormView","values","useState","spinner","setSpinner","loading","setLoading","useEffect","global","window","requestAnimationFrame","print","printConfig","useMemo","offestType","SUGGESTIONS","pageSize","initialOffset","SUGGESTION_OFFSET","initialPage","INITIAL_PAGE_BREAK","regularPage","REGULAR_PAGE_BREAK","paragraph","allowedLimit","ALLOWED_CHARACTERS","maxSize","PARAGRAPH_SIZE_MAX","minSize","PARAGRAPH_SIZE_MIN","separator","SENTENCE_SEPARATOR","className","classNames","container","direction","alignItems","config","resizeTimout","RESIZE_TIMEOUT","onReady","usePrintPage","handlePrint","break","gapSize","isReady","useRef","useCallback","a","current","root","getElementById","onTouch","addEventListener","useStyles","makeStyles","label","fontWeight","subLabel","PrintContact","classes","Fragment","item","xs","value","contactName","contactAddress","contactPostCode","contactPhone","contactEmail","signatureText","defaultItem","id","text","PrintObjection","useLanguage","currentLanguage","strings","printContext","useContext","PrintContext","concerns","items","CONCERNS","suggestions","SIGNATURE","hasSignature","withSignature","withDateStamp","fontSize","paddingLeft","Date","authority","toLocaleDateString","onValues","field","suggestedChanges","addSpace","reduce","sum","next","signatureImage","alt","src","concern","index","breakProps","minLines","length","onParagraph","size","onFieldSize","suggestion","variant","offset","singleLine","bold","PrintPrivacy","PrintProposal","applicationName","applicantLand","PrintHelper","settings","assembleStrings","acc","slice","prev","rest","calculateBreaks","onInitialPage","runningTotal","compareTo","topOffset","createProcessor","preProcessor","postProcessor","textBlock","generateParagraphs","this","splitOnLineEndings","splitOnTerminators","calculatePrintBreaks","getPrintQueue","paragraphs","trim","toPrintQueue","updatePrintQueue","prevItems","update","ready","nextItems","some","split","LINE_ENDING_PATTERN","TERMINATORS_PATTERN","reduceRight","v4","PrintProvider","children","printReducer","printHelper","reducer","state","action","status","DONE","type","ADD_QUEUE","IDLE","queue","SET_TEXT","PROCESSING","SET_BREAK","SET_DONE","SET_SIZE","updates","CALCULATING","RENDERING","SET_SKIP","useReducer","defaultPrintState","dispatch","onFieldBreak","shouldBreak","sorted","Provider","box","border","width","boxTextBody","marginBottom","boxTextTitle","formTitle","languageLabel","paddingTop","paddingBottom","PrintHeader","Grid","Typography","applicationNumber","Box","Logo","LOCAL_STORAGE_KEY","TEXT_COLOR","AppContextAction","AppView","args","filter","hidden","opacity","PrintLineLabel","React","memo","classesProp","dots","overflow","zIndex","PrintLineDots","align","lineHeight","noWrap","TEXT_DOTS","PrintLineSubLabel","whiteSpace","PrintLineValue","setParagraph","ref","element","position","reRender","top","PrintLineContent","gridClasses","handleParagraph","props","lines","setLines","_","PrintLine","height","getBoundingClientRect","Math","floor","max","AppContext","setLanguage","language","SideStyle","convert","asProps","property","units","toValue","b","bottom","y","all","l","left","x","r","right","t","every","side","toProps","toShorthand","toLonghand","sides","toMapped","mapped","total","toStyles","first","others","Object","entries","mappings","prevIndex","findIndex","push","styles","toUpperCase","substr","includes","styels","createSideStyle","toString","paddingStyles","background","minHeight","stretch","flex","PageSection","justify","Wrapper","justifyContent","content","Content","md","Footer","theme","button","fill","marginRight","menu","option","breakpoints","down","toLabel","friendly","Header","anchorEl","open","setOpen","Button","onClick","Popper","disablePortal","role","transition","TransitionProps","placement","Grow","marginTop","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","meta","MenuItem","PageLayout","fade","boxShadow","ExpandableOverlay","Expandable","sneekPeek","Collapse","collapsedSize","in","fieldProps","fullWidth","InputLabelProps","shrink","FormikField","readonly","useField","onBlur","onChange","touched","hasError","TextField","helperText","event","transform","HideButton","toggleShow","ObjectionFormInformation","italics","lingering","setLingering","showText","setShowText","centered","textAlign","fontStyle","signatureStyles","ObjectionFormTemplate","handleChange","submitForm","validateForm","GridFour","lg","xl","GridSix","GridEight","GridTwelve","hasMarkedCanvas","setHasMarkedCanvas","showApplicant","setShowApplicant","showConcernedParty","setShowConcernedParty","showSignatureView","setShowSignatureView","api","clear","save","getTrimmedCanvas","toDataURL","setRef","internalRef","Component","useSignature","informationSection","onSubmit","target","onSignature","onComplete","onBegin","canvasProps","penColor","disabled","multiline","minRows","maxRows","errors","keys","emailValidation","match","EMAIL_PATTERN","phoneValidation","replace","REPLACE_PHONE_CHARS","PHONE_PATTERN","postCodeValidator","String","POST_CODE_PATTERN","FormViewPage","printData","saveData","initialValues","useSaveData","render","setRender","validationSchema","Yup","shape","required","test","message","App","toPrintView","view","useAppView","navigator","userAgent","form","FORM","PRINT","StrictMode","appData","getSaveData","Link","href","rel","defaultFormData","now","ignore","pageBreak","PrintBreak","defaultAppContext","createContext","resetData","appContextReducer","LANGUAGE","confirm","warningText","RESET","SAVE","VIEW","AppProvider","set","nextLanguage","is","setSaveData","Languages","languages","chinese","currentData","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":"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","file":"static/js/main.86f71e70.chunk.js","sourcesContent":["export enum PrintContextAction {\r\n  ADD_QUEUE,\r\n  SET_BREAK,\r\n  SET_DONE,\r\n  SET_TEXT,\r\n  SET_SIZE,\r\n  SET_SKIP,\r\n}\r\n\r\nexport enum PrintContextStatus {\r\n  // Initial State\r\n  IDLE,\r\n\r\n  // Processing incoming text values\r\n  PROCESSING,\r\n\r\n  // Rendering text in view\r\n  RENDERING,\r\n\r\n  // Calculating the page breaks\r\n  CALCULATING,\r\n\r\n  // All Done\r\n  DONE,\r\n}\r\n\r\nexport enum PrintValueType {\r\n  CONCERNS = \"concerns\",\r\n  SUGGESTIONS = \"suggestions\",\r\n  SIGNATURE = \"signature\",\r\n}\r\n\r\nexport type PrintContextActions<Type> =\r\n  | {\r\n      queue: Array<{\r\n        field: Type;\r\n        text: string;\r\n      }>;\r\n      type: PrintContextAction.ADD_QUEUE;\r\n    }\r\n  | {\r\n      field: Type;\r\n      text: string;\r\n      type: PrintContextAction.SET_TEXT;\r\n    }\r\n  | {\r\n      id: string;\r\n      size: number;\r\n      type: PrintContextAction.SET_SIZE;\r\n    }\r\n  | {\r\n      id: string;\r\n      break: boolean;\r\n      type: PrintContextAction.SET_BREAK;\r\n    }\r\n  | {\r\n      type: PrintContextAction.SET_DONE | PrintContextAction.SET_SKIP;\r\n    };\r\n\r\nexport interface IPrintData<Type> extends Record<string, unknown> {\r\n  break: boolean;\r\n  field: Type;\r\n  id: string;\r\n  index: number;\r\n  ready: boolean;\r\n  size: number;\r\n  text: string;\r\n}\r\n\r\nexport interface IPrintState<Type> {\r\n  items: Array<IPrintData<Type>>;\r\n  status: PrintContextStatus;\r\n}\r\n\r\nexport interface IPrintContext<Type extends string = string> {\r\n  items: Record<Type, Array<IPrintData<Type>>>;\r\n  onFieldBreak: (id: string, shouldBreak: boolean) => void;\r\n  onFieldSize: (id: string, size: number) => void;\r\n  onValues: (queue: Array<{ field: Type; text: string }>) => void;\r\n}\r\n","export const sleep = (timeout: number) =>\r\n  new Promise((res, rej) =>\r\n    setTimeout(() => {\r\n      try {\r\n        res(undefined);\r\n      } catch (error) {\r\n        rej(error);\r\n      }\r\n    }, timeout)\r\n  );\r\n","import { NON_BREAKING_SPACE } from \"common/constants/app\";\r\n\r\nexport const textSpace = (spaces: number) =>\r\n  Array.from(Array(spaces))\r\n    .map(() => NON_BREAKING_SPACE)\r\n    .join(\"\");\r\n","import { ILanguage } from \"common/models/language\";\r\nimport { englishInfo } from './english-info';\r\n\r\nexport const english: ILanguage = {\r\n  // ==========================================================================\r\n  //  LANGUAGE META DATA\r\n  // ==========================================================================\r\n\r\n  icon:                                       \"true\",\r\n  name:                                       \"English\",\r\n  nameEnglish:                                \"English\",\r\n\r\n  // ==========================================================================\r\n  //  BUTTONS, INPUTS & UI ELEMENTS\r\n  // ==========================================================================\r\n\r\n  buttons: {\r\n    cancel:                                   \"Cancel\",\r\n    createDigitalObjectionForm:               \"Create Digitally Signed Document\",\r\n    createPrintObjectionForm:                 \"Create Physically Printed Document\",\r\n    go:                                       \"Go\",\r\n    hide:                                     \"Hide\",\r\n    reset:                                    \"Reset\",\r\n    show:                                     \"Show\",\r\n  },\r\n  document: {\r\n    date:                                     \"Date\",\r\n    signature:                                \"Signed\",\r\n  },\r\n  labels: {\r\n    \"concernedParty.contactAddress\":          \"Residential Address\",\r\n    \"concernedParty.contactEmail\":            \"Email Address\",\r\n    \"concernedParty.contactName\":             \"Name(s)\",\r\n    \"concernedParty.contactPhone\":            \"Phone\",\r\n    \"concernedParty.contactPostCode\":         \"Post Code\",\r\n    \"objection.concerns\":                     \"Grounds of Objection\",\r\n    \"objection.suggestedChanges\":             \"Changes which could address your concern(s)\",\r\n    \"proposal.applicantLand\":                 \"Description of Land\",\r\n    \"proposal.applicationName\":               \"Name of Applicant\",\r\n    \"proposal.applicationNumber\":             \"Application Number\",\r\n    \"proposal.description\":                   \"Description of Proposal\",\r\n  },\r\n  miscellaneous: {\r\n    hiddenFields:                             \"Fields are hidden\",\r\n    hiddenText:                               \"Text is hidden\",\r\n    qrCodeLabel:                              \"Share this form!\",\r\n  },\r\n  placeholder: {\r\n    \"concernedParty.contactAddress\":          \"Enter your residential address\",\r\n    \"concernedParty.contactEmail\":            \"Enter your email address\",\r\n    \"concernedParty.contactName\":             \"Enter your name(s)\",\r\n    \"concernedParty.contactPhone\":            \"Enter your contact phone number\",\r\n    \"concernedParty.contactPostCode\":         \"Enter your post code\",\r\n    \"objection.concerns\":                     \"Detail your concerns with regards to this proposal\",\r\n    \"objection.suggestedChanges\":             \"Enter any changes that could be made to the proposal that would address your concer(s)\",\r\n    \"proposal.applicantLand\":                 \"Enter a description of the land to be developed\",\r\n    \"proposal.applicationName\":               \"Enter the applicant's Name or Business\",\r\n    \"proposal.applicationNumber\":             \"Enter the TPA number on the planning permit\",\r\n    \"proposal.description\":                   \"Enter a description for the purpose of the planning proposal\",\r\n  },\r\n  sections: {\r\n    concernedParty:                           \"Enter your details as accurately as possible\",\r\n    proposal:                                 \"Fields are pre-populated for your convenience\",\r\n    objection:                                \"Enter your concerns and reasons for this object, as well as any changes you'd like to see\",\r\n  },\r\n  titles: {\r\n    about:                                    \"To the Residents of Glen Waverley and surrounding areas\",\r\n    concernedParty:                           \"Concerned Party (You)\",\r\n    header:                                   \"Objection Helper\",\r\n    proposal:                                 \"Planning Permit being Objected\",\r\n    objection:                                \"Objection Details\",\r\n    signature:                                \"Use the area below to record a signature\",\r\n  },\r\n  validations: {\r\n    \"concernedParty.contactAddress\":          \"A residential address is required\",\r\n    \"concernedParty.contactEmail\":            \"Invalid email address detected\",\r\n    \"concernedParty.contactName\":             \"At least one contact name is required\",\r\n    \"concernedParty.contactPhone\":            \"Invalid phone number detected\",\r\n    \"concernedParty.contactPostCode\":         \"A valid post code is required\",\r\n    \"objection.concerns\":                     \"You must supply a reason for your objection\",\r\n    \"proposal.applicationNumber\":             \"An application number is mandatory\",\r\n  },\r\n  warning:                                    \"This application does 𝗡𝗢𝗧 send an email to the Monash City council. Use the print preview to either print the objection form OR export it as a PDF file. You 𝗠𝗨𝗦𝗧 send it yourself in order to make sure the objection is submitted!\",\r\n\r\n  // ==========================================================================\r\n  //  MAIN PARAGRAPH CONTENT (stored in separate file)\r\n  // ==========================================================================\r\n\r\n  info: englishInfo,\r\n\r\n  // ==========================================================================\r\n  //  CREDITS -> Replace the name below with your name\r\n  // ==========================================================================\r\n\r\n  translationBy:                              \"Anthony Costabile\",\r\n};\r\n","import {\r\n  EMAIL,\r\n  PROPOSAL_LINK,\r\n  PUBLIC_AMENITY,\r\n  ZOOM_ID,\r\n  ZOOM_LINK,\r\n  ZOOM_PASSWORD,\r\n} from \"common/constants/app\";\r\nimport { ILanguage } from \"common/models/language\";\r\nimport { Link } from \"components/link\";\r\nimport { textSpace } from \"utils/text\";\r\n\r\nexport const englishInfo: ILanguage[\"info\"] = {\r\n  delivery: (\r\n    <ul>\r\n      <li>Mail - PO Box 1, Glen Waverley VIC 3150</li>\r\n      <li>\r\n        Email -{\" \"}\r\n        <Link to=\"mailto:mail@monash.vic.gov.au\">mail@monash.vic.gov.au</Link>\r\n      </li>\r\n    </ul>\r\n  ),\r\n  description: [\r\n    <>\r\n      After <strong>Thursday the 16th of September</strong>, the Monash City\r\n      Council will be deciding on whether to issue or refuse a \"Notice of\r\n      Decision to Grant a Permit\" for a proposed 21 storey building to be\r\n      constructed at <em>251 - 261 Springvale road</em>. As residents of Glen\r\n      Waverley, my family and I believe it is within our community's best\r\n      interests that we gather in support of those concerned with a project on\r\n      this scale. I have created this website in order to provide information on\r\n      this proposed development as well as an interactive form that will assist\r\n      you in creating an objection should you wish to lodge one with the Monash\r\n      City Council.\r\n    </>,\r\n    <>\r\n      To assist us in strengthening our grounds for objection, my family and I\r\n      have commissioned an independent town planning report, scheduled for\r\n      release on Tuesday 14th of September, which I intend on sharing here on\r\n      this website, as the report will investigate the potential impacts of\r\n      over-development in this part of Glen Waverley, so close to the existing\r\n      apartment buildings, both the Galleria and Sky Garden complexes\r\n      respectively. You too will be able to read this report and use it as part\r\n      of your objections if you would like.\r\n    </>,\r\n    <>\r\n      Additionally, I have scheduled a Zoom meeting to be held on{\" \"}\r\n      <strong>Tuesday 14th September</strong> (details below) in order to answer\r\n      questions and help outline what is contained within the Town Planner's\r\n      report, as well as provide a platform for members of the Glen Waverley\r\n      community to discuss strategies we could collectively enact to help make\r\n      our case for objection stronger. Since the period for objection to this\r\n      proposal ends on the 16th, I strongly urge you to notify your neighbours\r\n      and local contacts in order to ensure as many people know about this\r\n      development as possible.\r\n    </>,\r\n    <span style={{ display: \"block\", padding: \"0 16px\" }}>\r\n      <strong>Zoom Meeting ID:</strong>\r\n      <br />\r\n      {textSpace(6)}\r\n      <Link to={ZOOM_LINK}>\r\n        <em>{ZOOM_ID}</em>\r\n      </Link>\r\n      <br />\r\n      <strong>Zoom Meeting Password:</strong>\r\n      <br />\r\n      {textSpace(6)}\r\n      <em style={{ color: \"#C22\" }}>{ZOOM_PASSWORD}</em>\r\n    </span>,\r\n    <>\r\n      In terms of using the form below to create an objection, your private\r\n      information is important, and so this site has been built from the ground\r\n      up to ensure it runs and stores data only on YOUR device without ever\r\n      sending information online. This however means that the PDF generated by\r\n      submitting the form will NOT be automatically sent to the Monash City\r\n      Council. The form is only there to make it easier for you to fill in your\r\n      details and add in a signature.\r\n    </>,\r\n    <>\r\n      Remember though that if you want to raise an objection, the council's\r\n      responsibility is to maintain the{\" \"}\r\n      <Link to={PUBLIC_AMENITY}>public amenity</Link> for the wider community,\r\n      and does not cater to the needs of specific individuals who feel they may\r\n      be at an inconvenience. For this reason, when you are writing your\r\n      objection, be sure to include some of the following talking points amongst\r\n      your own concerns:\r\n      <ul>\r\n        <li>\r\n          Twenty one floors is quite excessive for a suburb already seeing a few\r\n          too many high rises going up, and we want to avoid becoming like other\r\n          nearby areas which suffer from over development. Let's send a message\r\n          to developers that they should not be competing with each other on who\r\n          can build the tallest building in the area.\r\n        </li>\r\n        <li>\r\n          The developer's submission only displays a single timeframe to\r\n          demonstrate the shadowing this building may cause. It is clear that\r\n          there will be an absence of natural light around the building and its\r\n          surrounding streets given its proximity to the Galleria and Sky Garden\r\n          apartments. It will likely overshadow the town square design around\r\n          Railway Parade, Kingsway and potentially Coleman Parade before noon.\r\n        </li>\r\n        <li>\r\n          The developer's traffic analysis took place in November 2020 during\r\n          the COVID-19 lockdown period and as such, traffic was not\r\n          representative of what would be expected in the long term when\r\n          activity in the area will surely intensify\r\n        </li>\r\n        <li>\r\n          The building will have REDUCED parking available in their building for\r\n          the over 150 lots proposed, and using the Glen's own parking to\r\n          justify reduced parking is unacceptable.\r\n        </li>\r\n        <li>\r\n          O'Sullivan Road is already a narrow through way often used by parents\r\n          to drop children off at the secondary school and is used by commuters\r\n          looking to park around Glen Waverley for access to public transport.\r\n          Further construction for this building's proposed car park entrance,\r\n          to be shared with the Galleria building's own parking entrance will\r\n          add to the chaos around peak traffic times.\r\n        </li>\r\n        <li>\r\n          The developer's own report outlines the potentially harmful effects\r\n          that wind may play on pedestrians using O'Sullivan Road.\r\n        </li>\r\n        <li>\r\n          The council should be reminded that as our elected representatives,\r\n          they serve the residents of their community first and foremost, and\r\n          should consider community expectations and not only those of potential\r\n          developers.\r\n        </li>\r\n        <li>\r\n          It would appear as though the developer may have a history of\r\n          de-registering their property development businesses and\r\n          re-registering under other similar names shortly after a project's\r\n          completion. If this is the case, it could potentially absolve them of\r\n          their responsibilities to the potential buyers should defects occur in\r\n          the building later down the track when the developer effectively does\r\n          not exist.\r\n        </li>\r\n      </ul>\r\n    </>,\r\n    <>\r\n      In order to successfully lodge your objection, make sure you personally\r\n      send it by mail or via email to the Monash City Council at one of the\r\n      following addresses, since this form will NOT send your objection to the\r\n      council on your behalf\r\n    </>,\r\n  ],\r\n  more: [\r\n    <>\r\n      If you would like to research this development proposal yourself, and see\r\n      all the supplied materials the council has made public, click the\r\n      following link, where you can see reports and analysis submitted by the\r\n      developer. There are also links provided there for you to manually create\r\n      your objection should you choose do not use the form provided below.\r\n    </>,\r\n    <Link to={PROPOSAL_LINK}>\r\n      Proposed development at 251 -261 Springvale Road, Glen Waverley\r\n    </Link>,\r\n    <>Thank you for your time and consideration in this matter.</>,\r\n    <>\r\n      Anthony Costabile\r\n      <br />\r\n      <em>1213A 25 O' Sullivan Road</em>\r\n      <br />\r\n      <Link to={`mailto:${EMAIL}`}>{EMAIL}</Link>\r\n    </>,\r\n  ],\r\n};\r\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { RESIZE_TIMEOUT } from \"common/constants/app\";\r\nimport {\r\n  ALLOWED_CHARACTERS,\r\n  INITIAL_PAGE_BREAK,\r\n  REGULAR_PAGE_BREAK,\r\n  PARAGRAPH_SIZE_MIN,\r\n  PARAGRAPH_SIZE_MAX,\r\n  SENTENCE_SEPARATOR,\r\n  SUGGESTION_OFFSET,\r\n} from \"common/constants/print\";\r\nimport { IPrintHelperConfig } from \"common/context/print/helper\";\r\nimport { PrintProvider } from \"common/context/print/provider\";\r\nimport { PrintValueType } from \"common/context/print/types\";\r\nimport { usePrintPage } from \"common/hooks/use-print-page\";\r\nimport { PrintBreak } from \"components/print-break\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { classNames } from \"utils/class-names\";\r\nimport { IPrintPageCommonProps } from \"./common\";\r\nimport { PrintContact } from \"./contact\";\r\nimport { PrintHeader } from \"./header\";\r\nimport { PrintObjection } from \"./objection\";\r\nimport { PrintPrivacy } from \"./privacy\";\r\nimport { PrintProposal } from \"./proposal\";\r\n\r\ninterface IPrintPageProps extends IPrintPageCommonProps {\r\n  isDebug?: boolean;\r\n  isMobile?: boolean;\r\n  toFormView: () => void;\r\n}\r\n\r\nexport const PrintViewPage: React.FC<IPrintPageProps> = ({\r\n  isDebug,\r\n  isMobile,\r\n  toFormView,\r\n  values,\r\n}) => {\r\n  const [spinner, setSpinner] = useState(true);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (spinner === true) {\r\n      return;\r\n    }\r\n\r\n    if (global.window) {\r\n      requestAnimationFrame(global.window.print);\r\n    }\r\n\r\n    setLoading(false);\r\n  }, [spinner]);\r\n\r\n  const printConfig: IPrintHelperConfig<PrintValueType> = useMemo(\r\n    () => ({\r\n      offestType: PrintValueType.SUGGESTIONS,\r\n      pageSize: {\r\n        initialOffset: SUGGESTION_OFFSET,\r\n        initialPage: INITIAL_PAGE_BREAK,\r\n        regularPage: REGULAR_PAGE_BREAK,\r\n        // initialPage: isMobile ? 300 : INITIAL_PAGE_BREAK,\r\n        // regularPage: isMobile ? 600 : REGULAR_PAGE_BREAK,\r\n      },\r\n      paragraph: {\r\n        allowedLimit: ALLOWED_CHARACTERS,\r\n        maxSize: PARAGRAPH_SIZE_MAX,\r\n        minSize: PARAGRAPH_SIZE_MIN,\r\n        // maxSize: isMobile ? 600 : PARAGRAPH_SIZE_MAX,\r\n        // minSize: isMobile ? 300 : PARAGRAPH_SIZE_MIN,\r\n      },\r\n      separator: SENTENCE_SEPARATOR,\r\n    }),\r\n    []\r\n    // [isMobile]\r\n  );\r\n\r\n  return (\r\n    <div className={classNames(\"print-root\", isDebug && \"debug-root\")}>\r\n      {loading && (\r\n        <div className=\"print-loader\">{spinner && <CircularProgress />}</div>\r\n      )}\r\n      <div className=\"print-content\">\r\n        {\r\n          // Memoize static field elements\r\n          useMemo(\r\n            () => (\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <PrintHeader values={values} />\r\n                <PrintContact values={values} />\r\n                <br />\r\n                <PrintProposal values={values} />\r\n              </Grid>\r\n            ),\r\n            [values]\r\n          )\r\n        }\r\n        <PrintProvider<PrintValueType>\r\n          config={printConfig}\r\n          resizeTimout={RESIZE_TIMEOUT}\r\n          onReady={usePrintPage({\r\n            handlePrint: () => setSpinner(false),\r\n            isDebug,\r\n            isMobile,\r\n            toFormView,\r\n          })}\r\n        >\r\n          <PrintObjection isMobile={isMobile} values={values} />\r\n        </PrintProvider>\r\n        <PrintBreak break gapSize={3} />\r\n        {\r\n          // Memoize static Privacy Content\r\n          useMemo(\r\n            () => (\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <PrintPrivacy />\r\n              </Grid>\r\n            ),\r\n            []\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useCallback, useEffect, useRef } from \"react\";\r\nimport { sleep } from \"utils/sleep\";\r\n\r\ninterface IUsePrintPageConfig {\r\n  handlePrint: () => void;\r\n  isDebug?: boolean;\r\n  isMobile?: boolean;\r\n  toFormView: () => void;\r\n}\r\n\r\nexport const usePrintPage = ({\r\n  handlePrint,\r\n  isDebug,\r\n  isMobile,\r\n  toFormView,\r\n}: IUsePrintPageConfig) => {\r\n  const isReady = useRef(false);\r\n\r\n  const onReady = useCallback(\r\n    async () => {\r\n      handlePrint();\r\n\r\n      await sleep(100);\r\n\r\n      if (!isMobile && !isDebug) {\r\n        requestAnimationFrame(toFormView);\r\n      } else {\r\n        isReady.current = true;\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(() => {\r\n    const root = document.getElementById(\"root\");\r\n\r\n    if (!root) {\r\n      return;\r\n    }\r\n\r\n    const onTouch = () => {\r\n      if (isReady.current) {\r\n        toFormView();\r\n      }\r\n    };\r\n\r\n    root.addEventListener(\"touchstart\", onTouch);\r\n\r\n    return () => {\r\n      root.addEventListener(\"touchstart\", onTouch);\r\n    };\r\n  }, [toFormView]);\r\n\r\n  return onReady;\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { PrintLine } from \"components/print-line\";\r\nimport React from \"react\";\r\nimport { IPrintPageCommonProps } from \"./common\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  label: {\r\n    fontWeight: 600,\r\n  },\r\n  subLabel: {\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nexport const PrintContact: React.FC<IPrintPageCommonProps> = ({ values }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container xs={11}>\r\n        <PrintLine label=\"I/We*:\" value={values.concernedParty.contactName} />\r\n        <PrintLine\r\n          label=\"Of (Address)*:\"\r\n          value={values.concernedParty.contactAddress}\r\n        />\r\n        <PrintLine\r\n          xs={5}\r\n          label=\"Post Code*:\"\r\n          value={values.concernedParty.contactPostCode}\r\n        />\r\n        <PrintLine\r\n          xs={7}\r\n          classes={{ subLabel: classes.subLabel }}\r\n          label=\"Telephone:\"\r\n          subLabel=\"(Please refer to privacy statement below)\"\r\n          value={values.concernedParty.contactPhone}\r\n        />\r\n      </Grid>\r\n      <Grid item container xs={11}>\r\n        <PrintLine\r\n          classes={classes}\r\n          label=\"Email Address\"\r\n          subLabel=\"(Please refer to privacy statement below)\"\r\n          value={<strong>{values.concernedParty.contactEmail}</strong>}\r\n        />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { PrintContext } from \"common/context/print/context\";\r\nimport { PrintValueType } from \"common/context/print/types\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { breakProps, PrintBreak } from \"components/print-break\";\r\nimport { PrintLine } from \"components/print-line\";\r\nimport React, { useContext, useEffect, useMemo } from \"react\";\r\nimport { IPrintPageCommonProps } from \"./common\";\r\n\r\ninterface IPrintObjectionProps extends IPrintPageCommonProps {\r\n  isMobile?: boolean;\r\n}\r\n\r\nconst signatureText = \"signature\";\r\n\r\nconst defaultItem = [{ break: false, id: \"\", text: \"\" }];\r\n\r\nexport const PrintObjection: React.FC<IPrintObjectionProps> = ({ values }) => {\r\n  // Get strings required to render document\r\n  const { currentLanguage, strings } = useLanguage();\r\n  const printContext = useContext(PrintContext);\r\n\r\n  const concerns = printContext.items[PrintValueType.CONCERNS] ?? defaultItem;\r\n\r\n  const suggestions =\r\n    printContext.items[PrintValueType.SUGGESTIONS] ?? defaultItem;\r\n\r\n  const [signature] =\r\n    printContext.items[PrintValueType.SIGNATURE] ?? defaultItem;\r\n\r\n  const hasSignature = signature.text === signatureText && values.withSignature;\r\n  const withDateStamp = useMemo(\r\n    () =>\r\n      hasSignature ? (\r\n        <span style={{ fontSize: \"1.25em\", paddingLeft: 24 }}>\r\n          {new Date(values.authority.date).toLocaleDateString()}\r\n        </span>\r\n      ) : null,\r\n    [hasSignature, values.authority.date]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      printContext.onValues([\r\n        {\r\n          field: PrintValueType.CONCERNS,\r\n          text: values.objection.concerns,\r\n        },\r\n        {\r\n          field: PrintValueType.SUGGESTIONS,\r\n          text: values.objection.suggestedChanges,\r\n        },\r\n        ...(values.authority.signature\r\n          ? [\r\n              {\r\n                field: PrintValueType.SIGNATURE,\r\n                text: signatureText,\r\n              },\r\n            ]\r\n          : []),\r\n      ]);\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const addSpace = useMemo(\r\n    () => concerns.reduce((sum, next) => sum + (next.break ? 1 : 0), 0),\r\n    [concerns]\r\n  );\r\n\r\n  const signatureImage = useMemo(\r\n    () =>\r\n      hasSignature && (\r\n        <span id=\"signature\">\r\n          <img\r\n            alt=\"signature\"\r\n            src={values.authority.signature}\r\n            style={{ display: \"block\" }}\r\n          />\r\n        </span>\r\n      ),\r\n    [hasSignature, values.authority.signature]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {concerns.map((concern, index) => (\r\n        <React.Fragment key={index}>\r\n          <PrintBreak {...breakProps(concern.break, 2, index === 0)} />\r\n          <Grid alignItems=\"center\" container direction=\"column\">\r\n            <Grid item container xs={11}>\r\n              <PrintLine\r\n                label={index === 0 && \"Grounds of Objection*:\"}\r\n                minLines={index === 0 && concerns.length === 1 ? 5 : 1}\r\n                onParagraph={(size) =>\r\n                  printContext.onFieldSize(concern.id, size)\r\n                }\r\n                value={`${concern.text}\\n`}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n      ))}\r\n      {suggestions.map((suggestion, index) => (\r\n        <React.Fragment key={index}>\r\n          <PrintBreak\r\n            {...(index === 0 && !suggestion.break\r\n              ? { gapSize: addSpace ? addSpace + 1 : 2 }\r\n              : breakProps(suggestion.break, 2))}\r\n          />\r\n          <Grid alignItems=\"center\" container direction=\"column\">\r\n            <Grid item container xs={11}>\r\n              {index === 0 && (\r\n                <Grid item>\r\n                  <Typography paragraph variant=\"body1\">\r\n                    Are there any changes that could be made to the proposal\r\n                    that would address your concern(s)? If so, please provide\r\n                    details below\r\n                  </Typography>\r\n                </Grid>\r\n              )}\r\n              <PrintLine\r\n                // extraHeight={concerns.length > 1 && index === 0 ? 14 : 0}\r\n                minLines={index ? 1 : 2}\r\n                onParagraph={(size) =>\r\n                  printContext.onFieldSize(suggestion.id, size)\r\n                }\r\n                value={`${suggestion.text}\\n`}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n      ))}\r\n      <PrintBreak\r\n        {...breakProps(signature.break, 2)}\r\n        gapSize={hasSignature ? 3 : 1}\r\n      />\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        {currentLanguage === \"english\" ? (\r\n          <Grid item container xs={11}>\r\n            <PrintLine\r\n              xs={8}\r\n              offset={hasSignature ? -64 : 0}\r\n              label=\"Signed:\"\r\n              singleLine\r\n              value={signatureImage}\r\n            />\r\n            <PrintLine xs={4} label=\"Date:\" value={withDateStamp} />\r\n          </Grid>\r\n        ) : (\r\n          <Grid item container xs={11}>\r\n            <PrintLine\r\n              xs={8}\r\n              offset={hasSignature ? -64 : 0}\r\n              label=\"Signed:\"\r\n              singleLine\r\n              subLabel={<em>{strings.document.signature}</em>}\r\n              value={signatureImage}\r\n            />\r\n            <PrintLine\r\n              xs={4}\r\n              label=\"Date:\"\r\n              subLabel={<em>{strings.document.date}</em>}\r\n              value={withDateStamp}\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  bold: {\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nexport const PrintPrivacy: React.FC = () => {\r\n  const { bold } = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container xs={11}>\r\n        <Typography classes={{ root: bold }} variant=\"body2\">\r\n          Please read the following explanatory advice:\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item container xs={11}>\r\n        <ol>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              To make a submission you should clearly complete the details on\r\n              this form and lodge it with Council either online, by email, mail,\r\n              fax, or in person.\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              State the reason for your objection and how you would be affected\r\n              if a permit was granted.\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              If your submission is about the impact the application could have\r\n              on a property which is not your principal place of residence,\r\n              please provide the address of that property and details of your\r\n              interest in it when stating how you would be affected.\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              To ensure your submission is considered by Council it should be\r\n              received by the date specified in the Notice of Application.\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              Please be aware that copies of submissions received are placed on\r\n              a public file and are not confidential. They may be made available\r\n              to any person as part of the planning process.\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              If, despite your objection, Council decides to grant the permit,\r\n              you can appeal against the decision. Details of the appeal\r\n              procedures are set out on the back of the Notice of Decision that\r\n              you will receive. An appeal must be made on a prescribed form\r\n              (obtainable from the Victorian Civil and Administrative Tribunal)\r\n              and must be accompanied by the prescribed fee. A copy must be\r\n              given to Council, the Applicant and all Objectors. The closing\r\n              date for appeals is 21 days after Council gives notice of its\r\n              decision.\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              The Applicant can also appeal Council's decision. The provisions\r\n              are set out in the Refusal of Planning Application Notice that\r\n              will be issued at that time.\r\n            </Typography>\r\n          </li>\r\n        </ol>\r\n      </Grid>\r\n      <Grid item container xs={11}>\r\n        <Typography classes={{ root: bold }} variant=\"body2\">\r\n          Privacy collection notice:\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item container xs={11}>\r\n        <Typography paragraph variant=\"body2\">\r\n          Your objection and the personal information on this form is collected\r\n          by Council for the purposes of the planning process as set out in the\r\n          Planning and Environment Act 1987 (PE Act).\r\n          <br />\r\n          <br />\r\n          If you do not provide your name and address, Council will not be able\r\n          to consider your objection.\r\n          <br />\r\n          <br />\r\n          Your objection will be available at the Council office for any person\r\n          to inspect and copies may be made available on request to any person\r\n          for the relevant period set out in the PE Act.\r\n          <br />\r\n          <br />\r\n          You must not submit any personal information or copyright material of\r\n          third parties without their informed consent. By submitting the\r\n          material, you agree that the use of the material as detailed above\r\n          does not breach any third party’s right to privacy and copyright.\r\n          <br />\r\n          <br />\r\n          You can request access to your personal information by contacting\r\n          Council.\r\n        </Typography>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { PrintLine } from \"components/print-line\";\r\nimport React from \"react\";\r\nimport { IPrintPageCommonProps } from \"./common\";\r\n\r\nexport const PrintProposal: React.FC<IPrintPageCommonProps> = ({ values }) => (\r\n  <React.Fragment>\r\n    <Grid item container xs={11}>\r\n      <Typography paragraph variant=\"h6\">\r\n        Details of objection to Planning Permit\r\n      </Typography>\r\n    </Grid>\r\n    <Grid item container xs={11}>\r\n      <PrintLine\r\n        label=\"To (name of applicant):\"\r\n        value={values.proposal.applicationName}\r\n      />\r\n      <PrintLine\r\n        label=\"For (description of proposal):\"\r\n        value={values.proposal.description}\r\n      />\r\n      <PrintLine\r\n        label=\"At (desctription of land):\"\r\n        value={values.proposal.applicantLand}\r\n      />\r\n    </Grid>\r\n  </React.Fragment>\r\n);\r\n","import {\r\n  LINE_ENDING_PATTERN,\r\n  TERMINATORS_PATTERN,\r\n} from \"common/constants/patterns\";\r\nimport { v4 } from \"uuid\";\r\nimport { IPrintData } from \"./types\";\r\n\r\ntype TextSplitter = (value: string) => string[];\r\n\r\ninterface IPrintHelperSettings<Type> {\r\n  offestType: Type;\r\n  paragraph: {\r\n    allowedLimit: number;\r\n    maxSize: number;\r\n    minSize: number;\r\n  };\r\n  pageSize: {\r\n    initialOffset: number;\r\n    initialPage: number;\r\n    regularPage: number;\r\n  };\r\n  separator: string;\r\n}\r\n\r\nexport interface IPrintHelperConfig<Type> {\r\n  offestType?: Type;\r\n  paragraph?: {\r\n    allowedLimit?: number;\r\n    maxSize?: number;\r\n    minSize?: number;\r\n  };\r\n  pageSize?: {\r\n    initialOffset?: number;\r\n    initialPage?: number;\r\n    regularPage?: number;\r\n  };\r\n  separator?: string;\r\n}\r\n\r\nexport class PrintHelper<Type> {\r\n  private settings: IPrintHelperSettings<Type>;\r\n\r\n  // ================\r\n  //  STATIC METHODS\r\n  // ================\r\n\r\n  // Split text block into paragraphs\r\n  private static splitOnLineEndings = (text: string) =>\r\n    text\r\n      .split(LINE_ENDING_PATTERN)\r\n      .reduce(\r\n        (strings, value, index) =>\r\n          index % 3 === 0 ? [...strings, `${value.trim()}\\n`] : strings,\r\n        [] as string[]\r\n      );\r\n\r\n  // Split text block into sentences\r\n  private static splitOnTerminators = (text: string) =>\r\n    text\r\n      .split(TERMINATORS_PATTERN)\r\n      .reduceRight(([prev = \"\", ...rest], next, index) => {\r\n        // Add the terminator and trim\r\n        if (index % 3 === 0) {\r\n          return [`${next}${prev}`.trim(), ...rest];\r\n        }\r\n\r\n        // Add the last word\r\n        if (index % 3 === 1) {\r\n          return [`${next}${prev || \"\"}`, ...rest];\r\n        }\r\n\r\n        // Start a new string chain\r\n        return prev ? [next, prev, ...rest] : [next, ...rest];\r\n      }, [] as string[]);\r\n\r\n  // Process the incoming strings to generate a list of print items\r\n  private static toPrintQueue = <Type>(paragraphs: string[], field: Type) =>\r\n    paragraphs.map((next, index) => {\r\n      const id = v4();\r\n\r\n      return {\r\n        id,\r\n        break: false,\r\n        field,\r\n        index,\r\n        ready: false,\r\n        size: 0,\r\n        text: next,\r\n      };\r\n    });\r\n\r\n  // =============\r\n  //  CONSTRUCTOR\r\n  // =============\r\n\r\n  constructor(config: IPrintHelperConfig<Type> = {}) {\r\n    this.settings = {\r\n      offestType: (config.offestType ?? \"\") as Type,\r\n      pageSize: {\r\n        initialOffset: 80,\r\n        initialPage: 450,\r\n        regularPage: 780,\r\n        ...config.pageSize,\r\n      },\r\n      paragraph: {\r\n        allowedLimit: 2500,\r\n        maxSize: 800,\r\n        minSize: 400,\r\n        ...config.paragraph,\r\n      },\r\n      separator: config.separator ?? \" \",\r\n    };\r\n  }\r\n\r\n  // ====================\r\n  //  INTERNAL FUNCTIONS\r\n  // ====================\r\n\r\n  // Join incoming strings according to settings\r\n  private assembleStrings = (value: string[]) =>\r\n    value.reduce((acc, next) => {\r\n      const [prev = \"\"] = acc.slice(-1);\r\n      const rest = acc.slice(0, -1);\r\n\r\n      if (\r\n        prev.length > this.settings.paragraph.minSize ||\r\n        prev.length + next.length > this.settings.paragraph.maxSize\r\n      ) {\r\n        return [...rest, ...(prev ? [prev] : []), next];\r\n      }\r\n\r\n      return [\r\n        ...rest,\r\n        prev ? [prev, next].join(this.settings.separator) : next,\r\n      ];\r\n    }, [] as string[]);\r\n\r\n  // Calculate the page breaks associated with each print item\r\n  private calculateBreaks = (items: Array<IPrintData<Type>>) => {\r\n    let onInitialPage = true;\r\n    let runningTotal = 0;\r\n\r\n    return items.map((item) => {\r\n      // Get page maximum size based on initial page\r\n      const compareTo = onInitialPage\r\n        ? this.settings.pageSize.initialPage\r\n        : this.settings.pageSize.regularPage;\r\n\r\n      // Get offset for current page\r\n      const topOffset =\r\n        item.index === 0 && item.field === this.settings.offestType\r\n          ? this.settings.pageSize.initialOffset\r\n          : 0;\r\n\r\n      // Get current height offset\r\n      runningTotal += item.size + topOffset;\r\n\r\n      if (runningTotal > compareTo) {\r\n        onInitialPage = false;\r\n        runningTotal = 0;\r\n\r\n        return { ...item, break: true };\r\n      }\r\n\r\n      return item;\r\n    });\r\n  };\r\n\r\n  // Create a text processing function\r\n  private createProcessor =\r\n    (\r\n      preProcessor: TextSplitter,\r\n      postProcessor: TextSplitter = (value) => [value]\r\n    ) =>\r\n    (value: string) =>\r\n      preProcessor(value).reduce(\r\n        (strings, textBlock = \"\") => [\r\n          ...strings,\r\n          ...(textBlock.length < this.settings.paragraph.allowedLimit\r\n            ? !textBlock\r\n              ? []\r\n              : [textBlock]\r\n            : postProcessor(textBlock)),\r\n        ],\r\n        [] as string[]\r\n      );\r\n\r\n  // Generate paragraphs from a block of raw text\r\n  private generateParagraphs = this.createProcessor(\r\n    PrintHelper.splitOnLineEndings,\r\n    this.createProcessor((value: string) =>\r\n      this.assembleStrings(PrintHelper.splitOnTerminators(value))\r\n    )\r\n  );\r\n\r\n  // ====================\r\n  //  EXTERNAL FUNCTIONS\r\n  // ====================\r\n\r\n  // Update the print queue and assess if items are 'Ready'\r\n  public calculatePrintBreaks = (items: Array<IPrintData<Type>>) =>\r\n    this.calculateBreaks(items);\r\n\r\n  // Create a list of print items based on a given Type\r\n  public getPrintQueue = (text: string, field: Type) => {\r\n    const paragraphs = this.generateParagraphs(text.trim());\r\n    const printQueue = PrintHelper.toPrintQueue(paragraphs, field);\r\n\r\n    return printQueue;\r\n  };\r\n\r\n  // Update the print queue and assess if items are 'Ready'\r\n  public updatePrintQueue = (\r\n    prevItems: Array<IPrintData<Type>>,\r\n    id: string,\r\n    update: Partial<IPrintData<Type>>\r\n  ) => {\r\n    if (!id) {\r\n      return { items: prevItems, ready: false };\r\n    }\r\n\r\n    const nextItems = prevItems.map((item) =>\r\n      item.id === id ? { ...item, ...update } : item\r\n    );\r\n\r\n    if (nextItems.some((item) => !item.ready)) {\r\n      return { items: nextItems, ready: false };\r\n    }\r\n\r\n    return {\r\n      items: this.calculateBreaks(nextItems),\r\n      ready: true,\r\n    };\r\n  };\r\n}\r\n","import {\r\n  PropsWithChildren,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n} from \"react\";\r\nimport { defaultPrintState, PrintContext } from \"./context\";\r\nimport { IPrintHelperConfig, PrintHelper } from \"./helper\";\r\nimport { createPrintReducer } from \"./reducer\";\r\nimport {\r\n  IPrintContext,\r\n  IPrintData,\r\n  IPrintState,\r\n  PrintContextAction,\r\n  PrintContextStatus,\r\n} from \"./types\";\r\n\r\ninterface IPrintProviderProps<Type extends string = string> {\r\n  config: IPrintHelperConfig<Type>;\r\n  onReady: () => void;\r\n  resizeTimout: number;\r\n}\r\n\r\nexport const PrintProvider = <Type extends string = string>({\r\n  children,\r\n  config,\r\n  onReady,\r\n  resizeTimout,\r\n}: PropsWithChildren<IPrintProviderProps<Type>>) => {\r\n  const printReducer = useMemo(\r\n    () => createPrintReducer(new PrintHelper(config)),\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const [state, dispatch] = useReducer(\r\n    printReducer,\r\n    defaultPrintState as IPrintState<Type>\r\n  );\r\n\r\n  const onFieldBreak = useCallback((id: string, shouldBreak: boolean) => {\r\n    dispatch({\r\n      id,\r\n      break: shouldBreak,\r\n      type: PrintContextAction.SET_BREAK,\r\n    });\r\n  }, []);\r\n\r\n  const onFieldSize = useCallback(\r\n    (id: string, size: number) => {\r\n      dispatch({ id, size, type: PrintContextAction.SET_SIZE });\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (state.status !== PrintContextStatus.CALCULATING) {\r\n        return;\r\n      }\r\n\r\n      dispatch({ type: PrintContextAction.SET_DONE });\r\n      onReady();\r\n    },\r\n    [state.status] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(() => {\r\n        dispatch({ type: PrintContextAction.SET_SKIP });\r\n      }, resizeTimout);\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const onValues = useCallback(\r\n    (queue: Array<{ field: Type; text: string }>) => {\r\n      dispatch({\r\n        queue,\r\n        type: PrintContextAction.ADD_QUEUE,\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // Items sorted by their type\r\n  const items = useMemo(\r\n    () =>\r\n      state.items.reduce(\r\n        (sorted, item) => ({\r\n          ...sorted,\r\n          [item.field]: [...(sorted[item.field] ?? []), item],\r\n        }),\r\n        {} as Record<Type, Array<IPrintData<Type>>>\r\n      ),\r\n    [state.items]\r\n  );\r\n\r\n  return (\r\n    <PrintContext.Provider\r\n      value={\r\n        {\r\n          items,\r\n          onFieldBreak,\r\n          onFieldSize,\r\n          onValues,\r\n        } as unknown as IPrintContext<string>\r\n      }\r\n    >\r\n      {children}\r\n    </PrintContext.Provider>\r\n  );\r\n};\r\n","import { PrintHelper } from \"./helper\";\r\nimport {\r\n  IPrintState,\r\n  PrintContextAction,\r\n  PrintContextActions,\r\n  PrintContextStatus,\r\n} from \"./types\";\r\n\r\nexport const createPrintReducer = <Type>(printHelper: PrintHelper<Type>) => {\r\n  const reducer = (\r\n    state: IPrintState<Type>,\r\n    action: PrintContextActions<Type>\r\n  ): IPrintState<Type> => {\r\n    // If 'Done' state, then no further processing should occur\r\n    if (state.status === PrintContextStatus.DONE) {\r\n      return state;\r\n    }\r\n\r\n    switch (action.type) {\r\n      case PrintContextAction.ADD_QUEUE:\r\n        if (state.status !== PrintContextStatus.IDLE) {\r\n          return state;\r\n        }\r\n\r\n        return action.queue.reduce(\r\n          (prev, item) =>\r\n            reducer(prev, { ...item, type: PrintContextAction.SET_TEXT }),\r\n          state\r\n        );\r\n\r\n      case PrintContextAction.SET_TEXT:\r\n        return {\r\n          items: [\r\n            ...state.items,\r\n            ...printHelper.getPrintQueue(action.text, action.field),\r\n          ],\r\n          status: PrintContextStatus.PROCESSING,\r\n        };\r\n\r\n      case PrintContextAction.SET_BREAK:\r\n        return {\r\n          ...state,\r\n          items: state.items.map((item) =>\r\n            item.id === action.id ? { ...item, break: action.break } : item\r\n          ),\r\n        };\r\n\r\n      case PrintContextAction.SET_DONE:\r\n        return { ...state, status: PrintContextStatus.DONE };\r\n\r\n      case PrintContextAction.SET_SIZE:\r\n        const updates = printHelper.updatePrintQueue(state.items, action.id, {\r\n          size: action.size,\r\n          ready: true,\r\n        });\r\n\r\n        return {\r\n          ...state,\r\n          items: updates.items,\r\n          status: updates.ready\r\n            ? PrintContextStatus.CALCULATING\r\n            : PrintContextStatus.RENDERING,\r\n        };\r\n\r\n      case PrintContextAction.SET_SKIP:\r\n        return PrintContextStatus.RENDERING >= state.status\r\n          ? {\r\n              items: printHelper.calculatePrintBreaks(state.items),\r\n              status: PrintContextStatus.CALCULATING,\r\n            }\r\n          : state;\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  return reducer;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.b931f009.gif\";","import Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { NON_BREAKING_SPACE } from \"common/constants/app\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { PrintLine } from \"components/print-line\";\r\nimport Logo from \"images/logo.gif\";\r\nimport React from \"react\";\r\nimport { IPrintPageCommonProps } from \"./common\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  box: {\r\n    border: \"1px solid #000\",\r\n    padding: 8,\r\n    width: 180,\r\n  },\r\n  boxTextBody: { fontSize: \"7.5pt\", marginBottom: 8 },\r\n  boxTextTitle: { fontSize: \"7.5pt\", fontWeight: 600, marginBottom: 8 },\r\n  formTitle: { fontWeight: 600 },\r\n  label: {\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n  },\r\n  languageLabel: {\r\n    color: \"#C22\",\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n  },\r\n  value: {\r\n    fontSize: 24,\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nexport const PrintHeader: React.FC<IPrintPageCommonProps> = ({ values }) => {\r\n  const { currentLanguage, strings } = useLanguage();\r\n  const {\r\n    box,\r\n    boxTextBody,\r\n    boxTextTitle,\r\n    formTitle,\r\n    languageLabel,\r\n    ...classes\r\n  } = useStyles();\r\n\r\n  return (\r\n    <Grid item container xs={11}>\r\n      <Grid item xs={6}>\r\n        <Typography classes={{ root: formTitle }} variant=\"h4\">\r\n          Objection to Grant a Planning Permit\r\n        </Typography>\r\n        <Typography classes={{ root: languageLabel }} variant=\"body1\">\r\n          {currentLanguage === \"english\" ? (\r\n            NON_BREAKING_SPACE\r\n          ) : (\r\n            <em>\r\n              Language: <strong>{strings.nameEnglish}</strong>\r\n            </em>\r\n          )}\r\n        </Typography>\r\n        <br />\r\n        <PrintLine\r\n          classes={classes}\r\n          label=\"Application Number:\"\r\n          subLabel=\"*Indicates required fields to be completed\"\r\n          value={values.proposal.applicationNumber}\r\n        />\r\n      </Grid>\r\n      <Grid container item xs={6} direction=\"column\" alignItems=\"flex-end\">\r\n        <Box>\r\n          <img alt=\"City of Monash\" src={Logo} width={200} />\r\n          <br />\r\n          <br />\r\n        </Box>\r\n        <Box className={box}>\r\n          <Typography classes={{ root: boxTextTitle }}>\r\n            Office Use Only\r\n          </Typography>\r\n          <Typography classes={{ root: boxTextBody }}>\r\n            Date Received: ...................................\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","export const PUBLIC_AMENITY =\r\n  \"https://www.monash.vic.gov.au/About-Us/Laws-Rules/Local-Law-No-3-Community-Amenity\";\r\n\r\nexport const PROPOSAL_LINK =\r\n  \"https://www.monash.vic.gov.au/About-Us/Council/Have-Your-Say/Proposed-development-at-251-261-Springvale-Road-Glen-Waverley\";\r\n\r\nexport const ZOOM_LINK =\r\n  \"https://us04web.zoom.us/j/72925141821?pwd=TGxvbyt4SkV2TGxHK1Naa0lWQlMwZz09\";\r\n\r\nexport const EMAIL = \"awcostabile@outlook.com\";\r\n\r\nexport const ZOOM_ID = \"729 2514 1821\";\r\n\r\nexport const ZOOM_PASSWORD = \"GLEN3150\";\r\n\r\nexport const LOCAL_STORAGE_KEY = \"objection-data\";\r\n\r\nexport const NON_BREAKING_SPACE = \"\\u00A0\";\r\n\r\nexport const RESIZE_TIMEOUT = 1000;\r\n\r\nexport const TEXT_COLOR = \"#048\";\r\n","import { ILanguage } from \"common/models/language\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\n\r\nexport enum AppContextAction {\r\n  DONE,\r\n  LANGUAGE,\r\n  PRINT,\r\n  RESET,\r\n  SAVE,\r\n  VIEW,\r\n}\r\n\r\nexport enum AppView {\r\n  FORM,\r\n  PRINT,\r\n}\r\n\r\nexport interface IAppContextState {\r\n  language: string;\r\n  save: boolean;\r\n  values: IObjectionModel;\r\n  view: AppView;\r\n}\r\n\r\nexport interface IAppContext {\r\n  printData: (values: IObjectionModel) => void;\r\n  resetData: () => void;\r\n  setLanguage: (language: string) => void;\r\n  saveData: (values: IObjectionModel) => void;\r\n  toFormView: () => void;\r\n  toPrintView: () => void;\r\n  state: IAppContextState;\r\n  strings: ILanguage;\r\n}\r\n\r\nexport type AppContextActions =\r\n  | {\r\n      language: string;\r\n      type: AppContextAction.LANGUAGE;\r\n    }\r\n  | {\r\n      warningText: string;\r\n      values: IObjectionModel;\r\n      type: AppContextAction.PRINT;\r\n    }\r\n  | {\r\n      type: AppContextAction.DONE | AppContextAction.RESET;\r\n    }\r\n  | {\r\n      values: IObjectionModel;\r\n      type: AppContextAction.SAVE;\r\n    }\r\n  | {\r\n      view: AppView;\r\n      type: AppContextAction.VIEW;\r\n    };\r\n","export const classNames = (\r\n  ...args: Array<string | 0 | null | false | undefined>\r\n) =>\r\n  Array.from(args)\r\n    .filter((className) => !!className)\r\n    .join(\" \");\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport React, { ReactNode } from \"react\";\r\nimport { classNames } from \"utils/class-names\";\r\nimport { IPrintLineCommonProps } from \"./types\";\r\n\r\ninterface IPrintLineLabelStyles {\r\n  hidden?: boolean;\r\n}\r\n\r\ninterface IPrintLineLabelProps\r\n  extends IPrintLineCommonProps<\"label\">,\r\n    IPrintLineLabelStyles {\r\n  label?: ReactNode;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, IPrintLineLabelStyles>(() => ({\r\n  label: ({ hidden }) => ({\r\n    ...(hidden ? { opacity: 0 } : { color: \"#333\" }),\r\n    fontSize: \"1rem\",\r\n  }),\r\n}));\r\n\r\nexport const PrintLineLabel: React.FC<IPrintLineLabelProps> = React.memo(\r\n  ({ classes: classesProp = {}, hidden, label }) => {\r\n    const classes = useStyles({ hidden });\r\n\r\n    if (!label) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <span className={classNames(classes.label, classesProp.label)}>\r\n        {label}{\" \"}\r\n      </span>\r\n    );\r\n  },\r\n  () => true\r\n);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TEXT_DOTS } from \"common/constants/print\";\r\nimport React, { ReactNode } from \"react\";\r\nimport { classNames } from \"utils/class-names\";\r\nimport { PrintLineLabel } from \"./label\";\r\nimport { IPrintLineCommonProps } from \"./types\";\r\n\r\ninterface IPrintLineDotsProps extends IPrintLineCommonProps<\"lineHeight\"> {\r\n  label?: ReactNode;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  dots: {\r\n    color: \"#888\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n    zIndex: 0,\r\n  },\r\n}));\r\n\r\nexport const PrintLineDots: React.FC<IPrintLineDotsProps> = ({\r\n  classes: classesProp = {},\r\n  label,\r\n}) => {\r\n  const classes = useStyles().dots;\r\n\r\n  return (\r\n    <Typography\r\n      align=\"justify\"\r\n      classes={{ root: classNames(classes, classesProp.lineHeight) }}\r\n      noWrap\r\n      variant={label ? \"body1\" : \"body2\"}\r\n    >\r\n      <PrintLineLabel hidden label={label} />\r\n      {TEXT_DOTS}\r\n    </Typography>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { ReactNode } from \"react\";\r\nimport { classNames } from \"utils/class-names\";\r\nimport { IPrintLineCommonProps } from \"./types\";\r\n\r\ninterface IPrintLineSubLabelProps extends IPrintLineCommonProps<\"subLabel\"> {\r\n  subLabel?: ReactNode;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  subLabel: {\r\n    color: \"#333\",\r\n    fontSize: \"0.75rem\",\r\n  },\r\n}));\r\n\r\nexport const PrintLineSubLabel: React.FC<IPrintLineSubLabelProps> = React.memo(\r\n  ({ classes: classesProp = {}, subLabel }) => {\r\n    const classes = useStyles();\r\n\r\n    if (!subLabel) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Typography\r\n        align=\"justify\"\r\n        classes={{ root: classNames(classes.subLabel, classesProp.subLabel) }}\r\n        variant=\"subtitle2\"\r\n      >\r\n        {subLabel}\r\n      </Typography>\r\n    );\r\n  },\r\n  () => true\r\n);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TEXT_COLOR } from \"common/constants/app\";\r\nimport React, { ReactNode, useCallback } from \"react\";\r\nimport { classNames } from \"utils/class-names\";\r\nimport { PrintLineLabel } from \"./label\";\r\nimport { IPrintLineCommonProps } from \"./types\";\r\n\r\ninterface IPrintLineValueProps\r\n  extends IPrintLineCommonProps<\"label\" | \"lineHeight\" | \"value\"> {\r\n  setParagraph: (element: HTMLParagraphElement) => void;\r\n  label?: ReactNode;\r\n  value?: ReactNode;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  value: {\r\n    color: TEXT_COLOR,\r\n    whiteSpace: \"pre-wrap\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport const PrintLineValue: React.FC<IPrintLineValueProps> = ({\r\n  classes: classesProp = {},\r\n  setParagraph,\r\n  label,\r\n  value,\r\n}) => (\r\n  <Typography\r\n    align=\"justify\"\r\n    classes={{\r\n      root: classNames(\r\n        useStyles().value,\r\n        classesProp.lineHeight,\r\n        classesProp.value\r\n      ),\r\n    }}\r\n    ref={useCallback(\r\n      (element: HTMLParagraphElement | null) => {\r\n        if (!element) {\r\n          return;\r\n        }\r\n\r\n        setParagraph(element);\r\n      },\r\n      [] // eslint-disable-line react-hooks/exhaustive-deps\r\n    )}\r\n    variant=\"body2\"\r\n  >\r\n    <PrintLineLabel classes={{ label: classesProp.label }} label={label} />\r\n    {value}\r\n  </Typography>\r\n);\r\n","import Grid, { GridClassKey, GridProps } from \"@material-ui/core/Grid\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport React, { ReactNode, useCallback, useMemo, useState } from \"react\";\r\nimport { classNames } from \"utils/class-names\";\r\nimport { PrintLineDots } from \"./dots\";\r\nimport { PrintLineSubLabel } from \"./sub-label\";\r\nimport { IPrintLineCommonProps } from \"./types\";\r\nimport { PrintLineValue } from \"./value\";\r\n\r\nexport interface IPrintLineContentProps\r\n  extends IPrintLineCommonProps<\"label\" | \"lineHeight\" | \"subLabel\" | \"value\">,\r\n    Omit<GridProps, \"classes\"> {\r\n  gridClasses?: Partial<Record<GridClassKey, string>>;\r\n  handleParagraph: (\r\n    element: HTMLParagraphElement,\r\n    setLines: (lines: number) => void\r\n  ) => void;\r\n  label?: ReactNode;\r\n  subLabel?: ReactNode;\r\n  value?: ReactNode;\r\n}\r\n\r\ninterface IPrintLineContentStyles {\r\n  ready?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, IPrintLineContentStyles>(() => ({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  reRender: {\r\n    position: \"absolute\",\r\n    top: -4,\r\n  },\r\n}));\r\n\r\nexport const PrintLineContent: React.FC<IPrintLineContentProps> = ({\r\n  classes: classesProp = {},\r\n  gridClasses = {},\r\n  handleParagraph,\r\n  label,\r\n  subLabel,\r\n  value,\r\n  xs = 12,\r\n  ...props\r\n}) => {\r\n  const [lines, setLines] = useState<null | number>(null);\r\n  const classes = useStyles({ ready: lines !== null });\r\n\r\n  const setParagraph = useCallback(\r\n    (element: HTMLParagraphElement) => handleParagraph(element, setLines),\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  return (\r\n    <Grid\r\n      {...props}\r\n      classes={{\r\n        ...gridClasses,\r\n        root: classNames(classes.container, gridClasses.root),\r\n      }}\r\n      item\r\n      xs={xs}\r\n    >\r\n      <PrintLineValue\r\n        classes={{\r\n          label: classesProp.label,\r\n          lineHeight: classesProp.lineHeight,\r\n          value: classNames(\r\n            classesProp.value,\r\n            lines !== null && classes.reRender\r\n          ),\r\n        }}\r\n        setParagraph={setParagraph}\r\n        label={label}\r\n        value={value}\r\n      />\r\n      {useMemo(\r\n        () =>\r\n          Array.from(Array(lines ?? 0)).map((_, index) => (\r\n            <PrintLineDots\r\n              classes={{ lineHeight: classesProp.lineHeight }}\r\n              key={`dots-${index}`}\r\n              label={index === 0 && label}\r\n            />\r\n          )),\r\n        [classesProp.lineHeight, label, lines]\r\n      )}\r\n      <PrintLineSubLabel\r\n        classes={{ subLabel: classesProp.subLabel }}\r\n        subLabel={subLabel}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport React, { useCallback } from \"react\";\r\nimport { classNames } from \"utils/class-names\";\r\nimport { sleep } from \"utils/sleep\";\r\nimport { IPrintLineContentProps, PrintLineContent } from \"./content\";\r\n\r\ninterface IPrintLineStyles {\r\n  lineHeight: number;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, IPrintLineStyles>(() => ({\r\n  lineHeight: ({ lineHeight }) => ({\r\n    lineHeight: lineHeight ? `${lineHeight}px` : 0,\r\n  }),\r\n}));\r\n\r\ninterface IPrintLineProps\r\n  extends Omit<IPrintLineContentProps, \"handleParagraph\"> {\r\n  forceHeight?: number;\r\n  lineHeight?: number;\r\n  minLines?: number;\r\n  singleLine?: boolean;\r\n  offset?: number;\r\n  onParagraph?: (size: number) => void;\r\n}\r\n\r\nexport const PrintLine: React.FC<IPrintLineProps> = ({\r\n  classes: classesProp = {},\r\n  lineHeight = 28,\r\n  minLines = 0,\r\n  singleLine = false,\r\n  offset = 0,\r\n  onParagraph,\r\n  ...props\r\n}) => (\r\n  <PrintLineContent\r\n    {...props}\r\n    classes={{\r\n      ...classesProp,\r\n      lineHeight: classNames(\r\n        useStyles({ lineHeight }).lineHeight,\r\n        classesProp.lineHeight\r\n      ),\r\n    }}\r\n    handleParagraph={useCallback(\r\n      async (element: HTMLParagraphElement, setLines) => {\r\n        await sleep(10);\r\n\r\n        // Extract height for Element with respect to any offset\r\n        const height = element.getBoundingClientRect().height - offset;\r\n\r\n        if (singleLine) {\r\n          setLines(1);\r\n        } else {\r\n          // Derive number of lines\r\n          const lines = Math.floor(height / lineHeight);\r\n\r\n          // Set number of lines to be rendered by PrintLine\r\n          setLines(Math.max(lines, minLines));\r\n        }\r\n\r\n        // Update paragraph listener\r\n        if (onParagraph) {\r\n          onParagraph(height);\r\n        }\r\n      },\r\n      [] // eslint-disable-line react-hooks/exhaustive-deps\r\n    )}\r\n  />\r\n);\r\n","import { useContext } from \"react\";\r\nimport { AppContext } from \"common/context/app\";\r\n\r\nexport const useLanguage = () => {\r\n  const { setLanguage, state, strings } = useContext(AppContext);\r\n\r\n  return {\r\n    currentLanguage: state.language,\r\n    setLanguage,\r\n    strings,\r\n  };\r\n};\r\n","import { CSSProperties } from \"@material-ui/core/styles/withStyles\";\r\n\r\ninterface ISideStyle {\r\n  all?: number | string;\r\n  b?: number | string;\r\n  bottom?: number | string;\r\n  l?: number | string;\r\n  left?: number | string;\r\n  r?: number | string;\r\n  right?: number | string;\r\n  t?: number | string;\r\n  top?: number | string;\r\n  x?: number | string;\r\n  y?: number | string;\r\n}\r\n\r\ninterface ISideStyleMapping {\r\n  sides: string[];\r\n  value: string;\r\n}\r\n\r\ninterface ISideStyleValue<Value extends string | number = string | number> {\r\n  top?: Value;\r\n  left?: Value;\r\n  right?: Value;\r\n  bottom?: Value;\r\n}\r\n\r\ninterface ISideStyleOptions {\r\n  asProps?: boolean;\r\n  property: string;\r\n  separator?: string;\r\n  units?: SideStyleUnits;\r\n  value: SideStyleValue;\r\n}\r\n\r\ntype SideStyleUnits = \"%\" | \"px\";\r\n\r\nexport type SideStyleValue = ISideStyle | number | string;\r\n\r\nclass SideStyle {\r\n  private static convert = ({\r\n    asProps,\r\n    property,\r\n    separator = \";\",\r\n    units = \"px\",\r\n    value,\r\n  }: ISideStyleOptions): unknown => {\r\n    if (value === undefined) {\r\n      return asProps ? {} : \"\";\r\n    }\r\n\r\n    if (typeof value === \"number\" || typeof value === \"string\") {\r\n      return asProps\r\n        ? { [property]: value }\r\n        : `${property}: ${SideStyle.toValue(value, units)}`;\r\n    }\r\n\r\n    const b = value.b ?? value.bottom ?? value.y ?? value.all;\r\n    const l = value.l ?? value.left ?? value.x ?? value.all;\r\n    const r = value.r ?? value.right ?? value.x ?? value.all;\r\n    const t = value.t ?? value.top ?? value.y ?? value.all;\r\n\r\n    if (asProps) {\r\n      return t !== undefined && [l, r, b].every((side) => side === t)\r\n        ? SideStyle.convert({\r\n            asProps,\r\n            property,\r\n            separator,\r\n            units,\r\n            value: t,\r\n          })\r\n        : SideStyle.toProps(property, [\r\n            [\"bottom\", b],\r\n            [\"left\", l],\r\n            [\"right\", r],\r\n            [\"top\", t],\r\n          ]);\r\n    }\r\n\r\n    return SideStyle.toShorthand(property, separator, {\r\n      bottom: SideStyle.toValue(b, units),\r\n      left: SideStyle.toValue(l, units),\r\n      right: SideStyle.toValue(r, units),\r\n      top: SideStyle.toValue(t, units),\r\n    });\r\n  };\r\n\r\n  private static toLonghand = (property: string, sides: ISideStyleValue) => {\r\n    const { mapped, total } = SideStyle.toMapped(sides);\r\n\r\n    if (total !== 4 || mapped[0].sides.length === 1) {\r\n      return SideStyle.toStyles(property, mapped);\r\n    }\r\n\r\n    const [first, ...others] = mapped;\r\n\r\n    return [\r\n      `${property}: ${first.value}`,\r\n      ...SideStyle.toStyles(property, others),\r\n    ];\r\n  };\r\n\r\n  private static toMapped = (queue: ISideStyleValue) => {\r\n    // Track how many items exist in total\r\n    let total = 0;\r\n\r\n    // Process queue of items\r\n    const mapped = Object.entries(queue)\r\n      // .filter((item): item is [string, string] => item[] !== undefined)\r\n      .reduce((mappings, [side, value]) => {\r\n        if (value === undefined) {\r\n          return mappings;\r\n        }\r\n\r\n        const prevIndex = mappings.findIndex((prev) => prev.value === value);\r\n\r\n        if (prevIndex >= 0) {\r\n          mappings[prevIndex].sides.push(side);\r\n        } else {\r\n          mappings.push({ value, sides: [side] });\r\n        }\r\n\r\n        total++;\r\n\r\n        return mappings;\r\n      }, [] as ISideStyleMapping[]);\r\n\r\n    return { mapped, total };\r\n  };\r\n\r\n  private static toProps = (\r\n    property: string,\r\n    values: Array<[string, number | string | undefined]>\r\n  ) =>\r\n    values.reduce(\r\n      (styles, [side, value]) =>\r\n        value === undefined\r\n          ? styles\r\n          : {\r\n              ...styles,\r\n              [`${property}${side[0].toUpperCase()}${side.substr(1)}`]: value,\r\n            },\r\n      {} as Record<string, string | number>\r\n    );\r\n\r\n  private static toShorthand = (\r\n    property: string,\r\n    separator: string,\r\n    sides: ISideStyleValue\r\n  ) => {\r\n    const { bottom, left, right, top } = sides;\r\n\r\n    if ([bottom, left, right, top].includes(undefined)) {\r\n      return SideStyle.toLonghand(property, sides).join(separator);\r\n    }\r\n\r\n    if (left !== right) {\r\n      return `${property}: ${top} ${right} ${bottom} ${left}`;\r\n    }\r\n\r\n    if (top !== bottom) {\r\n      return `${property}: ${top} ${left} ${bottom}`;\r\n    }\r\n\r\n    if (top !== left) {\r\n      return `${property}: ${bottom} ${left}`;\r\n    }\r\n\r\n    return `${property}: ${bottom}`;\r\n  };\r\n\r\n  private static toStyles = (property: string, mapped: ISideStyleMapping[]) =>\r\n    mapped.reduce(\r\n      (styels, { sides, value }) => [\r\n        ...styels,\r\n        ...sides.map((side) => `${property}-${side}: ${value}`),\r\n      ],\r\n      [] as Array<string>\r\n    );\r\n\r\n  private static toValue = (\r\n    value?: number | string,\r\n    units: SideStyleUnits = \"px\"\r\n  ) => {\r\n    if (typeof value === \"string\" || typeof value === \"undefined\") {\r\n      return value;\r\n    }\r\n\r\n    if (!value) {\r\n      return `${value}`;\r\n    }\r\n\r\n    return `${value}${units}`;\r\n  };\r\n\r\n  public static createSideStyle = <\r\n    PropKeys extends number | string | symbol = keyof CSSProperties\r\n  >(\r\n    property: string,\r\n    separator?: string\r\n  ) => ({\r\n    toString: (value: SideStyleValue, units?: SideStyleUnits) =>\r\n      SideStyle.convert({ property, separator, value, units }) as string,\r\n    toProps: (value: SideStyleValue, units?: SideStyleUnits) =>\r\n      SideStyle.convert({\r\n        asProps: true,\r\n        property,\r\n        separator,\r\n        value,\r\n        units,\r\n      }) as Record<PropKeys, string | number>,\r\n  });\r\n}\r\n\r\nexport const { createSideStyle } = SideStyle;\r\n","import { createSideStyle } from \"./style-side\";\r\n\r\nexport const marginStyles = createSideStyle<\r\n  \"margin\" | \"marginTop\" | \"marginLeft\" | \"marginRight\" | \"marginBottom\"\r\n>(\"margin\");\r\n\r\nexport const paddingStyles = createSideStyle<\r\n  \"padding\" | \"paddingTop\" | \"paddingLeft\" | \"paddingRight\" | \"paddingBottom\"\r\n>(\"padding\");\r\n","import Grid, { GridJustification } from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { paddingStyles, SideStyle } from \"styles/utils\";\r\nimport { classNames } from \"utils/class-names\";\r\n\r\ninterface IPageSectionStyles {\r\n  className?: string;\r\n  background?: string;\r\n  color?: string;\r\n  fontSize?: string | number;\r\n  height?: number;\r\n  justify?: GridJustification;\r\n  minHeight?: number;\r\n  padding?: SideStyle;\r\n  stretch?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles<\r\n  {},\r\n  Omit<IPageSectionStyles, \"className\" | \"justify\">\r\n>(() => ({\r\n  padding: ({ color, fontSize, padding }) =>\r\n    padding ? { color, fontSize, ...paddingStyles.toProps(padding) } : {},\r\n  root: ({\r\n    background,\r\n    color,\r\n    fontSize,\r\n    height,\r\n    minHeight,\r\n    padding,\r\n    stretch,\r\n  }) => ({\r\n    ...(background ? { background } : {}),\r\n    ...(height ? { height } : {}),\r\n    ...(minHeight ? { minHeight } : {}),\r\n    ...(!padding\r\n      ? {\r\n          ...(color ? { color } : {}),\r\n          ...(fontSize ? { fontSize } : {}),\r\n        }\r\n      : {}),\r\n    ...(stretch ? { flex: \"1 0 auto\" } : {}),\r\n  }),\r\n}));\r\n\r\nexport const PageSection: React.FC<IPageSectionStyles> = ({\r\n  children,\r\n  className,\r\n  justify = \"center\",\r\n  ...props\r\n}) => {\r\n  const classes = useStyles(props);\r\n\r\n  const Wrapper = useMemo(\r\n    (): React.FC =>\r\n      props.padding\r\n        ? ({ children }) => (\r\n            <Grid\r\n              classes={{ root: classNames(classes.padding, className) }}\r\n              container\r\n              item\r\n              justifyContent={justify}\r\n            >\r\n              {children}\r\n            </Grid>\r\n          )\r\n        : React.Fragment,\r\n    [className, classes.padding, justify, props.padding]\r\n  );\r\n\r\n  return (\r\n    <Grid\r\n      classes={{ root: classNames(classes.root, props.padding && className) }}\r\n      container\r\n      item\r\n      justifyContent={props.padding ? undefined : justify}\r\n    >\r\n      <Wrapper>{children}</Wrapper>\r\n    </Grid>\r\n  );\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { PageSection } from \"components/page-section\";\r\nimport React from \"react\";\r\nimport { paddingStyles } from \"styles/utils\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    minHeight: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n  content: {\r\n    ...paddingStyles.toProps(16),\r\n  },\r\n}));\r\n\r\nexport const Content: React.FC = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageSection justify=\"center\" stretch>\r\n      <Grid classes={{ root: classes.root }} item md={8} xs={12}>\r\n        <div className={classes.content}>{children}</div>\r\n      </Grid>\r\n    </PageSection>\r\n  );\r\n};\r\n","import { NON_BREAKING_SPACE } from \"common/constants/app\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { PageSection } from \"components/page-section\";\r\nimport React from \"react\";\r\n\r\nexport const Footer: React.FC = ({ children }) => {\r\n  const { currentLanguage, strings } = useLanguage();\r\n\r\n  return (\r\n    <PageSection\r\n      background=\"#9CE\"\r\n      color=\"#048\"\r\n      fontSize={10}\r\n      justify=\"space-between\"\r\n      padding={{ x: 6, y: 4 }}\r\n    >\r\n      <div>\r\n        {currentLanguage === \"english\"\r\n          ? NON_BREAKING_SPACE\r\n          : `Translation by ${strings.translationBy}`}\r\n      </div>\r\n      <div>{children}</div>\r\n    </PageSection>\r\n  );\r\n};\r\n","import Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Translate from \"@material-ui/icons/Translate\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { language } from \"common/languages\";\r\nimport { PageSection } from \"components/page-section\";\r\nimport React, { useRef, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#FFF\",\r\n    width: 250,\r\n  },\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  icon: {\r\n    display: \"inline-flex\",\r\n    fill: \"#FFF\",\r\n    marginRight: 12,\r\n  },\r\n  menu: {\r\n    justifyContent: \"center\",\r\n  },\r\n  option: {\r\n    justifyContent: \"center\",\r\n  },\r\n  root: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      justifyContent: \"center !important\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst toLabel = (current: string, friendly: string, name: string) => {\r\n  if (current === \"english\") {\r\n    return name;\r\n  }\r\n\r\n  return `${name} (${friendly})`;\r\n};\r\n\r\nexport const Header: React.FC = () => {\r\n  const anchorEl = useRef<HTMLButtonElement | null>(null);\r\n  const { currentLanguage, setLanguage, strings } = useLanguage();\r\n  const [open, setOpen] = useState(false);\r\n  const { button, container, icon, menu, option, root } = useStyles();\r\n\r\n  return (\r\n    <PageSection\r\n      className={root}\r\n      background=\"#28C\"\r\n      color=\"#F2F2F2\"\r\n      justify=\"space-between\"\r\n      padding={{ all: 16 }}\r\n    >\r\n      <Typography variant=\"h6\">{strings.titles.header}</Typography>\r\n      <div className={container}>\r\n        <Button\r\n          aria-controls={open ? \"menu-list-grow\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          classes={{ root: button }}\r\n          onClick={() => setOpen(true)}\r\n          ref={anchorEl}\r\n        >\r\n          {strings.icon === \"true\" && (\r\n            <Translate classes={{ root: icon }} fontSize=\"small\" />\r\n          )}\r\n          {toLabel(currentLanguage, strings.nameEnglish, strings.name)}\r\n        </Button>\r\n        <Popper\r\n          anchorEl={anchorEl.current}\r\n          disablePortal\r\n          open={open}\r\n          role={undefined}\r\n          style={{ zIndex: 999 }}\r\n          transition\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                marginTop: 36,\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={() => setOpen(false)}>\r\n                  <MenuList autoFocusItem={open} classes={{ root: menu }}>\r\n                    {language.meta.map(({ friendly, label, value }) => (\r\n                      <MenuItem\r\n                        classes={{ root: option }}\r\n                        key={value}\r\n                        onClick={() => {\r\n                          setOpen(false);\r\n                          setLanguage(value);\r\n                        }}\r\n                      >\r\n                        <span>{toLabel(value, friendly, label)}</span>\r\n                      </MenuItem>\r\n                    ))}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </PageSection>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    minHeight: \"100%\",\r\n  },\r\n}));\r\n\r\nexport const PageLayout: React.FC = ({ children }) => {\r\n  const { root } = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      alignItems=\"center\"\r\n      classes={{ root }}\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"space-between\"\r\n    >\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/frame.f70fde3c.svg\";","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  fade: {\r\n    position: \"absolute\",\r\n    height: 8,\r\n    boxShadow: \"0 0 8px rgba(255,255,255, 1)\",\r\n    width: \"100%\",\r\n    zIndex: 10,\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n}));\r\n\r\nexport const ExpandableOverlay: React.FC = () => {\r\n  const { fade, root } = useStyles();\r\n\r\n  return (\r\n    <div className={root}>\r\n      <div className={fade}></div>\r\n    </div>\r\n  );\r\n};\r\n","import Collapse from \"@material-ui/core/Collapse\";\r\nimport React from \"react\";\r\nimport { ExpandableOverlay } from \"./expandable-overlay\";\r\n\r\ninterface IExpandableProps {\r\n  sneekPeek?: number;\r\n  open?: boolean;\r\n}\r\n\r\nexport const Expandable: React.FC<IExpandableProps> = ({\r\n  children,\r\n  sneekPeek,\r\n  open,\r\n}) => (\r\n  <React.Fragment>\r\n    <Collapse collapsedSize={sneekPeek} in={open}>\r\n      {children}\r\n    </Collapse>\r\n    {sneekPeek && !open && <ExpandableOverlay />}\r\n  </React.Fragment>\r\n);\r\n","import TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { useField } from \"formik\";\r\n\r\nconst fieldProps = {\r\n  fullWidth: true,\r\n  InputLabelProps: { shrink: true },\r\n  variant: \"outlined\" as TextFieldProps[\"variant\"],\r\n};\r\n\r\ninterface IFormikFieldProps extends Omit<TextFieldProps, \"onChange\"> {\r\n  name: string;\r\n  readonly?: boolean;\r\n}\r\n\r\nexport const FormikField: React.FC<IFormikFieldProps> = ({\r\n  name,\r\n  readonly,\r\n  ...props\r\n}) => {\r\n  const [{ onBlur, onChange }, { error, touched, value }] = useField(name);\r\n  const { strings } = useLanguage();\r\n\r\n  const hasError = touched && !!error;\r\n  const label = strings.labels[name];\r\n  const placeholder = strings.placeholder[name];\r\n\r\n  return (\r\n    <TextField\r\n      {...fieldProps}\r\n      {...props}\r\n      aria-readonly={readonly || props[\"aria-readonly\"]}\r\n      error={hasError}\r\n      label={typeof label === \"string\" ? label : props.label}\r\n      helperText={hasError && error}\r\n      name={name}\r\n      onBlur={(event) => {\r\n        if (readonly) {\r\n          return;\r\n        }\r\n\r\n        onBlur(event);\r\n      }}\r\n      onChange={(event) => {\r\n        if (readonly) {\r\n          return;\r\n        }\r\n\r\n        onChange(event);\r\n      }}\r\n      placeholder={\r\n        typeof placeholder === \"string\" ? placeholder : props.placeholder\r\n      }\r\n      value={value}\r\n    />\r\n  );\r\n};\r\n","import Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles<Theme, { show: boolean }>(() => ({\r\n  root: ({ show }) => ({\r\n    transform: show ? \"rotate(180deg)\" : \"rotate(0)\",\r\n    transition: \"transform 300ms ease\",\r\n  }),\r\n}));\r\n\r\ninterface IHideButton {\r\n  show: boolean;\r\n  toggleShow: () => void;\r\n}\r\n\r\nexport const HideButton: React.FC<IHideButton> = ({ show, toggleShow }) => {\r\n  const { strings } = useLanguage();\r\n\r\n  return (\r\n    <Button onClick={toggleShow} variant=\"text\" size=\"small\">\r\n      {show ? strings.buttons.hide : strings.buttons.show}\r\n      <ArrowDropDown classes={useStyles({ show })} />\r\n    </Button>\r\n  );\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { Expandable } from \"components/expandable\";\r\nimport { HideButton } from \"components/hide-button\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport const ObjectionFormInformation: React.FC<{ italics?: string }> = ({\r\n  italics,\r\n}) => {\r\n  const [lingering, setLingering] = useState(true);\r\n  const [showText, setShowText] = useState(true);\r\n  const { strings } = useLanguage();\r\n\r\n  useEffect(() => {\r\n    if (!showText) {\r\n      setTimeout(() => setLingering(false), 300);\r\n    }\r\n  }, [showText]);\r\n\r\n  return (\r\n    <Expandable open={showText} sneekPeek={100}>\r\n      <Grid container justifyContent=\"space-between\">\r\n        <Grid item>\r\n          <Typography variant=\"h6\" align=\"justify\">\r\n            {strings.titles.about}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <HideButton\r\n            show={showText}\r\n            toggleShow={() => {\r\n              if (!showText) {\r\n                setLingering(true);\r\n                setShowText(true);\r\n              } else {\r\n                setShowText(false);\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <hr />\r\n      {lingering || showText ? (\r\n        <>\r\n          {strings.info.description.map((description, index) => (\r\n            <React.Fragment key={index}>\r\n              <br />\r\n              <Typography variant=\"body1\" align=\"justify\">\r\n                {description}\r\n              </Typography>\r\n            </React.Fragment>\r\n          ))}\r\n          {strings.info.delivery}\r\n          {strings.info.more.map((more, index) => (\r\n            <React.Fragment key={index}>\r\n              <br />\r\n              <Typography variant=\"body1\" align=\"justify\">\r\n                {more}\r\n              </Typography>\r\n            </React.Fragment>\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <Typography align=\"justify\" classes={{ root: italics }} variant=\"body1\">\r\n          {strings.miscellaneous.hiddenText}\r\n        </Typography>\r\n      )}\r\n    </Expandable>\r\n  );\r\n};\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TEXT_COLOR } from \"common/constants/app\";\r\nimport { useGrid } from \"common/hooks/use-grid\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\n// import { useObjectionForm } from \"common/hooks/use-objection-form\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\nimport { Expandable } from \"components/expandable\";\r\nimport { FormikField } from \"components/formik-field\";\r\nimport { HideButton } from \"components/hide-button\";\r\nimport { FormikProps } from \"formik\";\r\nimport React, { useCallback, useMemo, useState } from \"react\";\r\nimport { paddingStyles } from \"styles/utils\";\r\nimport { ObjectionFormInformation } from \"./info\";\r\nimport { useSignature } from \"./signature\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  centered: { textAlign: \"center\" },\r\n  italics: { fontStyle: \"italic \" },\r\n  left: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      textAlign: \"center\",\r\n    },\r\n    textAlign: \"left\",\r\n  },\r\n  right: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      textAlign: \"center\",\r\n    },\r\n    textAlign: \"right\",\r\n  },\r\n  root: { ...paddingStyles.toProps(16) },\r\n  signatureStyles: {\r\n    border: \"1px solid #444\",\r\n    height: \"40%\",\r\n    minHeight: \"400px\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport const ObjectionFormTemplate: React.FC<FormikProps<IObjectionModel>> = ({\r\n  handleChange,\r\n  submitForm,\r\n  validateForm,\r\n}) => {\r\n  const { centered, italics, left, right, root, signatureStyles } = useStyles();\r\n\r\n  // useObjectionForm(values, 10000);\r\n  const { GridFour, GridSix, GridEight, GridTwelve } = useGrid(root);\r\n  const { strings } = useLanguage();\r\n\r\n  const [hasMarkedCanvas, setHasMarkedCanvas] = useState(false);\r\n  const [showApplicant, setShowApplicant] = useState(false);\r\n  const [showConcernedParty, setShowConcernedParty] = useState(true);\r\n  const [showSignatureView, setShowSignatureView] = useState(false);\r\n  const signature = useSignature();\r\n\r\n  const informationSection = useMemo(\r\n    () => (\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <ObjectionFormInformation italics={italics} />\r\n        </GridTwelve>\r\n      </Grid>\r\n    ),\r\n    [GridTwelve, italics]\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    (withSignature?: boolean) => {\r\n      handleChange({ target: { name: \"withSignature\", value: withSignature } });\r\n      submitForm();\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const onSignature = useCallback(\r\n    (onClick: () => unknown, onComplete?: () => void) => () => {\r\n      const value = onClick() ?? \"\";\r\n\r\n      handleChange({\r\n        target: { name: \"authority.signature\", value },\r\n      });\r\n\r\n      if (onComplete) {\r\n        onComplete();\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  if (showSignatureView) {\r\n    return (\r\n      <React.Fragment>\r\n        {informationSection}\r\n        <Grid container>\r\n          <GridTwelve>\r\n            <Typography variant=\"h6\">{strings.titles.signature}</Typography>\r\n          </GridTwelve>\r\n          <GridTwelve classes={{ root: centered }}>\r\n            <signature.Component\r\n              onBegin={() => !hasMarkedCanvas && setHasMarkedCanvas(true)}\r\n              canvasProps={{ className: signatureStyles }}\r\n              penColor={TEXT_COLOR}\r\n            />\r\n          </GridTwelve>\r\n        </Grid>\r\n        <Grid classes={{ root }} item container justifyContent=\"space-between\">\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={onSignature(() => setShowSignatureView(false))}\r\n            variant=\"outlined\"\r\n          >\r\n            {strings.buttons.cancel}\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={!hasMarkedCanvas}\r\n            onClick={onSignature(signature.reset, () =>\r\n              setHasMarkedCanvas(false)\r\n            )}\r\n            variant=\"outlined\"\r\n          >\r\n            {strings.buttons.reset}\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={!hasMarkedCanvas}\r\n            onClick={onSignature(signature.save, () => {\r\n              setShowSignatureView(false);\r\n              onSubmit(true);\r\n            })}\r\n            variant=\"contained\"\r\n          >\r\n            {strings.buttons.go}\r\n          </Button>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {informationSection}\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h6\">{strings.titles.proposal}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <HideButton\r\n                show={showApplicant}\r\n                toggleShow={() => setShowApplicant(!showApplicant)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <hr />\r\n          <Typography\r\n            align=\"justify\"\r\n            classes={{ root: showApplicant ? undefined : italics }}\r\n            variant=\"body1\"\r\n          >\r\n            {showApplicant\r\n              ? strings.sections.proposal\r\n              : strings.miscellaneous.hiddenFields}\r\n          </Typography>\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Expandable open={showApplicant}>\r\n        <Grid container>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Name of Applicant\"\r\n              name=\"proposal.applicationName\"\r\n              placeholder=\"Enter the applicant's Name or Business\"\r\n            />\r\n          </GridFour>\r\n          <GridEight>\r\n            <FormikField\r\n              label=\"Description of Proposal\"\r\n              name=\"proposal.description\"\r\n              placeholder=\"Enter a description for the purpose of the planning proposal\"\r\n            />\r\n          </GridEight>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Application Number\"\r\n              name=\"proposal.applicationNumber\"\r\n              placeholder=\"Enter the TPA number on the planning permit\"\r\n              readonly\r\n            />\r\n          </GridFour>\r\n          <GridEight>\r\n            <FormikField\r\n              label=\"Description of Land\"\r\n              name=\"proposal.applicantLand\"\r\n              placeholder=\"Enter a description of the land to be developed\"\r\n              readonly\r\n            />\r\n          </GridEight>\r\n        </Grid>\r\n      </Expandable>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <Expandable open={showApplicant}>\r\n            <br />\r\n          </Expandable>\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"h6\">\r\n                {strings.titles.concernedParty}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <HideButton\r\n                show={showConcernedParty}\r\n                toggleShow={() => setShowConcernedParty(!showConcernedParty)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <hr />\r\n          <Typography\r\n            align=\"justify\"\r\n            classes={{\r\n              root: showConcernedParty ? undefined : italics,\r\n            }}\r\n            variant=\"body1\"\r\n          >\r\n            {showConcernedParty\r\n              ? strings.sections.concernedParty\r\n              : strings.miscellaneous.hiddenFields}\r\n          </Typography>\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Expandable open={showConcernedParty}>\r\n        <Grid container>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Name(s)\"\r\n              name=\"concernedParty.contactName\"\r\n              placeholder=\"Enter your name(s)\"\r\n            />\r\n          </GridFour>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Email Address\"\r\n              name=\"concernedParty.contactEmail\"\r\n              placeholder=\"Your Email Address\"\r\n            />\r\n          </GridFour>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Phone\"\r\n              name=\"concernedParty.contactPhone\"\r\n              placeholder=\"Enter your contact phone number\"\r\n            />\r\n          </GridFour>\r\n          <GridEight>\r\n            <FormikField\r\n              label=\"Residential Address\"\r\n              name=\"concernedParty.contactAddress\"\r\n              placeholder=\"Enter your residential address\"\r\n            />\r\n          </GridEight>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Post Code\"\r\n              name=\"concernedParty.contactPostCode\"\r\n              placeholder=\"Enter your post code\"\r\n            />\r\n          </GridFour>\r\n        </Grid>\r\n      </Expandable>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <Expandable open={showConcernedParty}>\r\n            <br />\r\n          </Expandable>\r\n          <Typography variant=\"h6\">{strings.titles.objection}</Typography>\r\n          <hr />\r\n          <Typography variant=\"body1\" align=\"justify\">\r\n            {strings.sections.objection}\r\n          </Typography>\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <FormikField\r\n            label=\"Grounds of Objection\"\r\n            name=\"objection.concerns\"\r\n            placeholder=\"Detail your concerns with regards to this proposal\"\r\n            multiline\r\n            minRows={8}\r\n            maxRows={12}\r\n          />\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <FormikField\r\n            label=\"Changes which could address your concern(s)\"\r\n            name=\"objection.suggestedChanges\"\r\n            placeholder=\"Enter any changes that could be made to the proposal that would address your concer(s)\"\r\n            multiline\r\n            minRows={4}\r\n            maxRows={8}\r\n          />\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Grid container>\r\n        <GridSix classes={{ root: left }}>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={async () => {\r\n              const errors = await validateForm();\r\n\r\n              if (errors && Object.keys(errors).length > 0) {\r\n                submitForm();\r\n              } else {\r\n                setShowSignatureView(true);\r\n              }\r\n            }}\r\n            variant=\"outlined\"\r\n          >\r\n            {strings.buttons.createDigitalObjectionForm}\r\n          </Button>\r\n        </GridSix>\r\n        <GridSix classes={{ root: right }}>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => onSubmit(false)}\r\n            variant=\"contained\"\r\n          >\r\n            {strings.buttons.createPrintObjectionForm}\r\n          </Button>\r\n        </GridSix>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import Grid, { GridProps } from \"@material-ui/core/Grid\";\r\nimport { PropsWithChildren, useMemo } from \"react\";\r\n\r\nexport const useGrid = (className: string) =>\r\n  useMemo(\r\n    () => ({\r\n      GridFour: ({ children, ...props }: PropsWithChildren<GridProps>) => (\r\n        <Grid item xs={12} lg={6} xl={4} {...props}>\r\n          <div className={className}>{children}</div>\r\n        </Grid>\r\n      ),\r\n      GridSix: ({ children, ...props }: PropsWithChildren<GridProps>) => (\r\n        <Grid item xs={12} lg={6} {...props}>\r\n          <div className={className}>{children}</div>\r\n        </Grid>\r\n      ),\r\n      GridEight: ({ children, ...props }: PropsWithChildren<GridProps>) => (\r\n        <Grid item xs={12} lg={6} xl={8} {...props}>\r\n          <div className={className}>{children}</div>\r\n        </Grid>\r\n      ),\r\n      GridTwelve: ({ children, ...props }: PropsWithChildren<GridProps>) => (\r\n        <Grid item xs={12} {...props}>\r\n          <div className={className}>{children}</div>\r\n        </Grid>\r\n      ),\r\n    }),\r\n    [className]\r\n  );\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useCallback, useEffect, useMemo, useRef } from \"react\";\r\nimport SignaturePad, {\r\n  ReactSignatureCanvasProps,\r\n} from \"react-signature-canvas\";\r\n\r\ntype SignatureProps = Omit<ReactSignatureCanvasProps, \"ref\">;\r\ntype SignaturePadRef =\r\n  | {\r\n      api: SignaturePad;\r\n      ready: true;\r\n    }\r\n  | {\r\n      api: null;\r\n      ready: false;\r\n    };\r\n\r\nexport const useSignature = (onReady?: () => void) => {\r\n  const signature = useRef<SignaturePadRef>({\r\n    api: null,\r\n    ready: false,\r\n  });\r\n\r\n  // Reset Signature Data\r\n  const reset = useCallback(\r\n    () => signature.current.ready && signature.current.api.clear(),\r\n    []\r\n  );\r\n\r\n  // Save Signature Data\r\n  const save = useCallback(\r\n    () =>\r\n      signature.current.ready\r\n        ? signature.current.api.getTrimmedCanvas().toDataURL(\"image/png\")\r\n        : null,\r\n    []\r\n  );\r\n\r\n  // Capture Signature Component Ref\r\n  const setRef = useCallback((internalRef: SignaturePad | null) => {\r\n    signature.current = {\r\n      api: internalRef as SignaturePad,\r\n      ready: !!(internalRef as SignaturePad),\r\n    };\r\n\r\n    if (signature.current.ready && onReady) {\r\n      onReady();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => () => setRef(null), []);\r\n\r\n  // Exposed Signature APIs\r\n  return {\r\n    Component: useMemo(\r\n      (): React.FC<SignatureProps> => (props) => {\r\n        return <SignaturePad {...props} ref={setRef} />;\r\n      },\r\n      []\r\n    ),\r\n    reset,\r\n    save,\r\n  };\r\n};\r\n\r\n// // import React, { Component } from 'react'\r\n// // import ReactDOM from 'react-dom'\r\n// // import SignaturePad from 'react-signature-canvas'\r\n\r\n// // import styles from './styles.module.css'\r\n\r\n// class App extends React.Component {\r\n//   state = { trimmedDataURL: null };\r\n//   sigPad = {};\r\n//   clear = () => {\r\n//     this.sigPad.clear();\r\n//   };\r\n//   trim = () => {\r\n//     this.setState({\r\n//       trimmedDataURL: this.sigPad.getTrimmedCanvas().toDataURL(\"image/png\"),\r\n//     });\r\n//   };\r\n//   render() {\r\n//     let { trimmedDataURL } = this.state;\r\n//     return (\r\n//       <div className={styles.container}>\r\n//         <div className={styles.sigContainer}>\r\n//           <SignaturePad\r\n//             canvasProps={{ className: styles.sigPad }}\r\n//             ref={(ref) => {\r\n//               this.sigPad = ref;\r\n//             }}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <button className={styles.buttons} onClick={this.clear}>\r\n//             Clear\r\n//           </button>\r\n//           <button className={styles.buttons} onClick={this.trim}>\r\n//             Trim\r\n//           </button>\r\n//         </div>\r\n//         {trimmedDataURL ? (\r\n//           <img className={styles.sigImage} alt=\"\" src={trimmedDataURL} />\r\n//         ) : null}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import {\r\n  EMAIL_PATTERN,\r\n  PHONE_PATTERN,\r\n  POST_CODE_PATTERN,\r\n  REPLACE_PHONE_CHARS,\r\n} from \"common/constants/patterns\";\r\nimport { ILanguageValidations } from \"common/models/language\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Should be good for almost all combinations of phone numbers\r\nconst emailValidation = (value?: string) =>\r\n  !value || !!value.match(EMAIL_PATTERN);\r\n\r\n// Standard Australian home and mobile phone numbers\r\nconst phoneValidation = (value?: string) =>\r\n  !value || !!value.replace(REPLACE_PHONE_CHARS, \"\").match(PHONE_PATTERN);\r\n\r\n// Standard Australian home and mobile phone numbers\r\nconst postCodeValidator = (value?: number) =>\r\n  !value || !!String(value).match(POST_CODE_PATTERN);\r\n\r\n// Objection Form Validations\r\nexport const createValidationSchema = (validations: ILanguageValidations) =>\r\n  Yup.object().shape({\r\n    concernedParty: Yup.object().shape({\r\n      contactName: Yup.string().required(\r\n        validations[\"concernedParty.contactName\"]\r\n      ),\r\n      contactEmail: Yup.string().test({\r\n        message: validations[\"concernedParty.contactEmail\"],\r\n        test: emailValidation,\r\n      }),\r\n      contactPhone: Yup.string().test({\r\n        message: validations[\"concernedParty.contactPhone\"],\r\n        test: phoneValidation,\r\n      }),\r\n      contactAddress: Yup.string().required(\r\n        validations[\"concernedParty.contactAddress\"]\r\n      ),\r\n      contactPostCode: Yup.number()\r\n        .test({\r\n          message: validations[\"concernedParty.contactPostCode\"],\r\n          test: postCodeValidator,\r\n        })\r\n        .required(validations[\"concernedParty.contactPostCode\"]),\r\n    }),\r\n    proposal: Yup.object().shape({\r\n      applicantLand: Yup.string(),\r\n      applicationName: Yup.string(),\r\n      applicationNumber: Yup.string().required(\r\n        validations[\"proposal.applicationNumber\"]\r\n      ),\r\n      description: Yup.string(),\r\n    }),\r\n    objection: Yup.object().shape({\r\n      concerns: Yup.string().required(validations[\"objection.concerns\"]),\r\n      suggestedChanges: Yup.string(),\r\n    }),\r\n  });\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { useSaveData } from \"common/hooks/use-save-data\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\nimport { Content } from \"components/content\";\r\nimport { Footer } from \"components/footer\";\r\nimport { Header } from \"components/header\";\r\nimport { Link } from \"components/link\";\r\nimport { PageLayout } from \"components/page-layout\";\r\nimport { Formik } from \"formik\";\r\nimport Logo from \"images/frame.svg\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { ObjectionFormTemplate } from \"./template\";\r\nimport { createValidationSchema } from \"./validations\";\r\n\r\nexport const FormViewPage: React.FC<{ isMobile?: boolean }> = () => {\r\n  const { currentLanguage, strings } = useLanguage();\r\n  const { initialValues, printData } = useSaveData();\r\n  const [render, setRender] = useState(false);\r\n\r\n  const validationSchema = useMemo(\r\n    () => createValidationSchema(strings.validations),\r\n    [currentLanguage] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(() => setRender(false), [currentLanguage]);\r\n  useEffect(() => {\r\n    requestAnimationFrame(() => setRender(true));\r\n  }, [render]);\r\n\r\n  return (\r\n    <div className=\"form-root\">\r\n      <PageLayout>\r\n        <Header />\r\n        <Content>\r\n          {render && (\r\n            <Formik<IObjectionModel>\r\n              key={currentLanguage}\r\n              initialValues={initialValues}\r\n              onSubmit={(values) => printData(values)}\r\n              validationSchema={validationSchema}\r\n            >\r\n              {ObjectionFormTemplate}\r\n            </Formik>\r\n          )}\r\n        </Content>\r\n        <br />\r\n        <br />\r\n        <hr />\r\n        <img id=\"qr-code\" src={Logo} alt=\"QR Code\" />\r\n        <Typography style={{ textAlign: \"center\" }} variant=\"body1\">\r\n          {strings.miscellaneous.qrCodeLabel}\r\n          <br />\r\n          <Link to=\"http://bit.ly/3h7gip1\">bit.ly/3h7gip1</Link>\r\n        </Typography>\r\n        <br />\r\n        <Footer>&copy; 2021 - Anthony Costabile</Footer>\r\n      </PageLayout>\r\n    </div>\r\n  );\r\n};\r\n","import { AppContext } from \"common/context/app\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const useSaveData = () => {\r\n  const { state, printData, saveData } = useContext(AppContext);\r\n\r\n  return {\r\n    initialValues: state.values,\r\n    printData,\r\n    saveData,\r\n  };\r\n};\r\n","import { AppView } from \"common/context/app/types\";\r\nimport { useAppView } from \"common/hooks/use-app-view\";\r\nimport React, { useMemo } from \"react\";\r\nimport { FormViewPage } from \"./form\";\r\nimport { PrintViewPage } from \"./print\";\r\n\r\nconst isDebug = false;\r\n\r\nexport const App: React.FC = () => {\r\n  const { values, view, toFormView } = useAppView();\r\n  const isMobile = useMemo(\r\n    () =>\r\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n        navigator.userAgent\r\n      ),\r\n    []\r\n  );\r\n\r\n  const form = view === AppView.FORM;\r\n  const print = view === AppView.PRINT;\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        {form && <FormViewPage />}\r\n        {print && (\r\n          <PrintViewPage isMobile toFormView={toFormView} values={values} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (isDebug) {\r\n    return (\r\n      <>\r\n        {form && <FormViewPage />}\r\n        {print && (\r\n          <PrintViewPage isDebug toFormView={toFormView} values={values} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormViewPage />\r\n      {print && <PrintViewPage toFormView={toFormView} values={values} />}\r\n    </>\r\n  );\r\n};\r\n","import { AppContext } from \"common/context/app\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const useAppView = () => {\r\n  const { toFormView, toPrintView, state } = useContext(AppContext);\r\n\r\n  return {\r\n    toFormView,\r\n    toPrintView,\r\n    values: state.values,\r\n    view: state.view,\r\n  };\r\n};\r\n","import { AppProvider } from \"common/context/app\";\r\nimport { App } from \"pages/app\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { getSaveData } from \"utils/local-storage\";\r\nimport \"styles/global.css\";\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <AppProvider appData={getSaveData()}>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import React from \"react\";\r\n\r\ninterface ILinkProps {\r\n  to: string;\r\n}\r\n\r\nexport const Link: React.FC<ILinkProps> = ({ children, to }) => (\r\n  <a href={to} target=\"_blank\" rel=\"noreferrer\">\r\n    {children}\r\n  </a>\r\n);\r\n","import { IObjectionModel } from \"common/models/objection\";\r\n\r\nexport const defaultFormData: IObjectionModel = {\r\n  authority: {\r\n    date: Date.now(),\r\n    signature: \"\",\r\n  },\r\n  proposal: {\r\n    applicantLand: \"251 -261 Springvale Road, Glen Waverley\",\r\n    applicationName: \"Hongxing Springvale Road Pty Ltd\",\r\n    applicationNumber: \"TPA/52268\",\r\n    description:\r\n      \"21 storey mixed-use building (147 dwellings, 6 retail tenancies)\",\r\n  },\r\n  concernedParty: {\r\n    contactName: \"\",\r\n    contactEmail: \"\",\r\n    contactPhone: \"\",\r\n    contactAddress: \"\",\r\n    contactPostCode: 3150,\r\n  },\r\n  objection: {\r\n    concerns: \"\",\r\n    suggestedChanges: \"\",\r\n  },\r\n  withSignature: false,\r\n};\r\n","export const ALLOWED_CHARACTERS = 1000;\r\nexport const INITIAL_PAGE_BREAK = 300;\r\nexport const REGULAR_PAGE_BREAK = 600;\r\nexport const PARAGRAPH_SIZE_MIN = 400;\r\nexport const PARAGRAPH_SIZE_MAX = 800;\r\nexport const SENTENCE_SEPARATOR = \" \";\r\nexport const SUGGESTION_OFFSET = 80;\r\n\r\nexport const TEXT_DOTS = Array.from(Array(127))\r\n  .map((_) => \".\")\r\n  .join(\".\");\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useMemo } from \"react\";\r\nimport { classNames } from \"utils/class-names\";\r\n\r\nexport const breakProps = (\r\n  shouldBreak: boolean,\r\n  gapSize?: number,\r\n  ignore?: boolean\r\n) => {\r\n  if (!shouldBreak) {\r\n    return {};\r\n  }\r\n\r\n  if (ignore) {\r\n    return { gapSize: 0 };\r\n  }\r\n\r\n  return { break: true, gapSize };\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageBreak: {\r\n    paddingTop: 8,\r\n  },\r\n}));\r\n\r\nexport const PrintBreak: React.FC<{\r\n  break?: boolean;\r\n  gapSize?: number;\r\n}> = ({ break: shouldBreak, gapSize = 0 }) => {\r\n  const classes = useStyles();\r\n\r\n  return useMemo(\r\n    () =>\r\n      shouldBreak || gapSize ? (\r\n        <>\r\n          {shouldBreak && (\r\n            <div className={classNames(classes.pageBreak, \"page-break\")} />\r\n          )}\r\n          {gapSize > 0 && (\r\n            <Typography paragraph variant=\"body1\">\r\n              {Array.from(Array(gapSize)).map((_, index) => (\r\n                <br key={`br-${index}`} />\r\n              ))}\r\n            </Typography>\r\n          )}\r\n        </>\r\n      ) : null,\r\n    [classes, gapSize, shouldBreak]\r\n  );\r\n};\r\n","import { defaultFormData } from \"common/constants/defaults\";\r\nimport { english } from \"common/languages/english\";\r\nimport { ILanguage } from \"common/models/language\";\r\nimport { createContext } from \"react\";\r\nimport { AppView, IAppContext } from \"./types\";\r\n\r\nexport const defaultAppContext = {\r\n  language: \"english\",\r\n  save: false,\r\n  view: AppView.FORM,\r\n  values: defaultFormData,\r\n};\r\n\r\nexport const AppContext = createContext<IAppContext>({\r\n  printData: () => null,\r\n  resetData: () => null,\r\n  saveData: () => null,\r\n  setLanguage: () => null,\r\n  toFormView: () => null,\r\n  toPrintView: () => null,\r\n  state: defaultAppContext,\r\n  strings: english as ILanguage,\r\n});\r\n","import { defaultFormData } from \"common/constants/defaults\";\r\nimport {\r\n  AppContextAction,\r\n  AppContextActions,\r\n  AppView,\r\n  IAppContextState,\r\n} from \"./types\";\r\n\r\nexport const appContextReducer = (\r\n  state: IAppContextState,\r\n  action: AppContextActions\r\n): IAppContextState => {\r\n  switch (action.type) {\r\n    case AppContextAction.DONE:\r\n      return { ...state, save: false };\r\n\r\n    case AppContextAction.LANGUAGE:\r\n      return { ...state, language: action.language, save: true };\r\n\r\n    case AppContextAction.PRINT:\r\n      // eslint-disable-next-line no-restricted-globals\r\n      const view = confirm(action.warningText);\r\n\r\n      return {\r\n        ...state,\r\n        save: true,\r\n        view: view ? AppView.PRINT : AppView.FORM,\r\n        values: action.values,\r\n      };\r\n\r\n    case AppContextAction.RESET:\r\n      return { ...state, values: defaultFormData };\r\n\r\n    case AppContextAction.SAVE:\r\n      return { ...state, save: true, values: action.values };\r\n\r\n    case AppContextAction.VIEW:\r\n      return { ...state, view: action.view };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { language } from \"common/languages\";\r\nimport { IAppData } from \"common/models/app-data\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\nimport React, { useCallback, useMemo, useReducer } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { setSaveData } from \"utils/local-storage\";\r\nimport { AppContext } from \"./context\";\r\nimport { appContextReducer } from \"./reducer\";\r\nimport { AppContextAction, AppView } from \"./types\";\r\n\r\ninterface IAppProviderProps {\r\n  appData: IAppData;\r\n}\r\n\r\nexport const AppProvider: React.FC<IAppProviderProps> = ({\r\n  appData,\r\n  children,\r\n}) => {\r\n  const [state, dispatch] = useReducer(\r\n    appContextReducer,\r\n    useMemo(\r\n      () => ({\r\n        language: appData.language,\r\n        save: false,\r\n        values: appData.form,\r\n        view: AppView.FORM,\r\n      }),\r\n      [] // eslint-disable-line react-hooks/exhaustive-deps\r\n    )\r\n  );\r\n\r\n  const strings = useMemo(() => {\r\n    language.set(state.language as \"english\");\r\n\r\n    return language.strings;\r\n  }, [state.language]);\r\n\r\n  const printData = useCallback((values: IObjectionModel) => {\r\n    dispatch({\r\n      type: AppContextAction.PRINT,\r\n      values,\r\n      warningText: language.strings.warning,\r\n    });\r\n  }, []);\r\n\r\n  const resetData = useCallback(() => {\r\n    dispatch({ type: AppContextAction.RESET });\r\n  }, []);\r\n\r\n  const saveData = useCallback((values: IObjectionModel) => {\r\n    dispatch({ type: AppContextAction.SAVE, values });\r\n  }, []);\r\n\r\n  const setLanguage = useCallback((nextLanguage: string) => {\r\n    if (language.is(nextLanguage)) {\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: AppContextAction.LANGUAGE, language: nextLanguage });\r\n  }, []);\r\n\r\n  const toPrintView = useCallback(() => {\r\n    dispatch({ type: AppContextAction.VIEW, view: AppView.PRINT });\r\n  }, []);\r\n\r\n  const toFormView = useCallback(() => {\r\n    dispatch({ type: AppContextAction.VIEW, view: AppView.FORM });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!state.save) {\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: AppContextAction.DONE });\r\n    setSaveData({ form: state.values, language: state.language });\r\n  }, [state]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        printData,\r\n        resetData,\r\n        saveData,\r\n        setLanguage,\r\n        toPrintView,\r\n        toFormView,\r\n        state,\r\n        strings,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n","/* eslint-disable no-control-regex */\r\nexport const EMAIL_PATTERN =\r\n  /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\r\n\r\nexport const REPLACE_PHONE_CHARS = /[-+()\\s]/g;\r\n\r\nexport const PHONE_PATTERN = /^(61\\d{9}|(0\\d{9})|\\d{8})$/;\r\n\r\nexport const POST_CODE_PATTERN = /^\\d{4}$/;\r\n\r\nexport const LINE_ENDING_PATTERN = /(\\n(\\s)*)/;\r\n\r\nexport const TERMINATORS_PATTERN = /(\\w+)([.!]+)\\s/;\r\n","import { ILanguageData } from \"common/models/language\";\r\n\r\ntype LanguageType = ILanguageData & { name: string; nameEnglish: string };\r\n\r\nexport class Languages<\r\n  LanguageData extends LanguageType = LanguageType,\r\n  LanguageName extends string = string\r\n> {\r\n  private currentLanguage: LanguageName;\r\n  private languages: Record<LanguageName, LanguageData>;\r\n\r\n  constructor(\r\n    languages: Record<LanguageName, LanguageData>,\r\n    currentLanguage: LanguageName = Object.keys(languages)[0] as LanguageName\r\n  ) {\r\n    this.currentLanguage = currentLanguage;\r\n    this.languages = languages;\r\n  }\r\n\r\n  public get meta() {\r\n    return (Object.keys(this.languages) as LanguageName[]).map((value) => ({\r\n      friendly: this.languages[value].nameEnglish,\r\n      label: this.languages[value].name,\r\n      value,\r\n    }));\r\n  }\r\n\r\n  public get strings() {\r\n    return this.languages[this.currentLanguage] as LanguageData;\r\n  }\r\n\r\n  public is = (language: string) => {\r\n    return language === this.currentLanguage;\r\n  };\r\n\r\n  public set = (nextLanguage: LanguageName) => {\r\n    this.currentLanguage = nextLanguage;\r\n    return this;\r\n  };\r\n}\r\n","import { PUBLIC_AMENITY, PROPOSAL_LINK } from \"common/constants/app\";\r\nimport { ILanguage } from \"common/models/language\";\r\nimport { Link } from \"components/link\";\r\n\r\nexport const chinese: ILanguage = {\r\n  // ==========================================================================\r\n  //  LANGUAGE META DATA\r\n  // ==========================================================================\r\n\r\n  icon:                                       \"false\",\r\n  name:                                       \"中文\",\r\n  nameEnglish:                                \"Chinese - Traditional\",\r\n\r\n\r\n  // ==========================================================================\r\n  //  BUTTONS, INPUTS & UI ELEMENTS\r\n  // ==========================================================================\r\n\r\n  buttons: {\r\n    cancel:                                   \"取消\",\r\n    createDigitalObjectionForm:               \"電子簽名\",\r\n    createPrintObjectionForm:                 \"打印反對書\",\r\n    go:                                       \"打印並發送\",\r\n    hide:                                     \"隱藏\",\r\n    reset:                                    \"重設\",\r\n    show:                                     \"顯示\",\r\n  },\r\n  document: {\r\n    date:                                     \"日期\",\r\n    signature:                                \"簽名\",\r\n  },\r\n  labels: {\r\n    \"concernedParty.contactAddress\":          \"住址\",\r\n    \"concernedParty.contactEmail\":            \"電郵地址\",\r\n    \"concernedParty.contactName\":             \"姓名\",\r\n    \"concernedParty.contactPhone\":            \"電話\",\r\n    \"concernedParty.contactPostCode\":         \"郵編\",\r\n    \"objection.concerns\":                     \"反對理據\",\r\n    \"objection.suggestedChanges\":             \"您希望有什麼反饋\",\r\n    \"proposal.applicantLand\":                 \"項目地址\",\r\n    \"proposal.applicationName\":               \"申請人\",\r\n    \"proposal.applicationNumber\":             \"申請編號\",\r\n    \"proposal.description\":                   \"項目描述\",\r\n  },\r\n  miscellaneous: {\r\n    hiddenFields:                             \"Fields are hidden\",\r\n    hiddenText:                               \"Text is hidden\",\r\n    qrCodeLabel:                              \"掃描並分享\",\r\n  },\r\n  placeholder: {\r\n    \"concernedParty.contactAddress\":          \"輸入住址\",\r\n    \"concernedParty.contactEmail\":            \"輸入電郵地址\",\r\n    \"concernedParty.contactName\":             \"輸入姓名\",\r\n    \"concernedParty.contactPhone\":            \"輸入聯絡電話\",\r\n    \"concernedParty.contactPostCode\":         \"輸入郵編\",\r\n    \"objection.concerns\":                     \"項目為您帶來的影響\",\r\n    \"objection.suggestedChanges\":             \"您希望項目有哪些調整\",\r\n    \"proposal.applicantLand\":                 \"Enter a description of the land to be developed\",\r\n    \"proposal.applicationName\":               \"Enter the applicant's Name or Business\",\r\n    \"proposal.applicationNumber\":             \"Enter the TPA number on the planning permit\",\r\n    \"proposal.description\":                   \"Enter a description for the purpose of the planning proposal\",\r\n  },\r\n  sections: {\r\n    concernedParty:                           \"Enter your details as accurately as possible\",\r\n    proposal:                                 \"Fields are pre-populated for your convenience\",\r\n    objection:                                \"Enter your concerns and reasons for this object, as well as any changes you'd like to see\",\r\n  },\r\n  titles: {\r\n    about:                                    \"關於此反對書\",\r\n    concernedParty:                           \"受影響個體(您本人)\",\r\n    header:                                   \"反對小幫手\",\r\n    proposal:                                 \"反對的規劃項目\",\r\n    objection:                                \"反對內容\",\r\n    signature:                                \"簽名\",\r\n  },\r\n  validations: {\r\n    \"concernedParty.contactAddress\":          \"A residential address is required\",\r\n    \"concernedParty.contactEmail\":            \"Invalid email address detected\",\r\n    \"concernedParty.contactName\":             \"At least one contact name is required\",\r\n    \"concernedParty.contactPhone\":            \"Invalid phone number detected\",\r\n    \"concernedParty.contactPostCode\":         \"A valid post code is required\",\r\n    \"objection.concerns\":                     \"You must supply a reason for your objection\",\r\n    \"proposal.applicationNumber\":             \"An application number is mandatory\",\r\n  },\r\n  warning:                                    \"此申請不會傳送電郵到市議會。請使用預覧打印功能打印反對書或輸出成PDF檔。您必須親身傳送以確保正確提交您的反對。\",\r\n\r\n\r\n  // ==========================================================================\r\n  //  MAIN PARAGRAPH CONTENT\r\n  // ==========================================================================\r\n\r\n  info: {\r\n    delivery: (\r\n      <ul>\r\n        <li>郵寄 - PO Box 1, Glen Waverley VIC 3150</li>\r\n        <li>\r\n          電郵 -{\" \"}\r\n          <Link to={`mailto:mail@monash.vic.gov.au`}>\r\n            mail@monash.vic.gov.au\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    ),\r\n    description: [\r\n      <>\r\n        此反對書的目的為幫助Glen Waverley居民對新公佈的計劃發展項目向市議會提出反對，項目地址位於\r\n        <em>251-261 Springvale Road</em>。 項目內容為 21 層商住物業 (147住戶，6商鋪)。\r\n        填寫反對書時，請盡量提供詳細資料好讓您的反對聲音得到充分考慮。完成後請按頁面底部 “打印反對書” 或可使用電子簽名後再打印，確認相關資料並按以下途徑提交。\r\n      </>,\r\n      <>\r\n        您可以個人原因作為反對理據\r\n        例如{\" \"}\r\n        <strong>\r\n          <em>景觀被阻擋</em>\r\n        </strong>{\" \"}\r\n        或{\" \"}\r\n        <strong>\r\n          <em>物業價格受影響</em>\r\n        </strong>\r\n        等等，不過市議會首要責任為提供{\" \"}\r\n        <Link to={PUBLIC_AMENITY}>社區設施</Link>, 所以若您能提出例如該項目會怎樣影響公共安全，\r\n        車位數目減少等理據，您的反對會變得更加強而有力。\r\n      </>,\r\n      <>\r\n       該項目最終可能仍會通過，惟反對聲音極有可能影響項目的大小，所以\r\n       <strong>懇請</strong>\r\n       您能抽空提出建議，好讓市議會能夠考慮你的反對聲音。\r\n      </>,\r\n      <>\r\n        反對書截止收集日期為{\" \"}\r\n        <strong>周四 2021年9月16日</strong>, 請盡快填寫並簽名，您可以用以下途徑交到市議會。\r\n      </>,\r\n    ],\r\n    more: [\r\n      \"計劃項目內容請參考：\",\r\n      <Link to={PROPOSAL_LINK}>\r\n        Proposed development at 251 -261 Springvale Road, Glen Waverley\r\n      </Link>,\r\n    ]\r\n  },\r\n\r\n\r\n  // ==========================================================================\r\n  //  CREDITS -> Replace the name below with your name\r\n  // ==========================================================================\r\n\r\n  translationBy: \"Jonathan Suen\"\r\n};","import { Languages } from \"utils/language\";\r\nimport { chinese } from \"./chinese\";\r\nimport { english } from \"./english\";\r\n\r\nexport const language = new Languages({\r\n  english,\r\n  chinese,\r\n});\r\n","import { createContext } from \"react\";\r\nimport { IPrintContext, IPrintState, PrintContextStatus } from \"./types\";\r\n\r\nexport const defaultPrintState: IPrintState<unknown> = {\r\n  items: [],\r\n  status: PrintContextStatus.IDLE,\r\n};\r\n\r\nexport const PrintContext = createContext<IPrintContext<string>>({\r\n  items: {},\r\n  onFieldBreak: () => null,\r\n  onFieldSize: () => null,\r\n  onValues: () => null,\r\n});\r\n","import { LOCAL_STORAGE_KEY } from \"common/constants/app\";\r\nimport { defaultFormData } from \"common/constants/defaults\";\r\nimport { IAppData } from \"common/models/app-data\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\n\r\nexport const getSaveData = (): IAppData => {\r\n  if (!global.window) {\r\n    return {\r\n      form: defaultFormData,\r\n      language: \"english\",\r\n    };\r\n  }\r\n\r\n  const currentData = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n  const {\r\n    form = {} as IObjectionModel,\r\n    language = \"english\",\r\n    \"proposal.applicationNumber\": check = false,\r\n  } = JSON.parse(currentData || \"{}\") as IAppData & {\r\n    \"proposal.applicationNumber\"?: string;\r\n  };\r\n\r\n  // Fix for older sessions!\r\n  if (check) {\r\n    localStorage.clear();\r\n  }\r\n\r\n  return {\r\n    form: {\r\n      authority: {\r\n        date: Date.now(),\r\n        signature: \"\",\r\n      },\r\n      concernedParty: {\r\n        ...defaultFormData.concernedParty,\r\n        ...form.concernedParty,\r\n      },\r\n      objection: {\r\n        ...defaultFormData.objection,\r\n        ...form.objection,\r\n      },\r\n      proposal: {\r\n        ...defaultFormData.proposal,\r\n        ...form.proposal,\r\n      },\r\n      withSignature: false,\r\n    },\r\n    language,\r\n  };\r\n};\r\n\r\nexport const setSaveData = (values: IAppData) => {\r\n  if (!global.window) {\r\n    return defaultFormData;\r\n  }\r\n\r\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\r\n};\r\n"],"sourceRoot":""}