{"version":3,"sources":["common/context/types.ts","common/context/context.ts","common/context/reducer.ts","common/context/provider.tsx","common/hooks/use-objection-form.ts","common/hooks/use-interval.ts","components/expandable/expandable-overlay.tsx","components/expandable/expandable.tsx","components/formik-field/formik-field.tsx","components/hide-button/hide-button.tsx","styles/utils/style-side.ts","styles/utils/helpers.ts","components/link/link.tsx","components/objection-form/objection-info.tsx","components/objection-form/objection-template.tsx","common/hooks/use-grid.tsx","components/objection-form/objection-form.tsx","common/hooks/use-save-data.ts","components/page-section/page-section.tsx","components/content/content.tsx","components/footer/footer.tsx","components/header/header.tsx","components/page-layout/page-layout.tsx","components/app/app-form.tsx","utils/class-names.ts","components/print/print-line.tsx","components/print/print-contact.tsx","images/logo.gif","components/print/print-header.tsx","components/print/print-objection.tsx","components/print/print-proposal.tsx","components/print/print.tsx","components/app/app-print.tsx","common/hooks/use-print-view.ts","components/app/app.tsx","common/hooks/use-app-view.ts","index.tsx","common/constants/defaults.ts","common/constants/app.ts","utils/local-storage.ts"],"names":["AppContextAction","AppView","defaultAppContext","view","FORM","values","defaultFormData","AppContext","createContext","printData","resetData","saveData","toFormView","toPrintView","state","appContextReducer","action","type","PRINT","RESET","SAVE","VIEW","AppProvider","children","initialState","useReducer","dispatch","useCallback","setSaveData","Provider","value","useObjectionForm","useContext","timeout","deps","actionRef","useRef","intervalRef","useEffect","current","clearInterval","setInterval","useInterval","useStyles","makeStyles","fade","position","height","boxShadow","width","zIndex","root","ExpandableOverlay","className","Expandable","sneekPeek","open","Fragment","Collapse","collapsedSize","in","fieldProps","fullWidth","InputLabelProps","shrink","variant","FormikField","name","readonly","props","useField","onBlur","onChange","error","touched","hasError","TextField","helperText","event","transform","show","transition","HideButton","toggleShow","Button","onClick","size","classes","SideStyle","convert","asProps","property","separator","units","undefined","toValue","b","bottom","y","all","l","left","x","r","right","t","top","every","side","toProps","toShorthand","toLonghand","sides","toMapped","mapped","total","length","toStyles","first","others","queue","Object","entries","reduce","mappings","prevIndex","findIndex","prev","push","styles","toUpperCase","substr","includes","join","styels","map","createSideStyle","toString","paddingStyles","Link","to","href","target","rel","ObjectionFormInformation","useState","showText","setShowText","Grid","container","justifyContent","item","Typography","align","COMMUNITY_AMENITY","PROPOSAL_LINK","italics","fontStyle","ObjectionFormTemplate","submitForm","useMemo","GridFour","xs","lg","xl","GridEight","GridTwelve","showApplicant","setShowApplicant","showConcernedParty","setShowConcernedParty","label","placeholder","multiline","minRows","maxRows","ObjectionForm","useSaveData","initialValues","onSubmit","padding","color","fontSize","background","minHeight","stretch","flex","PageSection","justify","Wrapper","React","content","Content","md","Footer","Header","PageLayout","alignItems","direction","FormViewPage","classNames","args","Array","from","filter","dots","overflow","lineHeight","dotsLabel","opacity","space","subLabel","text","textLabel","PrintLine","classesProp","minLines","textField","lines","setLines","getBoundingClientRect","linesToAdd","Math","floor","max","noWrap","TEXT_DOTS","_","ref","fontWeight","PrintContact","concernedParty","contactName","contactAddress","contactPostCode","contactPhone","contactEmail","box","border","boxTextBody","marginBottom","boxTextTitle","formTitle","PrintHeader","proposal","applicationNumber","Box","alt","src","Logo","PrintObjection","objection","concerns","paragraph","suggestedChanges","PrintProposal","applicationName","description","applicantLand","PrintView","PrintViewPage","usePrintView","App","useAppView","render","StrictMode","getSaveData","document","getElementById","LOCAL_STORAGE_KEY","global","window","currentData","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":"yJAEYA,EAOAC,E,kCAPAD,O,iBAAAA,I,iBAAAA,I,eAAAA,I,gBAAAA,M,cAOAC,O,eAAAA,I,kBAAAA,M,KCLL,IAAMC,EAAoB,CAC/BC,KAAMF,EAAQG,KACdC,OAAQC,KAGGC,EAAaC,wBAA2B,CACnDC,UAAW,kBAAM,MACjBC,UAAW,kBAAM,MACjBC,SAAU,kBAAM,MAChBC,WAAY,kBAAM,MAClBC,YAAa,kBAAM,MACnBC,MAAOZ,I,uBCPIa,EAAoB,SAC/BD,EACAE,GAEA,OAAQA,EAAOC,MACb,KAAKjB,EAAiBkB,MACpB,MAAO,CAAEf,KAAMF,EAAQiB,MAAOb,OAAQW,EAAOX,QAE/C,KAAKL,EAAiBmB,MACpB,OAAO,2BAAKL,GAAZ,IAAmBT,OAAQC,MAE7B,KAAKN,EAAiBoB,KACpB,OAAO,2BAAKN,GAAZ,IAAmBT,OAAQW,EAAOX,SAEpC,KAAKL,EAAiBqB,KACpB,OAAO,2BAAKP,GAAZ,IAAmBX,KAAMa,EAAOb,OAElC,QACE,OAAOW,I,OCfAQ,EAA2C,SAAC,GAGlD,IAFLC,EAEI,EAFJA,SACAC,EACI,EADJA,aAEA,EAA0BC,qBAAWV,EAAmBS,GAAxD,mBAAOV,EAAP,KAAcY,EAAd,KAEMjB,EAAYkB,uBAAY,SAACtB,GAC7BuB,YAAYvB,GACZqB,EAAS,CAAET,KAAMjB,EAAiBkB,MAAOb,aACxC,IAEGK,EAAYiB,uBAAY,WAC5BD,EAAS,CAAET,KAAMjB,EAAiBmB,UACjC,IAEGR,EAAWgB,uBAAY,SAACtB,GAC5BuB,YAAYvB,GACZqB,EAAS,CAAET,KAAMjB,EAAiBoB,KAAMf,aACvC,IAEGQ,EAAcc,uBAAY,WAC9BD,EAAS,CAAET,KAAMjB,EAAiBqB,KAAMlB,KAAMF,EAAQiB,UACrD,IAEGN,EAAae,uBAAY,WAC7BD,EAAS,CAAET,KAAMjB,EAAiBqB,KAAMlB,KAAMF,EAAQG,SACrD,IAEH,OACE,cAACG,EAAWsB,SAAZ,CACEC,MAAO,CACLrB,YACAC,YACAC,WACAE,cACAD,aACAE,SAPJ,SAUGS,K,yGC7CMQ,EAAmB,SAAC1B,GAC/B,IAAQM,EAAaqB,qBAAWzB,GAAxBI,UCJiB,SACzBK,EACAiB,GAEI,IADJC,EACG,uDADW,GAERC,EAAYC,kBAAmB,kBAAM,QACrCC,EAAcD,iBAAgC,GAEpDE,qBAAU,WACRH,EAAUI,QAAUvB,KAGtBsB,qBACE,WAUE,OARID,EAAYE,QAAU,GACxBC,cAAcH,EAAYE,SAI5BF,EAAYE,QAAUE,aAAY,kBAAMN,EAAUI,YAAWN,GAGtD,WACLO,cAAcH,EAAYE,YAZvB,YAeHL,IDrBNQ,EAAY,kBAAM/B,EAASN,KAAS,M,SELhCsC,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,SAAU,WACVC,OAAQ,EACRC,UAAW,+BACXC,MAAO,OACPC,OAAQ,IAEVC,KAAM,CACJF,MAAO,OACPH,SAAU,gBAIDM,EAA8B,WACzC,MAAuBT,IAAfE,EAAR,EAAQA,KAAMM,EAAd,EAAcA,KAEd,OACE,qBAAKE,UAAWF,EAAhB,SACE,qBAAKE,UAAWR,OCbTS,EAAyC,SAAC,GAAD,IACpD/B,EADoD,EACpDA,SACAgC,EAFoD,EAEpDA,UACAC,EAHoD,EAGpDA,KAHoD,OAKpD,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,CAAUC,cAAeJ,EAAWK,GAAIJ,EAAxC,SACGjC,IAEFgC,IAAcC,GAAQ,cAAC,EAAD,Q,+BCfrBK,EAAa,CACjBC,WAAW,EACXC,gBAAiB,CAAEC,QAAQ,GAC3BC,QAAS,YAQEC,EAA2C,SAAC,GAIlD,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,SACGC,EACC,iBACJ,EAA0DC,YAASH,GAAnE,0BAASI,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,SAAjB,OAA+BC,EAA/B,EAA+BA,MAAOC,EAAtC,EAAsCA,QAAS5C,EAA/C,EAA+CA,MAEzC6C,EAAWD,KAAaD,EAE9B,OACE,cAACG,EAAA,EAAD,uCACMf,GACAQ,GAFN,IAGE,gBAAeD,GAAYC,EAAM,iBACjCI,MAAOE,EACPE,WAAYF,GAAYF,EACxBN,KAAMA,EACNI,OAAQ,SAACO,GACHV,GAIJG,EAAOO,IAETN,SAAU,SAACM,GACLV,GAIJI,EAASM,IAEXhD,MAAOA,M,iBCxCPa,EAAYC,aAAqC,iBAAO,CAC5DO,KAAM,kBAAe,CACnB4B,UADI,EAAGC,KACW,iBAAmB,YACrCC,WAAY,6BASHC,EAAoC,SAAC,GAAD,IAAGF,EAAH,EAAGA,KAAMG,EAAT,EAASA,WAAT,OAC/C,eAACC,EAAA,EAAD,CAAQC,QAASF,EAAYlB,QAAQ,OAAOqB,KAAK,QAAjD,UACGN,EAAO,OAAS,OACjB,cAAC,IAAD,CAAeO,QAAS5C,EAAU,CAAEqC,e,wBCoBlCQ,E,kCAAAA,EACWC,QAAU,YAMU,IAAD,wBALhCC,EAKgC,EALhCA,QACAC,EAIgC,EAJhCA,SAIgC,IAHhCC,iBAGgC,MAHpB,IAGoB,MAFhCC,aAEgC,MAFxB,KAEwB,EADhC/D,EACgC,EADhCA,MAEA,QAAcgE,IAAVhE,EACF,OAAO4D,EAAU,GAAK,GAGxB,GAAqB,kBAAV5D,GAAuC,kBAAVA,EACtC,OAAO4D,EAAO,eACPC,EAAW7D,GADJ,UAEP6D,EAFO,aAEMH,EAAUO,QAAQjE,EAAO+D,IAG/C,IAAMG,EAAC,8BAAGlE,EAAMkE,SAAT,QAAclE,EAAMmE,cAApB,QAA8BnE,EAAMoE,SAApC,QAAyCpE,EAAMqE,IAChDC,EAAC,8BAAGtE,EAAMsE,SAAT,QAActE,EAAMuE,YAApB,QAA4BvE,EAAMwE,SAAlC,QAAuCxE,EAAMqE,IAC9CI,EAAC,8BAAGzE,EAAMyE,SAAT,QAAczE,EAAM0E,aAApB,QAA6B1E,EAAMwE,SAAnC,QAAwCxE,EAAMqE,IAC/CM,EAAC,8BAAG3E,EAAM2E,SAAT,QAAc3E,EAAM4E,WAApB,QAA2B5E,EAAMoE,SAAjC,QAAsCpE,EAAMqE,IAEnD,OAAIT,OACWI,IAANW,GAAmB,CAACL,EAAGG,EAAGP,GAAGW,OAAM,SAACC,GAAD,OAAUA,IAASH,KACzDjB,EAAUC,QAAQ,CAChBC,UACAC,WACAC,YACAC,QACA/D,MAAO2E,IAETjB,EAAUqB,QAAQlB,EAAU,CAC1B,CAAC,SAAUK,GACX,CAAC,OAAQI,GACT,CAAC,QAASG,GACV,CAAC,MAAOE,KAITjB,EAAUsB,YAAYnB,EAAUC,EAAW,CAChDK,OAAQT,EAAUO,QAAQC,EAAGH,GAC7BQ,KAAMb,EAAUO,QAAQK,EAAGP,GAC3BW,MAAOhB,EAAUO,QAAQQ,EAAGV,GAC5Ba,IAAKlB,EAAUO,QAAQU,EAAGZ,MA5C1BL,EAgDWuB,WAAa,SAACpB,EAAkBqB,GAC7C,MAA0BxB,EAAUyB,SAASD,GAArCE,EAAR,EAAQA,OAER,GAAc,IAFd,EAAgBC,OAE8B,IAA3BD,EAAO,GAAGF,MAAMI,OACjC,OAAO5B,EAAU6B,SAAS1B,EAAUuB,GAGtC,kBAA2BA,GAApBI,EAAP,KAAiBC,EAAjB,WAEA,MAAM,CAAN,UACK5B,EADL,aACkB2B,EAAMxF,QADxB,mBAEK0D,EAAU6B,SAAS1B,EAAU4B,MA3DhC/B,EA+DWyB,SAAW,SAACO,GAEzB,IAAIL,EAAQ,EAuBZ,MAAO,CAAED,OApBMO,OAAOC,QAAQF,GAE3BG,QAAO,SAACC,EAAD,GAA8B,IAAD,mBAAjBhB,EAAiB,KAAX9E,EAAW,KACnC,QAAcgE,IAAVhE,EACF,OAAO8F,EAGT,IAAMC,EAAYD,EAASE,WAAU,SAACC,GAAD,OAAUA,EAAKjG,QAAUA,KAU9D,OARI+F,GAAa,EACfD,EAASC,GAAWb,MAAMgB,KAAKpB,GAE/BgB,EAASI,KAAK,CAAElG,QAAOkF,MAAO,CAACJ,KAGjCO,IAEOS,IACN,IAEYT,UAxFf3B,EA2FWqB,QAAU,SACvBlB,EACAtF,GAFuB,OAIvBA,EAAOsH,QACL,SAACM,EAAD,0BAAUrB,EAAV,KAAgB9E,EAAhB,iBACYgE,IAAVhE,EACImG,EADJ,2BAGSA,GAHT,4BAIUtC,GAJV,OAIqBiB,EAAK,GAAGsB,eAJ7B,OAI6CtB,EAAKuB,OAAO,IAAOrG,MAElE,KAvGA0D,EA0GWsB,YAAc,SAC3BnB,EACAC,EACAoB,GAEA,IAAQf,EAA6Be,EAA7Bf,OAAQI,EAAqBW,EAArBX,KAAMG,EAAeQ,EAAfR,MAAOE,EAAQM,EAARN,IAE7B,MAAI,CAACT,EAAQI,EAAMG,EAAOE,GAAK0B,cAAStC,GAC/BN,EAAUuB,WAAWpB,EAAUqB,GAAOqB,KAAKzC,GAGhDS,IAASG,EACL,GAAN,OAAUb,EAAV,aAAuBe,EAAvB,YAA8BF,EAA9B,YAAuCP,EAAvC,YAAiDI,GAG/CK,IAAQT,EACJ,GAAN,OAAUN,EAAV,aAAuBe,EAAvB,YAA8BL,EAA9B,YAAsCJ,GAGpCS,IAAQL,EACJ,GAAN,OAAUV,EAAV,aAAuBM,EAAvB,YAAiCI,GAG7B,GAAN,OAAUV,EAAV,aAAuBM,IAjIrBT,EAoIW6B,SAAW,SAAC1B,EAAkBuB,GAAnB,OACxBA,EAAOS,QACL,SAACW,EAAD,OAAWtB,EAAX,EAAWA,MAAOlF,EAAlB,EAAkBA,MAAlB,4BACKwG,GADL,YAEKtB,EAAMuB,KAAI,SAAC3B,GAAD,gBAAajB,EAAb,YAAyBiB,EAAzB,aAAkC9E,UAEjD,KA1IA0D,EA6IWO,QAAU,SACvBjE,GAEI,IADJ+D,EACG,uDADqB,KAExB,MAAqB,kBAAV/D,GAAuC,qBAAVA,EAC/BA,EAGJA,EAIC,GAAN,OAAUA,GAAV,OAAkB+D,GAHV,GAAN,OAAU/D,IAyBT,IAAQ0G,EA/KThD,EA4JUgD,gBAAkB,SAG9B7C,EACAC,GAJ8B,MAK1B,CACJ6C,SAAU,SAAC3G,EAAuB+D,GAAxB,OACRL,EAAUC,QAAQ,CAAEE,WAAUC,YAAW9D,QAAO+D,WAClDgB,QAAS,SAAC/E,EAAuB+D,GAAxB,OACPL,EAAUC,QAAQ,CAChBC,SAAS,EACTC,WACAC,YACA9D,QACA+D,aC5MK6C,GAJeF,EAE1B,UAE2BA,EAE3B,Y,QCFWG,EAA6B,SAAC,GAAD,IAAGpH,EAAH,EAAGA,SAAUqH,EAAb,EAAaA,GAAb,OACxC,mBAAGC,KAAMD,EAAIE,OAAO,SAASC,IAAI,aAAjC,SACGxH,KCAQyH,EAAqC,WAChD,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,eAAC,EAAD,CAAY3F,KAAM0F,EAAU3F,UAAW,GAAvC,UACE,eAAC6F,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,gBAA/B,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAYvF,QAAQ,KAAKwF,MAAM,UAA/B,+BAIF,cAACL,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,EAAD,CACEvE,KAAMkE,EACN/D,WAAY,kBAAMgE,GAAaD,WAIrC,uBACA,eAACM,EAAA,EAAD,CAAYvF,QAAQ,QAAQwF,MAAM,UAAlC,oKAGiB,0DAHjB,2MAM4C,IAC1C,uDAPF,uGAUA,uBACA,eAACD,EAAA,EAAD,CAAYvF,QAAQ,QAAQwF,MAAM,UAAlC,2FAEU,IACR,iCACE,2DACQ,IALZ,KAMK,IACH,iCACE,kEARJ,yGAWmC,IACjC,cAAC,EAAD,CAAMb,GAAIc,IAAV,+BAZF,+OAkBA,uBACA,eAACF,EAAA,EAAD,CAAYvF,QAAQ,QAAQwF,MAAM,UAAlC,sPAIyB,8CAJzB,6HAQA,uBACA,eAACD,EAAA,EAAD,CAAYvF,QAAQ,QAAQwF,MAAM,UAAlC,8CACoC,IAClC,gEAFF,yOAOA,+BACE,yEACA,yCACU,IACR,cAAC,EAAD,CAAMb,GAAE,gCAAR,0CAKJ,uBACA,cAACY,EAAA,EAAD,CAAYvF,QAAQ,QAAQwF,MAAM,UAAlC,kFAGA,uBACA,cAACD,EAAA,EAAD,CAAYvF,QAAQ,QAAQwF,MAAM,UAAlC,SACE,cAAC,EAAD,CAAMb,GAAIe,IAAV,+EAIF,2BC7EAhH,EAAYC,aAAW,iBAAO,CAClCgH,QAAS,CAAEC,UAAW,WACtB1G,KAAK,eAAMuF,EAAc7B,QAAQ,SAGtBiD,EAAgE,SAAC,GAGvE,ICpBiBzG,EDkBtB0G,EAEI,EAFJA,WACA1J,EACI,EADJA,OAEA,EAA0BsC,IAAlBiH,EAAR,EAAQA,QAASzG,EAAjB,EAAiBA,KACjB,GCtBsBE,EDsB8BF,ECrBpD6G,mBACE,iBAAO,CACLC,SAAU,gBAAG1I,EAAH,EAAGA,SAAa8C,EAAhB,wBACR,cAAC+E,EAAA,EAAD,yBAAMG,MAAI,EAACW,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAO/F,GAArC,aACE,qBAAKhB,UAAWA,EAAhB,SAA4B9B,QAGhC8I,UAAW,gBAAG9I,EAAH,EAAGA,SAAa8C,EAAhB,wBACT,cAAC+E,EAAA,EAAD,yBAAMG,MAAI,EAACW,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAO/F,GAArC,aACE,qBAAKhB,UAAWA,EAAhB,SAA4B9B,QAGhC+I,WAAY,gBAAG/I,EAAH,EAAGA,SAAa8C,EAAhB,wBACV,cAAC+E,EAAA,EAAD,yBAAMG,MAAI,EAACW,GAAI,IAAQ7F,GAAvB,aACE,qBAAKhB,UAAWA,EAAhB,SAA4B9B,WAIlC,CAAC8B,KDGK4G,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,WAE7B,EAA0CrB,oBAAS,GAAnD,mBAAOsB,EAAP,KAAsBC,EAAtB,KACA,EAAoDvB,oBAAS,GAA7D,mBAAOwB,EAAP,KAA2BC,EAA3B,KAIA,OAFA3I,EAAiB1B,GAGf,eAAC,IAAMoD,SAAP,WACE,cAAC2F,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACiB,EAAD,UACE,cAAC,EAAD,QAGJ,cAAClB,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,eAACiB,EAAD,WACE,cAACd,EAAA,EAAD,CAAYvF,QAAQ,KAApB,4CACA,uBACA,eAACmF,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,gBAA/B,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNlE,QAAS,CAAEpC,KAAMoH,OAAgBzE,EAAY8D,GAC7C3F,QAAQ,QAHV,SAKGsG,EACG,gDACA,wBAGR,cAACnB,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,EAAD,CACEvE,KAAMuF,EACNpF,WAAY,kBAAMqF,GAAkBD,gBAM9C,cAAC,EAAD,CAAY/G,KAAM+G,EAAlB,SACE,eAACnB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACY,EAAD,UACE,cAAC,EAAD,CACEU,MAAM,oBACNxG,KAAK,2BACLyG,YAAY,6CAGhB,cAACP,EAAD,UACE,cAAC,EAAD,CACEM,MAAM,0BACNxG,KAAK,uBACLyG,YAAY,mEAGhB,cAACX,EAAD,UACE,cAAC,EAAD,CACEU,MAAM,qBACNxG,KAAK,6BACLyG,YAAY,8CACZxG,UAAQ,MAGZ,cAACiG,EAAD,UACE,cAAC,EAAD,CACEM,MAAM,sBACNxG,KAAK,yBACLyG,YAAY,kDACZxG,UAAQ,WAKhB,cAACgF,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,eAACiB,EAAD,WACE,cAAC,EAAD,CAAY9G,KAAM+G,EAAlB,SACE,yBAEF,cAACf,EAAA,EAAD,CAAYvF,QAAQ,KAApB,mCACA,uBACA,eAACmF,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,gBAA/B,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNlE,QAAS,CACPpC,KAAMsH,OAAqB3E,EAAY8D,GAEzC3F,QAAQ,QALV,SAOGwG,EACG,+CACA,wBAGR,cAACrB,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,EAAD,CACEvE,KAAMyF,EACNtF,WAAY,kBAAMuF,GAAuBD,gBAMnD,cAAC,EAAD,CAAYjH,KAAMiH,EAAlB,SACE,eAACrB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACY,EAAD,UACE,cAAC,EAAD,CACEU,MAAM,UACNxG,KAAK,6BACLyG,YAAY,yBAGhB,cAACX,EAAD,UACE,cAAC,EAAD,CACEU,MAAM,gBACNxG,KAAK,8BACLyG,YAAY,yBAGhB,cAACX,EAAD,UACE,cAAC,EAAD,CACEU,MAAM,QACNxG,KAAK,8BACLyG,YAAY,sCAGhB,cAACP,EAAD,UACE,cAAC,EAAD,CACEM,MAAM,sBACNxG,KAAK,gCACLyG,YAAY,qCAGhB,cAACX,EAAD,UACE,cAAC,EAAD,CACEU,MAAM,YACNxG,KAAK,iCACLyG,YAAY,gCAKpB,cAACxB,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,eAACiB,EAAD,WACE,cAAC,EAAD,CAAY9G,KAAMiH,EAAlB,SACE,yBAEF,cAACjB,EAAA,EAAD,CAAYvF,QAAQ,KAApB,+BACA,uBACA,cAACuF,EAAA,EAAD,CAAYvF,QAAQ,QAAQwF,MAAM,UAAlC,4GAMJ,cAACL,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACiB,EAAD,UACE,cAAC,EAAD,CACEK,MAAM,uBACNxG,KAAK,qBACLyG,YAAY,qDACZC,WAAS,EACTC,QAAS,EACTC,QAAS,SAIf,cAAC3B,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACiB,EAAD,UACE,cAAC,EAAD,CACEK,MAAM,8CACNxG,KAAK,6BACLyG,YAAY,yFACZC,WAAS,EACTC,QAAS,EACTC,QAAS,QAIf,cAAC3B,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACiB,EAAD,UACE,cAAClF,EAAA,EAAD,CAAQC,QAAS0E,EAAY9F,QAAQ,YAArC,6CEvMG+G,EAA0B,WACrC,IAAQvK,ECLiB,WACzB,MAAgCuB,qBAAWzB,GAE3C,MAAO,CACLE,UAHF,EAAQA,UAINE,SAJF,EAAmBA,UDIGsK,GAAdxK,UAER,OACE,cAAC,IAAD,CACEyK,cAAe5K,IACf6K,SAAU,SAAC9K,GAAD,OAAYI,EAAUJ,IAFlC,SAIGyJ,K,yBEEDnH,EAAYC,aAAmC,iBAAO,CAC1DwI,QAAS,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUF,EAApB,EAAoBA,QAApB,OACPA,EAAO,aAAKC,QAAOC,YAAa5C,EAAc7B,QAAQuE,IAAa,IACrEjI,KAAM,gBACJoI,EADI,EACJA,WACAF,EAFI,EAEJA,MACAC,EAHI,EAGJA,SACAvI,EAJI,EAIJA,OACAyI,EALI,EAKJA,UACAJ,EANI,EAMJA,QACAK,EAPI,EAOJA,QAPI,mBAAC,mDASDF,EAAa,CAAEA,cAAe,IAC9BxI,EAAS,CAAEA,UAAW,IACtByI,EAAY,CAAEA,aAAc,IAC3BJ,EAKD,GALA,2BAEMC,EAAQ,CAAEA,SAAU,IACpBC,EAAW,CAAEA,YAAa,KAGhCG,EAAU,CAAEC,KAAM,YAAe,SAI5BC,EAA4C,SAAC,GAInD,IAHLpK,EAGI,EAHJA,SAGI,IAFJqK,eAEI,MAFM,SAEN,EADDvH,EACC,iBACEkB,EAAU5C,EAAU0B,GAEpBwH,EAAU7B,mBACd,kBACE3F,EAAM+G,QACF,gBAAG7J,EAAH,EAAGA,SAAH,OACE,cAAC6H,EAAA,EAAD,CACE7D,QAAS,CAAEpC,KAAMoC,EAAQ6F,SACzB/B,WAAS,EACTE,MAAI,EACJD,eAAgBsC,EAJlB,SAMGrK,KAGLuK,IAAMrI,WACZ,CAAC8B,EAAQ6F,QAASQ,EAASvH,EAAM+G,UAGnC,OACE,cAAChC,EAAA,EAAD,CACE7D,QAAS,CAAEpC,KAAMoC,EAAQpC,MACzBkG,WAAS,EACTE,MAAI,EACJD,eAAgBjF,EAAM+G,aAAUtF,EAAY8F,EAJ9C,SAME,cAACC,EAAD,UAAUtK,OClEVoB,GAAYC,aAAW,iBAAO,CAClCO,KAAM,CACJqI,UAAW,OACX1I,SAAU,YAEZiJ,QAAQ,eACHrD,EAAc7B,QAAQ,SAIhBmF,GAAoB,WAC/B,IAAMzG,EAAU5C,KAEhB,OACE,cAAC,EAAD,CAAaiJ,QAAQ,SAASH,SAAO,EAArC,SACE,cAACrC,EAAA,EAAD,CAAM7D,QAAS,CAAEpC,KAAMoC,EAAQpC,MAAQoG,MAAI,EAAC0C,GAAI,EAAG/B,GAAI,GAAvD,SACE,qBAAK7G,UAAWkC,EAAQwG,QAAxB,SACE,cAAC,EAAD,WCrBGG,GAAmB,SAAC,GAAD,IAAG3K,EAAH,EAAGA,SAAH,OAC9B,cAAC,EAAD,CACEgK,WAAW,OACXF,MAAM,OACNC,SAAU,GACVM,QAAQ,WACRR,QAAS,CAAE9E,EAAG,EAAGJ,EAAG,GALtB,SAOG3E,KCRQ4K,GAAmB,SAAC,GAAD,IAAG5K,EAAH,EAAGA,SAAH,OAC9B,cAAC,EAAD,CAAagK,WAAW,OAAOF,MAAM,UAAUD,QAAS,CAAEjF,IAAK,IAA/D,SACG5E,KCDCoB,GAAYC,aAAW,iBAAO,CAClCO,KAAM,CACJqI,UAAW,YAIFY,GAAuB,SAAC,GAAkB,IAAhB7K,EAAe,EAAfA,SAC7B4B,EAASR,KAATQ,KAER,OACE,cAACiG,EAAA,EAAD,CACEiD,WAAW,SACX9G,QAAS,CAAEpC,QACXkG,WAAS,EACTiD,UAAU,SACVhD,eAAe,gBALjB,SAOG/H,KCdMgL,GAAyB,kBACpC,qBAAKlJ,UAAU,YAAf,SACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAACmG,EAAA,EAAD,CAAYvF,QAAQ,KAApB,gCAEF,cAAC,GAAD,IACA,cAAC,GAAD,kDCdOuI,GAAa,sCACrBC,EADqB,yBACrBA,EADqB,uBAGxBC,MAAMC,KAAKF,GACRG,QAAO,SAACvJ,GAAD,QAAiBA,KACxBgF,KAAK,M,gECkBJ1F,GAAYC,aAA0C,iBAAO,CACjEyG,UAAW,CACTvG,SAAU,YAEZ+J,KAAM,CACJxB,MAAO,OACPyB,SAAU,SACV7J,MAAO,OACPC,OAAQ,GAEV6J,WAAY,CACVA,WAAW,GAAD,OAbO,GAaP,OAEZC,UAAW,CACTC,QAAS,GAEXC,MAAO,CACLnK,OAAQ,qBAAGoK,SAA2B,GAAK,IAE7CA,SAAU,CACR9B,MAAO,OACPC,SAAU,WAEZ8B,KAAM,CACJ/B,MAAO,OACP3E,KAAM,EACNzD,MAAO,OACPH,SAAU,YAEZuK,UAAW,CACThC,MAAO,OACPC,SAAU,YAIDgC,GAAkC,SAAC,GAQ1C,EAPJ/L,SAOK,IAAD,IANJgE,QAASgI,OAML,MANmB,GAMnB,EALJ5C,EAKI,EALJA,MACA6C,EAII,EAJJA,SACAL,EAGI,EAHJA,SACArL,EAEI,EAFJA,MACGuC,EACC,kBACEkB,EAAU5C,GAAU,CAAEwK,WAAYA,IAClCM,EAAYrL,iBAA8B,MAChD,EAA0B6G,mBAAS,GAAnC,mBAAOyE,EAAP,KAAcC,EAAd,KAaA,OAXArL,qBAAU,WACR,GAAKmL,EAAUlL,QAAf,CAIA,IAAQQ,EAAW0K,EAAUlL,QAAQqL,wBAA7B7K,OAEF8K,EAAaC,KAAKC,MAAMhL,EAzDb,IAyDsC,EACvD4K,EAASG,KAAKE,IAAIH,EAAT,OAAqBL,QAArB,IAAqBA,IAAY,OACzC,CAACA,IAGF,eAACpE,EAAA,EAAD,yBAAMc,GAAI,IAAQ7F,GAAlB,IAAyBkB,QAAS,CAAEpC,KAAMoC,EAAQ8D,WAAaE,MAAI,EAAnE,UACE,sBAAKlG,UAAWkC,EAAQsH,KAAxB,UACE,eAACrD,EAAA,EAAD,CACEjE,QAAS,CAAEpC,KAAMoC,EAAQwH,YACzBkB,QAAM,EACNhK,QAAQ,QAHV,UAKE,uBAAMZ,UAAWkC,EAAQyH,UAAzB,UAAqCrC,EAArC,OACCuD,OAEFR,EAAQ,GACPhB,MAAMC,KAAKD,MAAMgB,IAAQnF,KAAI,SAAC4F,GAAD,OAC3B,cAAC3E,EAAA,EAAD,CACEjE,QAAS,CAAEpC,KAAMoC,EAAQwH,YACzBkB,QAAM,EACNhK,QAAQ,QAHV,SAKGiK,SAGP,qBAAK7K,UAAWkC,EAAQ2H,WAE1B,sBAAK7J,UAAWkC,EAAQ6H,KAAMgB,IAAKX,EAAnC,UACE,eAACjE,EAAA,EAAD,CACEjE,QAAS,CAAEpC,KAAMqJ,GAAWjH,EAAQwH,WAAYQ,EAAYzL,QAC5DmC,QAAQ,QACRwF,MAAM,UAHR,UAKE,sBAAMpG,UAAWmJ,GAAWjH,EAAQ8H,UAAWE,EAAY5C,OAA3D,SACGA,IACK,IACP7I,KACW,IACd,cAAC0H,EAAA,EAAD,CACEjE,QAAS,CAAEpC,KAAMqJ,GAAWjH,EAAQ4H,SAAUI,EAAYJ,WAC1DlJ,QAAQ,YACRwF,MAAM,UAHR,SAKG0D,YCnHLxK,GAAYC,aAAW,iBAAO,CAClC+H,MAAO,CACL0D,WAAY,KAEdlB,SAAU,CACRkB,WAAY,SAIHC,GAAsD,SAAC,GAE7D,IADLjO,EACI,EADJA,OAEMkF,EAAU5C,KAEhB,OACE,eAAC,IAAMc,SAAP,WACE,eAAC2F,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACa,GAAI,GAAzB,UACE,cAAC,GAAD,CACEA,GAAI,GACJS,MAAM,SACN7I,MAAOzB,EAAOkO,eAAeC,cAE/B,cAAC,GAAD,CACEtE,GAAI,GACJS,MAAM,iBACN7I,MAAOzB,EAAOkO,eAAeE,iBAE/B,cAAC,GAAD,CACEvE,GAAI,EACJS,MAAM,cACN7I,MAAOzB,EAAOkO,eAAeG,kBAE/B,cAAC,GAAD,CACExE,GAAI,EACJ3E,QAAS,CAAE4H,SAAU5H,EAAQ4H,UAC7BxC,MAAM,aACNwC,SAAS,4CACTrL,MAAOzB,EAAOkO,eAAeI,kBAGjC,cAACvF,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACa,GAAI,GAAzB,SACE,cAAC,GAAD,CACEA,GAAI,GACJ3E,QAASA,EACToF,MAAM,gBACNwC,SAAS,4CACTrL,MAAO,iCAASzB,EAAOkO,eAAeK,uB,UCpDjC,OAA0B,iC,oDCSnCjM,GAAYC,aAAW,iBAAO,CAClCiM,IAAK,CACHC,OAAQ,iBACR1D,QAAS,EACTnI,MAAO,KAET8L,YAAa,CAAEzD,SAAU,QAAS0D,aAAc,GAChDC,aAAc,CAAE3D,SAAU,QAAS+C,WAAY,IAAKW,aAAc,GAClEE,UAAW,CAAEb,WAAY,KACzB1D,MAAO,CACLW,SAAU,GACV+C,WAAY,KAEdvM,MAAO,CACLwJ,SAAU,GACV+C,WAAY,SAQHc,GAA2C,SAAC,GAAgB,IAAd9O,EAAa,EAAbA,OACzD,EAAkEsC,KAA1DkM,EAAR,EAAQA,IAAKE,EAAb,EAAaA,YAAaE,EAA1B,EAA0BA,aAAcC,EAAxC,EAAwCA,UAAc3J,EAAtD,kBAEA,OACE,eAAC6D,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACa,GAAI,GAAzB,UACE,eAACd,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,EAAf,UACE,cAACV,EAAA,EAAD,CAAYjE,QAAS,CAAEpC,KAAM+L,GAAajL,QAAQ,KAAlD,kDAGA,uBACA,uBACA,cAAC,GAAD,CACEiG,GAAI,GACJ3E,QAASA,EACToF,MAAM,sBACNwC,SAAS,6CACTrL,MAAOzB,EAAO+O,SAASC,uBAG3B,eAACjG,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACW,GAAI,EAAGoC,UAAU,SAASD,WAAW,WAA1D,UACE,eAACiD,GAAA,EAAD,WACE,qBAAKC,IAAI,iBAAiBC,IAAKC,GAAMxM,MAAO,MAC5C,uBACA,0BAEF,eAACqM,GAAA,EAAD,CAAKjM,UAAWwL,EAAhB,UACE,cAACrF,EAAA,EAAD,CAAYjE,QAAS,CAAEpC,KAAM8L,GAA7B,6BAGA,cAACzF,EAAA,EAAD,CAAYjE,QAAS,CAAEpC,KAAM4L,GAA7B,0ECvDGW,GAAwD,SAAC,GAAD,IACnErP,EADmE,EACnEA,OADmE,OAGnE,eAAC,IAAMoD,SAAP,WACE,cAAC2F,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACa,GAAI,GAAzB,SACE,cAAC,GAAD,CACEA,GAAI,GACJS,MAAM,yBACN6C,SAAU,EACV1L,MAAOzB,EAAOsP,UAAUC,aAG5B,uBACA,eAACxG,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACa,GAAI,GAAzB,UACE,cAACd,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CAAYqG,WAAS,EAAC5L,QAAQ,QAA9B,gJAKF,cAAC,GAAD,CACEiG,GAAI,GACJsD,SAAU,EACV1L,MAAOzB,EAAOsP,UAAUG,sBAG5B,uBACA,uBACA,eAAC1G,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACa,GAAI,GAAzB,UACE,cAAC,GAAD,CAAWA,GAAI,EAAGS,MAAM,YACxB,cAAC,GAAD,CAAWT,GAAI,EAAGS,MAAM,iBC9BjBoF,GAAuD,SAAC,GAAD,IAClE1P,EADkE,EAClEA,OADkE,OAGlE,eAAC,IAAMoD,SAAP,WACE,cAAC2F,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACa,GAAI,GAAzB,SACE,cAACV,EAAA,EAAD,CAAYqG,WAAS,EAAC5L,QAAQ,KAA9B,uDAIF,eAACmF,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACa,GAAI,GAAzB,UACE,cAAC,GAAD,CACEA,GAAI,GACJS,MAAM,0BACN7I,MAAOzB,EAAO+O,SAASY,kBAEzB,cAAC,GAAD,CACE9F,GAAI,GACJS,MAAM,iCACN7I,MAAOzB,EAAO+O,SAASa,cAEzB,cAAC,GAAD,CACE/F,GAAI,GACJS,MAAM,6BACN7I,MAAOzB,EAAO+O,SAASc,uBCrBlBC,GAAmD,SAAC,GAAD,IAC9D9P,EAD8D,EAC9DA,OAD8D,OAG9D,eAAC+I,EAAA,EAAD,CAAMC,WAAS,EAACiD,UAAU,SAASD,WAAW,SAA9C,UACE,eAACjD,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,GAAf,UACE,uBACA,0BAEF,cAAC,GAAD,CAAa7J,OAAQA,IACrB,cAAC,GAAD,CAAcA,OAAQA,IACtB,uBACA,cAAC,GAAD,CAAeA,OAAQA,IACvB,cAAC,GAAD,CAAgBA,OAAQA,QChBf+P,GAA0B,WACrC,IAAQ/P,ECFkB,WAC1B,MAA8B2B,qBAAWzB,GAAjCO,EAAR,EAAQA,MAER,MAAO,CACLF,WAHF,EAAeA,WAIbP,OAAQS,EAAMT,QDHGgQ,GAAXhQ,OAER,OACE,qBAAKgD,UAAU,aAAf,SACE,cAAC,GAAD,CAAWhD,OAAQA,OEHZiQ,GAAgB,WAG3B,OCNwB,WACxB,MAA2CtO,qBAAWzB,GAEtD,MAAO,CACLK,WAHF,EAAQA,WAINC,YAJF,EAAoBA,YAKlBV,KALF,EAAiCW,MAKnBX,MDFGoQ,GAATpQ,MAGN,KAAKF,EAAQG,KACX,OAAO,cAAC,GAAD,IAET,KAAKH,EAAQiB,MACX,OAAO,cAAC,GAAD,IAET,QACE,OAAO,O,gBETbsP,kBACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CACEjP,aAAc,CACZnB,OAAQqQ,cACRvQ,KAAMF,EAAQG,MAHlB,SAME,cAAC,GAAD,QAGJuQ,SAASC,eAAe,U,gCCjB1B,kCAAO,IAAMtQ,EAAmC,CAC9C8O,SAAU,CACRc,cAAe,0CACfF,gBAAiB,mCACjBX,kBAAmB,YACnBY,YACE,oEAEJ1B,eAAgB,CACdC,YAAa,GACbI,aAAc,GACdD,aAAc,GACdF,eAAgB,GAChBC,gBAAiB,MAEnBiB,UAAW,CACTC,SAAU,GACVE,iBAAkB,M,gCCnBtB,wIAAO,IAAMpG,EACX,qFAEWC,EACX,6HAEWkH,EAAoB,iBAEpB3C,EAAYxB,MAAMC,KAAKD,MAAM,MACvCnE,KAAI,SAAC4F,GAAD,MAAO,OACX9F,KAAK,M,4ICNKqI,EAAc,WACzB,IAAKI,EAAOC,OACV,OAAOzQ,IAGT,IAAM0Q,EAAcC,aAAaC,QAAQL,KACnCxQ,EAAS8Q,KAAKC,MAAMJ,GAAe,MAEzC,MAAO,CACLzC,eAAe,2BACVjO,IAAgBiO,gBAChBlO,EAAOkO,gBAEZoB,UAAU,2BACLrP,IAAgBqP,WAChBtP,EAAOsP,WAEZP,SAAS,2BACJ9O,IAAgB8O,UAChB/O,EAAO+O,YAKHxN,EAAc,SAACvB,GAC1B,IAAKyQ,EAAOC,OACV,OAAOzQ,IAGT2Q,aAAaI,QAAQR,IAAmBM,KAAKG,UAAUjR,O","file":"static/js/main.86a707b1.chunk.js","sourcesContent":["import { IObjectionModel } from \"common/models/form-model\";\r\n\r\nexport enum AppContextAction {\r\n  PRINT,\r\n  RESET,\r\n  SAVE,\r\n  VIEW,\r\n}\r\n\r\nexport enum AppView {\r\n  FORM,\r\n  PRINT,\r\n}\r\n\r\nexport interface IAppContextState {\r\n  values: IObjectionModel;\r\n  view: AppView;\r\n}\r\n\r\nexport interface IAppContext {\r\n  printData: (values: IObjectionModel) => void;\r\n  resetData: () => void;\r\n  saveData: (values: IObjectionModel) => void;\r\n  toFormView: () => void;\r\n  toPrintView: () => void;\r\n  state: IAppContextState;\r\n}\r\n\r\nexport type AppContextActions =\r\n  | {\r\n      values: IObjectionModel;\r\n      type: AppContextAction.PRINT;\r\n    }\r\n  | {\r\n      type: AppContextAction.RESET;\r\n    }\r\n  | {\r\n      values: IObjectionModel;\r\n      type: AppContextAction.SAVE;\r\n    }\r\n  | {\r\n      view: AppView;\r\n      type: AppContextAction.VIEW;\r\n    };\r\n","import { defaultFormData } from \"common/constants/defaults\";\r\nimport { createContext } from \"react\";\r\nimport { AppView, IAppContext } from \"./types\";\r\n\r\nexport const defaultAppContext = {\r\n  view: AppView.FORM,\r\n  values: defaultFormData,\r\n};\r\n\r\nexport const AppContext = createContext<IAppContext>({\r\n  printData: () => null,\r\n  resetData: () => null,\r\n  saveData: () => null,\r\n  toFormView: () => null,\r\n  toPrintView: () => null,\r\n  state: defaultAppContext,\r\n});\r\n","import { defaultFormData } from \"common/constants/defaults\";\r\nimport {\r\n  AppContextAction,\r\n  AppContextActions,\r\n  AppView,\r\n  IAppContextState,\r\n} from \"./types\";\r\n\r\nexport const appContextReducer = (\r\n  state: IAppContextState,\r\n  action: AppContextActions\r\n): IAppContextState => {\r\n  switch (action.type) {\r\n    case AppContextAction.PRINT:\r\n      return { view: AppView.PRINT, values: action.values };\r\n\r\n    case AppContextAction.RESET:\r\n      return { ...state, values: defaultFormData };\r\n\r\n    case AppContextAction.SAVE:\r\n      return { ...state, values: action.values };\r\n\r\n    case AppContextAction.VIEW:\r\n      return { ...state, view: action.view };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IObjectionModel } from \"common/models/form-model\";\r\nimport React, { useCallback, useReducer } from \"react\";\r\nimport { setSaveData } from \"utils/local-storage\";\r\nimport { AppContext } from \"./context\";\r\nimport { appContextReducer } from \"./reducer\";\r\nimport { AppContextAction, AppView, IAppContextState } from \"./types\";\r\n\r\ninterface IAppProviderProps {\r\n  initialState: IAppContextState;\r\n}\r\n\r\nexport const AppProvider: React.FC<IAppProviderProps> = ({\r\n  children,\r\n  initialState,\r\n}) => {\r\n  const [state, dispatch] = useReducer(appContextReducer, initialState);\r\n\r\n  const printData = useCallback((values: IObjectionModel) => {\r\n    setSaveData(values);\r\n    dispatch({ type: AppContextAction.PRINT, values });\r\n  }, []);\r\n\r\n  const resetData = useCallback(() => {\r\n    dispatch({ type: AppContextAction.RESET });\r\n  }, []);\r\n\r\n  const saveData = useCallback((values: IObjectionModel) => {\r\n    setSaveData(values);\r\n    dispatch({ type: AppContextAction.SAVE, values });\r\n  }, []);\r\n\r\n  const toPrintView = useCallback(() => {\r\n    dispatch({ type: AppContextAction.VIEW, view: AppView.PRINT });\r\n  }, []);\r\n\r\n  const toFormView = useCallback(() => {\r\n    dispatch({ type: AppContextAction.VIEW, view: AppView.FORM });\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        printData,\r\n        resetData,\r\n        saveData,\r\n        toPrintView,\r\n        toFormView,\r\n        state,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n","import { AppContext } from \"common/context\";\r\nimport { IObjectionModel } from \"common/models/form-model\";\r\nimport { useContext } from \"react\";\r\nimport { useInterval } from \"./use-interval\";\r\n\r\nexport const useObjectionForm = (values: IObjectionModel) => {\r\n  const { saveData } = useContext(AppContext);\r\n\r\n  useInterval(() => saveData(values), 30000);\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (\r\n  action: () => void,\r\n  timeout: number,\r\n  deps: any[] = []\r\n) => {\r\n  const actionRef = useRef<() => void>(() => null);\r\n  const intervalRef = useRef<NodeJS.Timeout | number>(0);\r\n\r\n  useEffect(() => {\r\n    actionRef.current = action;\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      // Clear previous instances of the interval timeout\r\n      if (intervalRef.current > 0) {\r\n        clearInterval(intervalRef.current as NodeJS.Timeout);\r\n      }\r\n\r\n      // Create a new instance of the interval timeout\r\n      intervalRef.current = setInterval(() => actionRef.current(), timeout);\r\n\r\n      // On unmount, clear any instances of the interval timeout\r\n      return () => {\r\n        clearInterval(intervalRef.current as NodeJS.Timeout);\r\n      };\r\n    },\r\n    [...deps] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  fade: {\r\n    position: \"absolute\",\r\n    height: 8,\r\n    boxShadow: \"0 0 8px rgba(255,255,255, 1)\",\r\n    width: \"100%\",\r\n    zIndex: 10,\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n}));\r\n\r\nexport const ExpandableOverlay: React.FC = () => {\r\n  const { fade, root } = useStyles();\r\n\r\n  return (\r\n    <div className={root}>\r\n      <div className={fade}></div>\r\n    </div>\r\n  );\r\n};\r\n","import Collapse from \"@material-ui/core/Collapse\";\r\nimport React from \"react\";\r\nimport { ExpandableOverlay } from \"./expandable-overlay\";\r\n\r\ninterface IExpandableProps {\r\n  sneekPeek?: number;\r\n  open?: boolean;\r\n}\r\n\r\nexport const Expandable: React.FC<IExpandableProps> = ({\r\n  children,\r\n  sneekPeek,\r\n  open,\r\n}) => (\r\n  <React.Fragment>\r\n    <Collapse collapsedSize={sneekPeek} in={open}>\r\n      {children}\r\n    </Collapse>\r\n    {sneekPeek && !open && <ExpandableOverlay />}\r\n  </React.Fragment>\r\n);\r\n","import { useField } from \"formik\";\r\nimport TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\r\n\r\nconst fieldProps = {\r\n  fullWidth: true,\r\n  InputLabelProps: { shrink: true },\r\n  variant: \"outlined\" as TextFieldProps[\"variant\"],\r\n};\r\n\r\ninterface IFormikFieldProps extends Omit<TextFieldProps, \"onChange\"> {\r\n  name: string;\r\n  readonly?: boolean;\r\n}\r\n\r\nexport const FormikField: React.FC<IFormikFieldProps> = ({\r\n  name,\r\n  readonly,\r\n  ...props\r\n}) => {\r\n  const [{ onBlur, onChange }, { error, touched, value }] = useField(name);\r\n\r\n  const hasError = touched && !!error;\r\n\r\n  return (\r\n    <TextField\r\n      {...fieldProps}\r\n      {...props}\r\n      aria-readonly={readonly || props[\"aria-readonly\"]}\r\n      error={hasError}\r\n      helperText={hasError && error}\r\n      name={name}\r\n      onBlur={(event) => {\r\n        if (readonly) {\r\n          return;\r\n        }\r\n\r\n        onBlur(event);\r\n      }}\r\n      onChange={(event) => {\r\n        if (readonly) {\r\n          return;\r\n        }\r\n\r\n        onChange(event);\r\n      }}\r\n      value={value}\r\n    />\r\n  );\r\n};\r\n","import Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles<Theme, { show: boolean }>(() => ({\r\n  root: ({ show }) => ({\r\n    transform: show ? \"rotate(180deg)\" : \"rotate(0)\",\r\n    transition: \"transform 300ms ease\",\r\n  }),\r\n}));\r\n\r\ninterface IHideButton {\r\n  show: boolean;\r\n  toggleShow: () => void;\r\n}\r\n\r\nexport const HideButton: React.FC<IHideButton> = ({ show, toggleShow }) => (\r\n  <Button onClick={toggleShow} variant=\"text\" size=\"small\">\r\n    {show ? \"Hide\" : \"Show\"}\r\n    <ArrowDropDown classes={useStyles({ show })} />\r\n  </Button>\r\n);\r\n","import { CSSProperties } from \"@material-ui/core/styles/withStyles\";\r\n\r\ninterface ISideStyle {\r\n  all?: number | string;\r\n  b?: number | string;\r\n  bottom?: number | string;\r\n  l?: number | string;\r\n  left?: number | string;\r\n  r?: number | string;\r\n  right?: number | string;\r\n  t?: number | string;\r\n  top?: number | string;\r\n  x?: number | string;\r\n  y?: number | string;\r\n}\r\n\r\ninterface ISideStyleMapping {\r\n  sides: string[];\r\n  value: string;\r\n}\r\n\r\ninterface ISideStyleValue<Value extends string | number = string | number> {\r\n  top?: Value;\r\n  left?: Value;\r\n  right?: Value;\r\n  bottom?: Value;\r\n}\r\n\r\ninterface ISideStyleOptions {\r\n  asProps?: boolean;\r\n  property: string;\r\n  separator?: string;\r\n  units?: SideStyleUnits;\r\n  value: SideStyleValue;\r\n}\r\n\r\ntype SideStyleUnits = \"%\" | \"px\";\r\n\r\nexport type SideStyleValue = ISideStyle | number | string;\r\n\r\nclass SideStyle {\r\n  private static convert = ({\r\n    asProps,\r\n    property,\r\n    separator = \";\",\r\n    units = \"px\",\r\n    value,\r\n  }: ISideStyleOptions): unknown => {\r\n    if (value === undefined) {\r\n      return asProps ? {} : \"\";\r\n    }\r\n\r\n    if (typeof value === \"number\" || typeof value === \"string\") {\r\n      return asProps\r\n        ? { [property]: value }\r\n        : `${property}: ${SideStyle.toValue(value, units)}`;\r\n    }\r\n\r\n    const b = value.b ?? value.bottom ?? value.y ?? value.all;\r\n    const l = value.l ?? value.left ?? value.x ?? value.all;\r\n    const r = value.r ?? value.right ?? value.x ?? value.all;\r\n    const t = value.t ?? value.top ?? value.y ?? value.all;\r\n\r\n    if (asProps) {\r\n      return t !== undefined && [l, r, b].every((side) => side === t)\r\n        ? SideStyle.convert({\r\n            asProps,\r\n            property,\r\n            separator,\r\n            units,\r\n            value: t,\r\n          })\r\n        : SideStyle.toProps(property, [\r\n            [\"bottom\", b],\r\n            [\"left\", l],\r\n            [\"right\", r],\r\n            [\"top\", t],\r\n          ]);\r\n    }\r\n\r\n    return SideStyle.toShorthand(property, separator, {\r\n      bottom: SideStyle.toValue(b, units),\r\n      left: SideStyle.toValue(l, units),\r\n      right: SideStyle.toValue(r, units),\r\n      top: SideStyle.toValue(t, units),\r\n    });\r\n  };\r\n\r\n  private static toLonghand = (property: string, sides: ISideStyleValue) => {\r\n    const { mapped, total } = SideStyle.toMapped(sides);\r\n\r\n    if (total !== 4 || mapped[0].sides.length === 1) {\r\n      return SideStyle.toStyles(property, mapped);\r\n    }\r\n\r\n    const [first, ...others] = mapped;\r\n\r\n    return [\r\n      `${property}: ${first.value}`,\r\n      ...SideStyle.toStyles(property, others),\r\n    ];\r\n  };\r\n\r\n  private static toMapped = (queue: ISideStyleValue) => {\r\n    // Track how many items exist in total\r\n    let total = 0;\r\n\r\n    // Process queue of items\r\n    const mapped = Object.entries(queue)\r\n      // .filter((item): item is [string, string] => item[] !== undefined)\r\n      .reduce((mappings, [side, value]) => {\r\n        if (value === undefined) {\r\n          return mappings;\r\n        }\r\n\r\n        const prevIndex = mappings.findIndex((prev) => prev.value === value);\r\n\r\n        if (prevIndex >= 0) {\r\n          mappings[prevIndex].sides.push(side);\r\n        } else {\r\n          mappings.push({ value, sides: [side] });\r\n        }\r\n\r\n        total++;\r\n\r\n        return mappings;\r\n      }, [] as ISideStyleMapping[]);\r\n\r\n    return { mapped, total };\r\n  };\r\n\r\n  private static toProps = (\r\n    property: string,\r\n    values: Array<[string, number | string | undefined]>\r\n  ) =>\r\n    values.reduce(\r\n      (styles, [side, value]) =>\r\n        value === undefined\r\n          ? styles\r\n          : {\r\n              ...styles,\r\n              [`${property}${side[0].toUpperCase()}${side.substr(1)}`]: value,\r\n            },\r\n      {} as Record<string, string | number>\r\n    );\r\n\r\n  private static toShorthand = (\r\n    property: string,\r\n    separator: string,\r\n    sides: ISideStyleValue\r\n  ) => {\r\n    const { bottom, left, right, top } = sides;\r\n\r\n    if ([bottom, left, right, top].includes(undefined)) {\r\n      return SideStyle.toLonghand(property, sides).join(separator);\r\n    }\r\n\r\n    if (left !== right) {\r\n      return `${property}: ${top} ${right} ${bottom} ${left}`;\r\n    }\r\n\r\n    if (top !== bottom) {\r\n      return `${property}: ${top} ${left} ${bottom}`;\r\n    }\r\n\r\n    if (top !== left) {\r\n      return `${property}: ${bottom} ${left}`;\r\n    }\r\n\r\n    return `${property}: ${bottom}`;\r\n  };\r\n\r\n  private static toStyles = (property: string, mapped: ISideStyleMapping[]) =>\r\n    mapped.reduce(\r\n      (styels, { sides, value }) => [\r\n        ...styels,\r\n        ...sides.map((side) => `${property}-${side}: ${value}`),\r\n      ],\r\n      [] as Array<string>\r\n    );\r\n\r\n  private static toValue = (\r\n    value?: number | string,\r\n    units: SideStyleUnits = \"px\"\r\n  ) => {\r\n    if (typeof value === \"string\" || typeof value === \"undefined\") {\r\n      return value;\r\n    }\r\n\r\n    if (!value) {\r\n      return `${value}`;\r\n    }\r\n\r\n    return `${value}${units}`;\r\n  };\r\n\r\n  public static createSideStyle = <\r\n    PropKeys extends number | string | symbol = keyof CSSProperties\r\n  >(\r\n    property: string,\r\n    separator?: string\r\n  ) => ({\r\n    toString: (value: SideStyleValue, units?: SideStyleUnits) =>\r\n      SideStyle.convert({ property, separator, value, units }) as string,\r\n    toProps: (value: SideStyleValue, units?: SideStyleUnits) =>\r\n      SideStyle.convert({\r\n        asProps: true,\r\n        property,\r\n        separator,\r\n        value,\r\n        units,\r\n      }) as Record<PropKeys, string | number>,\r\n  });\r\n}\r\n\r\nexport const { createSideStyle } = SideStyle;\r\n","import { createSideStyle } from \"./style-side\";\r\n\r\nexport const marginStyles = createSideStyle<\r\n  \"margin\" | \"marginTop\" | \"marginLeft\" | \"marginRight\" | \"marginBottom\"\r\n>(\"margin\");\r\n\r\nexport const paddingStyles = createSideStyle<\r\n  \"padding\" | \"paddingTop\" | \"paddingLeft\" | \"paddingRight\" | \"paddingBottom\"\r\n>(\"padding\");\r\n","import React from \"react\";\r\n\r\ninterface ILinkProps {\r\n  to: string;\r\n}\r\n\r\nexport const Link: React.FC<ILinkProps> = ({ children, to }) => (\r\n  <a href={to} target=\"_blank\" rel=\"noreferrer\">\r\n    {children}\r\n  </a>\r\n);\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { COMMUNITY_AMENITY, PROPOSAL_LINK } from \"common/constants/app\";\r\nimport { Expandable } from \"components/expandable\";\r\nimport { HideButton } from \"components/hide-button\";\r\nimport { Link } from \"components/link\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport const ObjectionFormInformation: React.FC = () => {\r\n  const [showText, setShowText] = useState(false);\r\n\r\n  return (\r\n    <Expandable open={showText} sneekPeek={90}>\r\n      <Grid container justifyContent=\"space-between\">\r\n        <Grid item>\r\n          <Typography variant=\"h6\" align=\"justify\">\r\n            About this form\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <HideButton\r\n            show={showText}\r\n            toggleShow={() => setShowText(!showText)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n      <Typography variant=\"body1\" align=\"justify\">\r\n        This form helper was created to assist the local residents of Glen\r\n        Waverley in their objections to the recent announcement of a planned\r\n        development at <em>251 -261 Springvale Road</em>. Using the fields\r\n        below, make certain that you supply as much information as you can to\r\n        ensure your objection is taken seriously. When you have completed all\r\n        the fields, you will be able to click the{\" \"}\r\n        <strong>Print Object Form</strong> button at the bottom of this page in\r\n        order to view your completed form and save it for printing.\r\n      </Typography>\r\n      <br />\r\n      <Typography variant=\"body1\" align=\"justify\">\r\n        While you may include personal reasons for objecting to this proposal,\r\n        such as{\" \"}\r\n        <strong>\r\n          <em>my view will be blocked</em>\r\n        </strong>{\" \"}\r\n        or{\" \"}\r\n        <strong>\r\n          <em>my property's value is at risk</em>\r\n        </strong>\r\n        , it is important to remember that the Council's responsibility first\r\n        and formost is to look after the{\" \"}\r\n        <Link to={COMMUNITY_AMENITY}>community amenity</Link>, and as such, the\r\n        strongest arguments you can provide will relate to how this development\r\n        may affect public safety, how it may be a nuisance such as impact on\r\n        parking, and how it may negatively impact the character of Glen\r\n        Wavelery.\r\n      </Typography>\r\n      <br />\r\n      <Typography variant=\"body1\" align=\"justify\">\r\n        Unfortunately, there is a high likelihood that this development will\r\n        indeed go ahead however the size and scope of the development may be\r\n        influenced by the number of objections made and the willingness to find\r\n        a compromise, so it is <strong>strongly</strong> recommended that you\r\n        make suggestions as to the sorts of changes to this development you\r\n        would be willing to consider.\r\n      </Typography>\r\n      <br />\r\n      <Typography variant=\"body1\" align=\"justify\">\r\n        As the deadline for objections is{\" \"}\r\n        <strong>Thursday 16 September 2021</strong>, you should aim to complete\r\n        this as soon as you can! Simply print off the form, sign and date the\r\n        physical copy, and then send it back to the Monash City council as soon\r\n        as possible via one of the following methods of delivery\r\n      </Typography>\r\n      <ul>\r\n        <li>Mail - PO Box 1, Glen Waverley VIC 3150</li>\r\n        <li>\r\n          Email -{\" \"}\r\n          <Link to={`mailto:mail@monash.vic.gov.au`}>\r\n            mail@monash.vic.gov.au\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <br />\r\n      <Typography variant=\"body1\" align=\"justify\">\r\n        For information about the proposal itself, click the following link:\r\n      </Typography>\r\n      <br />\r\n      <Typography variant=\"body1\" align=\"justify\">\r\n        <Link to={PROPOSAL_LINK}>\r\n          Proposed development at 251 -261 Springvale Road, Glen Waverley\r\n        </Link>\r\n      </Typography>\r\n      <br />\r\n    </Expandable>\r\n  );\r\n};\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useGrid } from \"common/hooks/use-grid\";\r\nimport { useObjectionForm } from \"common/hooks/use-objection-form\";\r\nimport { IObjectionModel } from \"common/models/form-model\";\r\nimport { Expandable } from \"components/expandable\";\r\nimport { FormikField } from \"components/formik-field\";\r\nimport { HideButton } from \"components/hide-button\";\r\nimport { FormikProps } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { paddingStyles } from \"styles/utils\";\r\nimport { ObjectionFormInformation } from \"./objection-info\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  italics: { fontStyle: \"italic \" },\r\n  root: { ...paddingStyles.toProps(16) },\r\n}));\r\n\r\nexport const ObjectionFormTemplate: React.FC<FormikProps<IObjectionModel>> = ({\r\n  submitForm,\r\n  values,\r\n}) => {\r\n  const { italics, root } = useStyles();\r\n  const { GridFour, GridEight, GridTwelve } = useGrid(root);\r\n\r\n  const [showApplicant, setShowApplicant] = useState(false);\r\n  const [showConcernedParty, setShowConcernedParty] = useState(true);\r\n\r\n  useObjectionForm(values);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <ObjectionFormInformation />\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <Typography variant=\"h6\">Planning Permit being Objected</Typography>\r\n          <hr />\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography\r\n                align=\"justify\"\r\n                classes={{ root: showApplicant ? undefined : italics }}\r\n                variant=\"body1\"\r\n              >\r\n                {showApplicant\r\n                  ? \"Fields are pre-populated for your convenience\"\r\n                  : \"Fields are hidden\"}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <HideButton\r\n                show={showApplicant}\r\n                toggleShow={() => setShowApplicant(!showApplicant)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Expandable open={showApplicant}>\r\n        <Grid container>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Name of Applicant\"\r\n              name=\"proposal.applicationName\"\r\n              placeholder=\"Enter the applicant's Name or Business\"\r\n            />\r\n          </GridFour>\r\n          <GridEight>\r\n            <FormikField\r\n              label=\"Description of Proposal\"\r\n              name=\"proposal.description\"\r\n              placeholder=\"Enter a description for the purpose of the planning proposal\"\r\n            />\r\n          </GridEight>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Application Number\"\r\n              name=\"proposal.applicationNumber\"\r\n              placeholder=\"Enter the TPA number on the planning permit\"\r\n              readonly\r\n            />\r\n          </GridFour>\r\n          <GridEight>\r\n            <FormikField\r\n              label=\"Description of Land\"\r\n              name=\"proposal.applicantLand\"\r\n              placeholder=\"Enter a description of the land to be developed\"\r\n              readonly\r\n            />\r\n          </GridEight>\r\n        </Grid>\r\n      </Expandable>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <Expandable open={showApplicant}>\r\n            <br />\r\n          </Expandable>\r\n          <Typography variant=\"h6\">Concerned Party (You)</Typography>\r\n          <hr />\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography\r\n                align=\"justify\"\r\n                classes={{\r\n                  root: showConcernedParty ? undefined : italics,\r\n                }}\r\n                variant=\"body1\"\r\n              >\r\n                {showConcernedParty\r\n                  ? \"Enter your details as accurately as possible\"\r\n                  : \"Fields are hidden\"}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <HideButton\r\n                show={showConcernedParty}\r\n                toggleShow={() => setShowConcernedParty(!showConcernedParty)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Expandable open={showConcernedParty}>\r\n        <Grid container>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Name(s)\"\r\n              name=\"concernedParty.contactName\"\r\n              placeholder=\"Enter your name(s)\"\r\n            />\r\n          </GridFour>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Email Address\"\r\n              name=\"concernedParty.contactEmail\"\r\n              placeholder=\"Your Email Address\"\r\n            />\r\n          </GridFour>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Phone\"\r\n              name=\"concernedParty.contactPhone\"\r\n              placeholder=\"Enter your contact phone number\"\r\n            />\r\n          </GridFour>\r\n          <GridEight>\r\n            <FormikField\r\n              label=\"Residential Address\"\r\n              name=\"concernedParty.contactAddress\"\r\n              placeholder=\"Enter your residential address\"\r\n            />\r\n          </GridEight>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Post Code\"\r\n              name=\"concernedParty.contactPostCode\"\r\n              placeholder=\"Enter your post code\"\r\n            />\r\n          </GridFour>\r\n        </Grid>\r\n      </Expandable>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <Expandable open={showConcernedParty}>\r\n            <br />\r\n          </Expandable>\r\n          <Typography variant=\"h6\">Objection Details</Typography>\r\n          <hr />\r\n          <Typography variant=\"body1\" align=\"justify\">\r\n            Enter your concerns and reasons for this object, as well as any\r\n            changes you'd like to see\r\n          </Typography>\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <FormikField\r\n            label=\"Grounds of Objection\"\r\n            name=\"objection.concerns\"\r\n            placeholder=\"Detail your concerns with regards to this proposal\"\r\n            multiline\r\n            minRows={8}\r\n            maxRows={12}\r\n          />\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <FormikField\r\n            label=\"Changes which could address your concern(s)\"\r\n            name=\"objection.suggestedChanges\"\r\n            placeholder=\"Enter any changes that could be made to the proposal that would address your concer(s)\"\r\n            multiline\r\n            minRows={4}\r\n            maxRows={8}\r\n          />\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <Button onClick={submitForm} variant=\"contained\">\r\n            Download Objection Form\r\n          </Button>\r\n        </GridTwelve>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import Grid, { GridProps } from \"@material-ui/core/Grid\";\r\nimport { PropsWithChildren, useMemo } from \"react\";\r\n\r\nexport const useGrid = (className: string) =>\r\n  useMemo(\r\n    () => ({\r\n      GridFour: ({ children, ...props }: PropsWithChildren<GridProps>) => (\r\n        <Grid item xs={12} lg={6} xl={4} {...props}>\r\n          <div className={className}>{children}</div>\r\n        </Grid>\r\n      ),\r\n      GridEight: ({ children, ...props }: PropsWithChildren<GridProps>) => (\r\n        <Grid item xs={12} lg={6} xl={8} {...props}>\r\n          <div className={className}>{children}</div>\r\n        </Grid>\r\n      ),\r\n      GridTwelve: ({ children, ...props }: PropsWithChildren<GridProps>) => (\r\n        <Grid item xs={12} {...props}>\r\n          <div className={className}>{children}</div>\r\n        </Grid>\r\n      ),\r\n    }),\r\n    [className]\r\n  );\r\n","import { defaultFormData } from \"common/constants/defaults\";\r\nimport { useSaveData } from \"common/hooks/use-save-data\";\r\nimport { IObjectionModel } from \"common/models/form-model\";\r\nimport { Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { ObjectionFormTemplate } from \"./objection-template\";\r\n\r\nexport const ObjectionForm: React.FC = () => {\r\n  const { printData } = useSaveData();\r\n\r\n  return (\r\n    <Formik<IObjectionModel>\r\n      initialValues={defaultFormData}\r\n      onSubmit={(values) => printData(values)}\r\n    >\r\n      {ObjectionFormTemplate}\r\n    </Formik>\r\n  );\r\n};\r\n","import { AppContext } from \"common/context\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const useSaveData = () => {\r\n  const { printData, saveData } = useContext(AppContext);\r\n\r\n  return {\r\n    printData,\r\n    saveData,\r\n  };\r\n};\r\n","import Grid, { GridJustification } from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { paddingStyles, SideStyle } from \"styles/utils\";\r\n\r\ninterface IPageSectionStyles {\r\n  background?: string;\r\n  color?: string;\r\n  fontSize?: string | number;\r\n  height?: number;\r\n  justify?: GridJustification;\r\n  minHeight?: number;\r\n  padding?: SideStyle;\r\n  stretch?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles<{}, IPageSectionStyles>(() => ({\r\n  padding: ({ color, fontSize, padding }) =>\r\n    padding ? { color, fontSize, ...paddingStyles.toProps(padding) } : {},\r\n  root: ({\r\n    background,\r\n    color,\r\n    fontSize,\r\n    height,\r\n    minHeight,\r\n    padding,\r\n    stretch,\r\n  }) => ({\r\n    ...(background ? { background } : {}),\r\n    ...(height ? { height } : {}),\r\n    ...(minHeight ? { minHeight } : {}),\r\n    ...(!padding\r\n      ? {\r\n          ...(color ? { color } : {}),\r\n          ...(fontSize ? { fontSize } : {}),\r\n        }\r\n      : {}),\r\n    ...(stretch ? { flex: \"1 0 auto\" } : {}),\r\n  }),\r\n}));\r\n\r\nexport const PageSection: React.FC<IPageSectionStyles> = ({\r\n  children,\r\n  justify = \"center\",\r\n  ...props\r\n}) => {\r\n  const classes = useStyles(props);\r\n\r\n  const Wrapper = useMemo(\r\n    (): React.FC =>\r\n      props.padding\r\n        ? ({ children }) => (\r\n            <Grid\r\n              classes={{ root: classes.padding }}\r\n              container\r\n              item\r\n              justifyContent={justify}\r\n            >\r\n              {children}\r\n            </Grid>\r\n          )\r\n        : React.Fragment,\r\n    [classes.padding, justify, props.padding]\r\n  );\r\n\r\n  return (\r\n    <Grid\r\n      classes={{ root: classes.root }}\r\n      container\r\n      item\r\n      justifyContent={props.padding ? undefined : justify}\r\n    >\r\n      <Wrapper>{children}</Wrapper>\r\n    </Grid>\r\n  );\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ObjectionForm } from \"components/objection-form\";\r\nimport { PageSection } from \"components/page-section\";\r\nimport React from \"react\";\r\nimport { paddingStyles } from \"styles/utils\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    minHeight: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n  content: {\r\n    ...paddingStyles.toProps(16),\r\n  },\r\n}));\r\n\r\nexport const Content: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageSection justify=\"center\" stretch>\r\n      <Grid classes={{ root: classes.root }} item md={8} xs={12}>\r\n        <div className={classes.content}>\r\n          <ObjectionForm />\r\n        </div>\r\n      </Grid>\r\n    </PageSection>\r\n  );\r\n};\r\n","import { PageSection } from \"components/page-section\";\r\nimport React from \"react\";\r\n\r\nexport const Footer: React.FC = ({ children }) => (\r\n  <PageSection\r\n    background=\"#9CE\"\r\n    color=\"#048\"\r\n    fontSize={10}\r\n    justify=\"flex-end\"\r\n    padding={{ x: 6, y: 4 }}\r\n  >\r\n    {children}\r\n  </PageSection>\r\n);\r\n","import { PageSection } from \"components/page-section\";\r\nimport React from \"react\";\r\n\r\nexport const Header: React.FC = ({ children }) => (\r\n  <PageSection background=\"#28C\" color=\"#F2F2F2\" padding={{ all: 16 }}>\r\n    {children}\r\n  </PageSection>\r\n);\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    minHeight: \"100%\",\r\n  },\r\n}));\r\n\r\nexport const PageLayout: React.FC = ({ children }) => {\r\n  const { root } = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      alignItems=\"center\"\r\n      classes={{ root }}\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"space-between\"\r\n    >\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport { Content } from \"components/content\";\r\nimport { Footer } from \"components/footer\";\r\nimport { Header } from \"components/header\";\r\nimport { PageLayout } from \"components/page-layout\";\r\nimport React from \"react\";\r\n\r\nexport const FormViewPage: React.FC = () => (\r\n  <div className=\"form-root\">\r\n    <PageLayout>\r\n      <Header>\r\n        <Typography variant=\"h6\">Objection Helper</Typography>\r\n      </Header>\r\n      <Content />\r\n      <Footer>&copy; 2021 - Anthony Costabile</Footer>\r\n    </PageLayout>\r\n  </div>\r\n);\r\n","export const classNames = (\r\n  ...args: Array<string | 0 | null | false | undefined>\r\n) =>\r\n  Array.from(args)\r\n    .filter((className) => !!className)\r\n    .join(\" \");\r\n","import Grid, { GridProps } from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { TEXT_DOTS } from \"common/constants/app\";\r\nimport React, { ReactNode, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { classNames } from \"utils/class-names\";\r\n\r\ninterface IPrintLine extends Omit<GridProps, \"classes\"> {\r\n  classes?: {\r\n    label?: string;\r\n    subLabel?: string;\r\n    value?: string;\r\n  };\r\n  label?: string;\r\n  minLines?: number;\r\n  subLabel?: string;\r\n  value?: ReactNode;\r\n}\r\n\r\nconst heightOffset = 28;\r\n\r\nconst useStyles = makeStyles<Theme, { subLabel?: boolean }>(() => ({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  dots: {\r\n    color: \"#888\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n    zIndex: 0,\r\n  },\r\n  lineHeight: {\r\n    lineHeight: `${heightOffset}px`,\r\n  },\r\n  dotsLabel: {\r\n    opacity: 0,\r\n  },\r\n  space: {\r\n    height: ({ subLabel }) => (subLabel ? 20 : 4),\r\n  },\r\n  subLabel: {\r\n    color: \"#333\",\r\n    fontSize: \"0.75rem\",\r\n  },\r\n  text: {\r\n    color: \"#048\",\r\n    top: -4,\r\n    width: \"100%\",\r\n    position: \"absolute\",\r\n  },\r\n  textLabel: {\r\n    color: \"#333\",\r\n    fontSize: \"1rem\",\r\n  },\r\n}));\r\n\r\nexport const PrintLine: React.FC<IPrintLine> = ({\r\n  children,\r\n  classes: classesProp = {},\r\n  label,\r\n  minLines,\r\n  subLabel,\r\n  value,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles({ subLabel: !!subLabel });\r\n  const textField = useRef<HTMLDivElement | null>(null);\r\n  const [lines, setLines] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (!textField.current) {\r\n      return;\r\n    }\r\n\r\n    const { height } = textField.current.getBoundingClientRect();\r\n\r\n    const linesToAdd = Math.floor(height / heightOffset) - 1;\r\n    setLines(Math.max(linesToAdd, minLines ?? 0));\r\n  }, [minLines]);\r\n\r\n  return (\r\n    <Grid xs={12} {...props} classes={{ root: classes.container }} item>\r\n      <div className={classes.dots}>\r\n        <Typography\r\n          classes={{ root: classes.lineHeight }}\r\n          noWrap\r\n          variant=\"body1\"\r\n        >\r\n          <span className={classes.dotsLabel}>{label} </span>\r\n          {TEXT_DOTS}\r\n        </Typography>\r\n        {lines > 0 &&\r\n          Array.from(Array(lines)).map((_) => (\r\n            <Typography\r\n              classes={{ root: classes.lineHeight }}\r\n              noWrap\r\n              variant=\"body2\"\r\n            >\r\n              {TEXT_DOTS}\r\n            </Typography>\r\n          ))}\r\n        <div className={classes.space} />\r\n      </div>\r\n      <div className={classes.text} ref={textField}>\r\n        <Typography\r\n          classes={{ root: classNames(classes.lineHeight, classesProp.value) }}\r\n          variant=\"body2\"\r\n          align=\"justify\"\r\n        >\r\n          <span className={classNames(classes.textLabel, classesProp.label)}>\r\n            {label}\r\n          </span>{\" \"}\r\n          {value}\r\n        </Typography>{\" \"}\r\n        <Typography\r\n          classes={{ root: classNames(classes.subLabel, classesProp.subLabel) }}\r\n          variant=\"subtitle2\"\r\n          align=\"justify\"\r\n        >\r\n          {subLabel}\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n// minLines\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { IObjectionModel } from \"common/models/form-model\";\r\nimport React from \"react\";\r\nimport { PrintLine } from \"./print-line\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  label: {\r\n    fontWeight: 600,\r\n  },\r\n  subLabel: {\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nexport const PrintContact: React.FC<{ values: IObjectionModel }> = ({\r\n  values,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container xs={11}>\r\n        <PrintLine\r\n          xs={12}\r\n          label=\"I/We*:\"\r\n          value={values.concernedParty.contactName}\r\n        />\r\n        <PrintLine\r\n          xs={12}\r\n          label=\"Of (Address)*:\"\r\n          value={values.concernedParty.contactAddress}\r\n        />\r\n        <PrintLine\r\n          xs={5}\r\n          label=\"Post Code*:\"\r\n          value={values.concernedParty.contactPostCode}\r\n        />\r\n        <PrintLine\r\n          xs={7}\r\n          classes={{ subLabel: classes.subLabel }}\r\n          label=\"Telephone:\"\r\n          subLabel=\"(Please refer to privacy statement below)\"\r\n          value={values.concernedParty.contactPhone}\r\n        />\r\n      </Grid>\r\n      <Grid item container xs={11}>\r\n        <PrintLine\r\n          xs={12}\r\n          classes={classes}\r\n          label=\"Email Address\"\r\n          subLabel=\"(Please refer to privacy statement below)\"\r\n          value={<strong>{values.concernedParty.contactEmail}</strong>}\r\n        />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.b931f009.gif\";","import Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { IObjectionModel } from \"common/models/form-model\";\r\nimport Logo from \"images/logo.gif\";\r\nimport React from \"react\";\r\nimport { PrintLine } from \"./print-line\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  box: {\r\n    border: \"1px solid #000\",\r\n    padding: 8,\r\n    width: 180,\r\n  },\r\n  boxTextBody: { fontSize: \"7.5pt\", marginBottom: 8 },\r\n  boxTextTitle: { fontSize: \"7.5pt\", fontWeight: 600, marginBottom: 8 },\r\n  formTitle: { fontWeight: 600 },\r\n  label: {\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n  },\r\n  value: {\r\n    fontSize: 24,\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\ninterface IPrintHeaderProps {\r\n  values: IObjectionModel;\r\n}\r\n\r\nexport const PrintHeader: React.FC<IPrintHeaderProps> = ({ values }) => {\r\n  const { box, boxTextBody, boxTextTitle, formTitle, ...classes } = useStyles();\r\n\r\n  return (\r\n    <Grid item container xs={11}>\r\n      <Grid item xs={6}>\r\n        <Typography classes={{ root: formTitle }} variant=\"h4\">\r\n          Objection to Grant a Planning Permit\r\n        </Typography>\r\n        <br />\r\n        <br />\r\n        <PrintLine\r\n          xs={12}\r\n          classes={classes}\r\n          label=\"Application Number:\"\r\n          subLabel=\"*Indicates required fields to be completed\"\r\n          value={values.proposal.applicationNumber}\r\n        />\r\n      </Grid>\r\n      <Grid container item xs={6} direction=\"column\" alignItems=\"flex-end\">\r\n        <Box>\r\n          <img alt=\"City of Monash\" src={Logo} width={200} />\r\n          <br />\r\n          <br />\r\n        </Box>\r\n        <Box className={box}>\r\n          <Typography classes={{ root: boxTextTitle }}>\r\n            Office Use Only\r\n          </Typography>\r\n          <Typography classes={{ root: boxTextBody }}>\r\n            Date Received: ...................................\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { IObjectionModel } from \"common/models/form-model\";\r\nimport React from \"react\";\r\nimport { PrintLine } from \"./print-line\";\r\n\r\nexport const PrintObjection: React.FC<{ values: IObjectionModel }> = ({\r\n  values,\r\n}) => (\r\n  <React.Fragment>\r\n    <Grid item container xs={11}>\r\n      <PrintLine\r\n        xs={12}\r\n        label=\"Grounds of Objection*:\"\r\n        minLines={6}\r\n        value={values.objection.concerns}\r\n      />\r\n    </Grid>\r\n    <br />\r\n    <Grid item container xs={11}>\r\n      <Grid item>\r\n        <Typography paragraph variant=\"body1\">\r\n          Are there any changes that could be made to the proposal that would\r\n          address your concern(s)? If so, please provide details below\r\n        </Typography>\r\n      </Grid>\r\n      <PrintLine\r\n        xs={12}\r\n        minLines={3}\r\n        value={values.objection.suggestedChanges}\r\n      />\r\n    </Grid>\r\n    <br />\r\n    <br />\r\n    <Grid item container xs={11}>\r\n      <PrintLine xs={8} label=\"Signed:\" />\r\n      <PrintLine xs={4} label=\"Date:\" />\r\n    </Grid>\r\n  </React.Fragment>\r\n);\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { IObjectionModel } from \"common/models/form-model\";\r\nimport React from \"react\";\r\nimport { PrintLine } from \"./print-line\";\r\n\r\nexport const PrintProposal: React.FC<{ values: IObjectionModel }> = ({\r\n  values,\r\n}) => (\r\n  <React.Fragment>\r\n    <Grid item container xs={11}>\r\n      <Typography paragraph variant=\"h6\">\r\n        Details of objection to Planning Permit\r\n      </Typography>\r\n    </Grid>\r\n    <Grid item container xs={11}>\r\n      <PrintLine\r\n        xs={12}\r\n        label=\"To (name of applicant):\"\r\n        value={values.proposal.applicationName}\r\n      />\r\n      <PrintLine\r\n        xs={12}\r\n        label=\"For (description of proposal):\"\r\n        value={values.proposal.description}\r\n      />\r\n      <PrintLine\r\n        xs={12}\r\n        label=\"At (desctription of land):\"\r\n        value={values.proposal.applicantLand}\r\n      />\r\n    </Grid>\r\n  </React.Fragment>\r\n);\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { IObjectionModel } from \"common/models/form-model\";\r\nimport React from \"react\";\r\nimport { PrintContact } from \"./print-contact\";\r\nimport { PrintHeader } from \"./print-header\";\r\nimport { PrintObjection } from \"./print-objection\";\r\nimport { PrintProposal } from \"./print-proposal\";\r\n\r\nexport const PrintView: React.FC<{ values: IObjectionModel }> = ({\r\n  values,\r\n}) => (\r\n  <Grid container direction=\"column\" alignItems=\"center\">\r\n    <Grid item xs={12}>\r\n      <br />\r\n      <br />\r\n    </Grid>\r\n    <PrintHeader values={values} />\r\n    <PrintContact values={values} />\r\n    <br />\r\n    <PrintProposal values={values} />\r\n    <PrintObjection values={values} />\r\n  </Grid>\r\n);\r\n","import { PrintView } from \"components/print/print\";\r\nimport React from \"react\";\r\nimport { usePrintView } from \"common/hooks/use-print-view\";\r\n\r\nexport const PrintViewPage: React.FC = () => {\r\n  const { values } = usePrintView();\r\n\r\n  return (\r\n    <div className=\"print-root\">\r\n      <PrintView values={values} />\r\n    </div>\r\n  );\r\n};\r\n","import { AppContext } from \"common/context\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const usePrintView = () => {\r\n  const { state, toFormView } = useContext(AppContext);\r\n\r\n  return {\r\n    toFormView,\r\n    values: state.values,\r\n  };\r\n};\r\n","import { AppView } from \"common/context/types\";\r\nimport { useAppView } from \"common/hooks/use-app-view\";\r\nimport React from \"react\";\r\nimport { FormViewPage } from \"./app-form\";\r\nimport { PrintViewPage } from \"./app-print\";\r\n\r\nexport const App: React.FC = () => {\r\n  const { view } = useAppView();\r\n\r\n  switch (view) {\r\n    case AppView.FORM:\r\n      return <FormViewPage />;\r\n\r\n    case AppView.PRINT:\r\n      return <PrintViewPage />;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n","import { AppContext } from \"common/context\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const useAppView = () => {\r\n  const { toFormView, toPrintView, state } = useContext(AppContext);\r\n\r\n  return {\r\n    toFormView,\r\n    toPrintView,\r\n    view: state.view,\r\n  };\r\n};\r\n","import { AppProvider } from \"common/context\";\nimport { AppView } from \"common/context/types\";\nimport { App } from \"components/app\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport \"styles/global.css\";\nimport { getSaveData } from \"utils/local-storage\";\n\nrender(\n  <React.StrictMode>\n    <AppProvider\n      initialState={{\n        values: getSaveData(),\n        view: AppView.FORM,\n      }}\n    >\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { IObjectionModel } from \"common/models/form-model\";\r\n\r\nexport const defaultFormData: IObjectionModel = {\r\n  proposal: {\r\n    applicantLand: \"251 -261 Springvale Road, Glen Waverley\",\r\n    applicationName: \"Hongxing Springvale Road Pty Ltd\",\r\n    applicationNumber: \"TPA/52268\",\r\n    description:\r\n      \"21 storey mixed-use building (147 dwellings, 6 retail tenancies)\",\r\n  },\r\n  concernedParty: {\r\n    contactName: \"\",\r\n    contactEmail: \"\",\r\n    contactPhone: \"\",\r\n    contactAddress: \"\",\r\n    contactPostCode: 3150,\r\n  },\r\n  objection: {\r\n    concerns: \"\",\r\n    suggestedChanges: \"\",\r\n  },\r\n};\r\n","export const COMMUNITY_AMENITY =\r\n  \"https://www.monash.vic.gov.au/About-Us/Laws-Rules/Local-Law-No-3-Community-Amenity\";\r\n\r\nexport const PROPOSAL_LINK =\r\n  \"https://www.monash.vic.gov.au/About-Us/Council/Have-Your-Say/Proposed-development-at-251-261-Springvale-Road-Glen-Waverley\";\r\n\r\nexport const LOCAL_STORAGE_KEY = \"objection-data\";\r\n\r\nexport const TEXT_DOTS = Array.from(Array(127))\r\n  .map((_) => \".\")\r\n  .join(\".\");\r\n","import { LOCAL_STORAGE_KEY } from \"common/constants/app\";\r\nimport { defaultFormData } from \"common/constants/defaults\";\r\nimport { IObjectionModel } from \"common/models/form-model\";\r\n\r\nexport const getSaveData = (): IObjectionModel => {\r\n  if (!global.window) {\r\n    return defaultFormData;\r\n  }\r\n\r\n  const currentData = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n  const values = JSON.parse(currentData || \"{}\");\r\n\r\n  return {\r\n    concernedParty: {\r\n      ...defaultFormData.concernedParty,\r\n      ...values.concernedParty,\r\n    },\r\n    objection: {\r\n      ...defaultFormData.objection,\r\n      ...values.objection,\r\n    },\r\n    proposal: {\r\n      ...defaultFormData.proposal,\r\n      ...values.proposal,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setSaveData = (values: IObjectionModel) => {\r\n  if (!global.window) {\r\n    return defaultFormData;\r\n  }\r\n\r\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\r\n};\r\n"],"sourceRoot":""}