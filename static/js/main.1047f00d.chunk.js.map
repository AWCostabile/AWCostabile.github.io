{"version":3,"sources":["components/print/print.tsx","components/print/print-contact.tsx","components/print/print-objection.tsx","components/print/print-privacy.tsx","components/print/print-proposal.tsx","images/logo.gif","components/print/print-header.tsx","common/context/types.ts","components/expandable/expandable-overlay.tsx","components/expandable/expandable.tsx","components/formik-field/formik-field.tsx","components/hide-button/hide-button.tsx","styles/utils/style-side.ts","styles/utils/helpers.ts","components/objection-form/objection-info.tsx","components/objection-form/objection-template.tsx","common/hooks/use-grid.tsx","components/objection-form/objection-form.tsx","common/hooks/use-save-data.ts","components/page-section/page-section.tsx","components/content/content.tsx","components/footer/footer.tsx","components/header/header.tsx","components/page-layout/page-layout.tsx","components/app/app-form.tsx","components/app/app-print.tsx","components/app/app.tsx","common/hooks/use-app-view.ts","index.tsx","utils/class-names.ts","components/print/print-line.tsx","common/constants/app.ts","common/hooks/use-language.ts","common/context/context.ts","common/context/reducer.ts","common/context/provider.tsx","common/constants/defaults.ts","components/link/link.tsx","utils/language.ts","common/languages/chinese.tsx","common/languages/index.ts","common/languages/english.tsx","utils/local-storage.ts","common/hooks/use-print-view.ts"],"names":["PrintView","values","toFormView","usePrintView","onReady","useCallback","global","window","print","container","direction","alignItems","className","useStyles","makeStyles","label","fontWeight","subLabel","PrintContact","classes","Fragment","item","xs","value","concernedParty","contactName","contactAddress","contactPostCode","contactPhone","contactEmail","pageBreak","paddingTop","PrintObjection","useLanguage","currentLanguage","strings","isDone","useRef","useState","concernsBreak","suggestedChangesBreak","breaks","setBreaks","concernsLines","setConsersLines","suggestedChangesLines","setSuggestedChangesLines","useEffect","current","totalLines","console","log","getBreaks","setTimeout","variant","NON_BREAKING_SPACE","root","minLines","onLines","objection","concerns","paragraph","suggestedChanges","document","signature","date","bold","PrintPrivacy","PrintProposal","proposal","applicationName","description","applicantLand","box","border","padding","width","boxTextBody","fontSize","marginBottom","boxTextTitle","formTitle","languageLabel","color","paddingBottom","PrintHeader","Grid","Typography","nameEnglish","applicationNumber","Box","alt","src","Logo","AppContextAction","AppView","fade","position","height","boxShadow","zIndex","ExpandableOverlay","Expandable","children","sneekPeek","open","Collapse","collapsedSize","in","fieldProps","fullWidth","InputLabelProps","shrink","FormikField","name","readonly","props","useField","onBlur","onChange","error","touched","hasError","labels","placeholder","TextField","helperText","event","transform","show","transition","HideButton","toggleShow","Button","onClick","size","buttons","hide","SideStyle","convert","asProps","property","separator","units","undefined","toValue","b","bottom","y","all","l","left","x","r","right","t","top","every","side","toProps","toShorthand","toLonghand","sides","toMapped","mapped","total","length","toStyles","first","others","queue","Object","entries","reduce","mappings","prevIndex","findIndex","prev","push","styles","toUpperCase","substr","includes","join","styels","map","createSideStyle","toString","paddingStyles","ObjectionFormInformation","showText","setShowText","justifyContent","align","titles","about","info","index","delivery","more","centered","textAlign","italics","fontStyle","ObjectionFormTemplate","submitForm","useMemo","GridFour","lg","xl","GridEight","GridTwelve","showApplicant","setShowApplicant","showConcernedParty","setShowConcernedParty","sections","miscellaneous","hiddenFields","multiline","minRows","maxRows","printObjectionForm","ObjectionForm","useContext","AppContext","state","printData","saveData","initialValues","useSaveData","onSubmit","background","minHeight","stretch","flex","PageSection","justify","Wrapper","React","content","Content","md","Footer","button","icon","display","fill","marginRight","menu","toLabel","friendly","Header","anchorEl","setLanguage","setOpen","header","ref","Popper","disablePortal","role","style","TransitionProps","placement","Grow","marginTop","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","language","meta","MenuItem","PageLayout","FormViewPage","PrintViewPage","App","view","toPrintView","useAppView","PRINT","render","StrictMode","appData","getSaveData","getElementById","classNames","args","Array","from","filter","dots","overflow","lineHeight","dotsLabel","opacity","space","text","textLabel","whiteSpace","PrintLine","classesProp","textField","lines","setLines","getBoundingClientRect","linesToAdd","Math","floor","max","noWrap","TEXT_DOTS","_","COMMUNITY_AMENITY","PROPOSAL_LINK","LOCAL_STORAGE_KEY","defaultAppContext","save","FORM","defaultFormData","createContext","resetData","english","appContextReducer","action","type","DONE","LANGUAGE","RESET","SAVE","VIEW","AppProvider","useReducer","form","dispatch","set","nextLanguage","is","setSaveData","Provider","Link","to","href","target","rel","Languages","languages","keys","this","chinese","translationBy","currentData","localStorage","getItem","JSON","parse","clear","setItem","stringify"],"mappings":"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","file":"static/js/main.1047f00d.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { usePrintView } from \"common/hooks/use-print-view\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\nimport React from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport { PrintContact } from \"./print-contact\";\r\nimport { PrintHeader } from \"./print-header\";\r\nimport { PrintObjection } from \"./print-objection\";\r\nimport { PrintPrivacy } from \"./print-privacy\";\r\nimport { PrintProposal } from \"./print-proposal\";\r\n\r\nexport const PrintView: React.FC<{ values: IObjectionModel }> = ({\r\n  values,\r\n}) => {\r\n  const { toFormView } = usePrintView();\r\n  const onReady = useCallback(() => {\r\n    if (global.window) {\r\n      global.window.print();\r\n\r\n      toFormView();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <br />\r\n        <PrintHeader values={values} />\r\n        <PrintContact values={values} />\r\n        <br />\r\n        <PrintProposal values={values} />\r\n      </Grid>\r\n      <PrintObjection onReady={onReady} values={values} />\r\n      <div className=\"pagebreak\" />\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <PrintPrivacy />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\nimport React from \"react\";\r\nimport { PrintLine } from \"./print-line\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  label: {\r\n    fontWeight: 600,\r\n  },\r\n  subLabel: {\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nexport const PrintContact: React.FC<{ values: IObjectionModel }> = ({\r\n  values,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item container xs={11}>\r\n        <PrintLine\r\n          xs={12}\r\n          label=\"I/We*:\"\r\n          value={values.concernedParty.contactName}\r\n        />\r\n        <PrintLine\r\n          xs={12}\r\n          label=\"Of (Address)*:\"\r\n          value={values.concernedParty.contactAddress}\r\n        />\r\n        <PrintLine\r\n          xs={5}\r\n          label=\"Post Code*:\"\r\n          value={values.concernedParty.contactPostCode}\r\n        />\r\n        <PrintLine\r\n          xs={7}\r\n          classes={{ subLabel: classes.subLabel }}\r\n          label=\"Telephone:\"\r\n          subLabel=\"(Please refer to privacy statement below)\"\r\n          value={values.concernedParty.contactPhone}\r\n        />\r\n      </Grid>\r\n      <Grid item container xs={11}>\r\n        <PrintLine\r\n          xs={12}\r\n          classes={classes}\r\n          label=\"Email Address\"\r\n          subLabel=\"(Please refer to privacy statement below)\"\r\n          value={<strong>{values.concernedParty.contactEmail}</strong>}\r\n        />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { NON_BREAKING_SPACE } from \"common/constants/app\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\nimport React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { PrintLine } from \"./print-line\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageBreak: {\r\n    paddingTop: 8,\r\n  },\r\n}));\r\n\r\nconst getBreaks = (concernsLines: number, suggestedChangesLines: number) => {\r\n  const totalLines = concernsLines + suggestedChangesLines;\r\n\r\n  console.log({\r\n    concernsLines,\r\n    suggestedChangesLines,\r\n    totalLines,\r\n  });\r\n\r\n  if (totalLines <= 10) {\r\n    return [false, false];\r\n  }\r\n\r\n  if (totalLines >= 28) {\r\n    return [concernsLines > 16, true];\r\n  }\r\n\r\n  if (concernsLines > 16) {\r\n    return [true, false];\r\n  }\r\n\r\n  return [false, concernsLines > 6 || suggestedChangesLines > 4];\r\n};\r\n\r\ninterface IPrintObjectionProps {\r\n  onReady: () => void;\r\n  values: IObjectionModel;\r\n}\r\n\r\nexport const PrintObjection: React.FC<IPrintObjectionProps> = ({\r\n  onReady,\r\n  values,\r\n}) => {\r\n  const { currentLanguage, strings } = useLanguage();\r\n  const isDone = useRef(false);\r\n  const [breaks, setBreaks] = useState({\r\n    concernsBreak: false,\r\n    suggestedChangesBreak: false,\r\n  });\r\n  const [concernsLines, setConsersLines] = useState(0);\r\n  const [suggestedChangesLines, setSuggestedChangesLines] = useState(0);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (!concernsLines || !suggestedChangesLines || isDone.current) {\r\n      return;\r\n    }\r\n\r\n    isDone.current = true;\r\n\r\n    const [concernsBreak, suggestedChangesBreak] = getBreaks(\r\n      concernsLines,\r\n      suggestedChangesLines\r\n    );\r\n\r\n    setBreaks({ concernsBreak, suggestedChangesBreak });\r\n  }, [concernsLines, onReady, suggestedChangesLines]);\r\n\r\n  useEffect(() => {\r\n    if (isDone.current) {\r\n      onReady();\r\n      return;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (!isDone.current) {\r\n        onReady();\r\n      }\r\n    }, 100);\r\n  }, [breaks, onReady]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {breaks.concernsBreak && <div className=\"pagebreak\" />}\r\n      {breaks.concernsBreak && (\r\n        <Typography variant=\"body1\">{NON_BREAKING_SPACE}</Typography>\r\n      )}\r\n      <Grid\r\n        classes={{ root: breaks.concernsBreak ? classes.pageBreak : \"\" }}\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item container xs={11}>\r\n          <PrintLine\r\n            xs={12}\r\n            label=\"Grounds of Objection*:\"\r\n            minLines={6}\r\n            onLines={setConsersLines}\r\n            value={values.objection.concerns}\r\n          />\r\n        </Grid>\r\n        <br />\r\n      </Grid>\r\n      {breaks.suggestedChangesBreak && <div className=\"pagebreak\" />}\r\n      {breaks.suggestedChangesBreak && (\r\n        <Typography variant=\"body1\">{NON_BREAKING_SPACE}</Typography>\r\n      )}\r\n      <Grid\r\n        classes={{\r\n          root: breaks.suggestedChangesBreak ? classes.pageBreak : \"\",\r\n        }}\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item container xs={11}>\r\n          <Grid item>\r\n            <Typography paragraph variant=\"body1\">\r\n              Are there any changes that could be made to the proposal that\r\n              would address your concern(s)? If so, please provide details below\r\n            </Typography>\r\n          </Grid>\r\n          <PrintLine\r\n            xs={12}\r\n            minLines={3}\r\n            onLines={setSuggestedChangesLines}\r\n            value={values.objection.suggestedChanges}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n      <br />\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        {currentLanguage === \"english\" ? (\r\n          <Grid item container xs={11}>\r\n            <PrintLine xs={8} label=\"Signed:\" />\r\n            <PrintLine xs={4} label=\"Date:\" />\r\n          </Grid>\r\n        ) : (\r\n          <Grid item container xs={11}>\r\n            <PrintLine\r\n              xs={8}\r\n              label=\"Signed:\"\r\n              subLabel={<em>{strings.document.signature}</em>}\r\n            />\r\n            <PrintLine\r\n              xs={4}\r\n              label=\"Date:\"\r\n              subLabel={<em>{strings.document.date}</em>}\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  bold: {\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nexport const PrintPrivacy: React.FC = () => {\r\n  const { bold } = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <br />\r\n      <Grid item container xs={11}>\r\n        <Typography classes={{ root: bold }} variant=\"body2\">\r\n          Please read the following explanatory advice:\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item container xs={11}>\r\n        <ol>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              To make a submission you should clearly complete the details on\r\n              this form and lodge it with Council either online, by email, mail,\r\n              fax, or in person.\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              State the reason for your objection and how you would be affected\r\n              if a permit was granted.\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              If your submission is about the impact the application could have\r\n              on a property which is not your principal place of residence,\r\n              please provide the address of that property and details of your\r\n              interest in it when stating how you would be affected.\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              To ensure your submission is considered by Council it should be\r\n              received by the date specified in the Notice of Application.\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              Please be aware that copies of submissions received are placed on\r\n              a public file and are not confidential. They may be made available\r\n              to any person as part of the planning process.\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              If, despite your objection, Council decides to grant the permit,\r\n              you can appeal against the decision. Details of the appeal\r\n              procedures are set out on the back of the Notice of Decision that\r\n              you will receive. An appeal must be made on a prescribed form\r\n              (obtainable from the Victorian Civil and Administrative Tribunal)\r\n              and must be accompanied by the prescribed fee. A copy must be\r\n              given to Council, the Applicant and all Objectors. The closing\r\n              date for appeals is 21 days after Council gives notice of its\r\n              decision.\r\n            </Typography>\r\n          </li>\r\n          <li>\r\n            <Typography paragraph variant=\"body2\">\r\n              The Applicant can also appeal Council's decision. The provisions\r\n              are set out in the Refusal of Planning Application Notice that\r\n              will be issued at that time.\r\n            </Typography>\r\n          </li>\r\n        </ol>\r\n      </Grid>\r\n      <Grid item container xs={11}>\r\n        <Typography classes={{ root: bold }} variant=\"body2\">\r\n          Privacy collection notice:\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item container xs={11}>\r\n        <Typography paragraph variant=\"body2\">\r\n          Your objection and the personal information on this form is collected\r\n          by Council for the purposes of the planning process as set out in the\r\n          Planning and Environment Act 1987 (PE Act).\r\n          <br />\r\n          <br />\r\n          If you do not provide your name and address, Council will not be able\r\n          to consider your objection.\r\n          <br />\r\n          <br />\r\n          Your objection will be available at the Council office for any person\r\n          to inspect and copies may be made available on request to any person\r\n          for the relevant period set out in the PE Act.\r\n          <br />\r\n          <br />\r\n          You must not submit any personal information or copyright material of\r\n          third parties without their informed consent. By submitting the\r\n          material, you agree that the use of the material as detailed above\r\n          does not breach any third party’s right to privacy and copyright.\r\n          <br />\r\n          <br />\r\n          You can request access to your personal information by contacting\r\n          Council.\r\n        </Typography>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\nimport React from \"react\";\r\nimport { PrintLine } from \"./print-line\";\r\n\r\nexport const PrintProposal: React.FC<{ values: IObjectionModel }> = ({\r\n  values,\r\n}) => (\r\n  <React.Fragment>\r\n    <Grid item container xs={11}>\r\n      <Typography paragraph variant=\"h6\">\r\n        Details of objection to Planning Permit\r\n      </Typography>\r\n    </Grid>\r\n    <Grid item container xs={11}>\r\n      <PrintLine\r\n        xs={12}\r\n        label=\"To (name of applicant):\"\r\n        value={values.proposal.applicationName}\r\n      />\r\n      <PrintLine\r\n        xs={12}\r\n        label=\"For (description of proposal):\"\r\n        value={values.proposal.description}\r\n      />\r\n      <PrintLine\r\n        xs={12}\r\n        label=\"At (desctription of land):\"\r\n        value={values.proposal.applicantLand}\r\n      />\r\n    </Grid>\r\n  </React.Fragment>\r\n);\r\n","export default __webpack_public_path__ + \"static/media/logo.b931f009.gif\";","import Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { NON_BREAKING_SPACE } from \"common/constants/app\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\nimport Logo from \"images/logo.gif\";\r\nimport React from \"react\";\r\nimport { PrintLine } from \"./print-line\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  box: {\r\n    border: \"1px solid #000\",\r\n    padding: 8,\r\n    width: 180,\r\n  },\r\n  boxTextBody: { fontSize: \"7.5pt\", marginBottom: 8 },\r\n  boxTextTitle: { fontSize: \"7.5pt\", fontWeight: 600, marginBottom: 8 },\r\n  formTitle: { fontWeight: 600 },\r\n  label: {\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n  },\r\n  languageLabel: {\r\n    color: \"#C22\",\r\n    paddingTop: 12,\r\n    paddingBottom: 12,\r\n  },\r\n  value: {\r\n    fontSize: 24,\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\ninterface IPrintHeaderProps {\r\n  values: IObjectionModel;\r\n}\r\n\r\nexport const PrintHeader: React.FC<IPrintHeaderProps> = ({ values }) => {\r\n  const { currentLanguage, strings } = useLanguage();\r\n  const {\r\n    box,\r\n    boxTextBody,\r\n    boxTextTitle,\r\n    formTitle,\r\n    languageLabel,\r\n    ...classes\r\n  } = useStyles();\r\n\r\n  return (\r\n    <Grid item container xs={11}>\r\n      <Grid item xs={6}>\r\n        <Typography classes={{ root: formTitle }} variant=\"h4\">\r\n          Objection to Grant a Planning Permit\r\n        </Typography>\r\n        <Typography classes={{ root: languageLabel }} variant=\"body1\">\r\n          {currentLanguage === \"english\" ? (\r\n            NON_BREAKING_SPACE\r\n          ) : (\r\n            <em>\r\n              Original language submitted <strong>{strings.nameEnglish}</strong>\r\n            </em>\r\n          )}\r\n        </Typography>\r\n        <br />\r\n        <PrintLine\r\n          xs={12}\r\n          classes={classes}\r\n          label=\"Application Number:\"\r\n          subLabel=\"*Indicates required fields to be completed\"\r\n          value={values.proposal.applicationNumber}\r\n        />\r\n      </Grid>\r\n      <Grid container item xs={6} direction=\"column\" alignItems=\"flex-end\">\r\n        <Box>\r\n          <img alt=\"City of Monash\" src={Logo} width={200} />\r\n          <br />\r\n          <br />\r\n        </Box>\r\n        <Box className={box}>\r\n          <Typography classes={{ root: boxTextTitle }}>\r\n            Office Use Only\r\n          </Typography>\r\n          <Typography classes={{ root: boxTextBody }}>\r\n            Date Received: ...................................\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { ILanguage } from \"common/models/language\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\n\r\nexport enum AppContextAction {\r\n  DONE,\r\n  LANGUAGE,\r\n  PRINT,\r\n  RESET,\r\n  SAVE,\r\n  VIEW,\r\n}\r\n\r\nexport enum AppView {\r\n  FORM,\r\n  PRINT,\r\n}\r\n\r\nexport interface IAppContextState {\r\n  language: string;\r\n  save: boolean;\r\n  values: IObjectionModel;\r\n  view: AppView;\r\n}\r\n\r\nexport interface IAppContext {\r\n  printData: (values: IObjectionModel) => void;\r\n  resetData: () => void;\r\n  setLanguage: (language: string) => void;\r\n  saveData: (values: IObjectionModel) => void;\r\n  toFormView: () => void;\r\n  toPrintView: () => void;\r\n  state: IAppContextState;\r\n  strings: ILanguage;\r\n}\r\n\r\nexport type AppContextActions =\r\n  | {\r\n      language: string;\r\n      type: AppContextAction.LANGUAGE;\r\n    }\r\n  | {\r\n      values: IObjectionModel;\r\n      type: AppContextAction.PRINT;\r\n    }\r\n  | {\r\n      type: AppContextAction.DONE | AppContextAction.RESET;\r\n    }\r\n  | {\r\n      values: IObjectionModel;\r\n      type: AppContextAction.SAVE;\r\n    }\r\n  | {\r\n      view: AppView;\r\n      type: AppContextAction.VIEW;\r\n    };\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  fade: {\r\n    position: \"absolute\",\r\n    height: 8,\r\n    boxShadow: \"0 0 8px rgba(255,255,255, 1)\",\r\n    width: \"100%\",\r\n    zIndex: 10,\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n}));\r\n\r\nexport const ExpandableOverlay: React.FC = () => {\r\n  const { fade, root } = useStyles();\r\n\r\n  return (\r\n    <div className={root}>\r\n      <div className={fade}></div>\r\n    </div>\r\n  );\r\n};\r\n","import Collapse from \"@material-ui/core/Collapse\";\r\nimport React from \"react\";\r\nimport { ExpandableOverlay } from \"./expandable-overlay\";\r\n\r\ninterface IExpandableProps {\r\n  sneekPeek?: number;\r\n  open?: boolean;\r\n}\r\n\r\nexport const Expandable: React.FC<IExpandableProps> = ({\r\n  children,\r\n  sneekPeek,\r\n  open,\r\n}) => (\r\n  <React.Fragment>\r\n    <Collapse collapsedSize={sneekPeek} in={open}>\r\n      {children}\r\n    </Collapse>\r\n    {sneekPeek && !open && <ExpandableOverlay />}\r\n  </React.Fragment>\r\n);\r\n","import TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { useField } from \"formik\";\r\n\r\nconst fieldProps = {\r\n  fullWidth: true,\r\n  InputLabelProps: { shrink: true },\r\n  variant: \"outlined\" as TextFieldProps[\"variant\"],\r\n};\r\n\r\ninterface IFormikFieldProps extends Omit<TextFieldProps, \"onChange\"> {\r\n  name: string;\r\n  readonly?: boolean;\r\n}\r\n\r\nexport const FormikField: React.FC<IFormikFieldProps> = ({\r\n  name,\r\n  readonly,\r\n  ...props\r\n}) => {\r\n  const [{ onBlur, onChange }, { error, touched, value }] = useField(name);\r\n  const { strings } = useLanguage();\r\n\r\n  const hasError = touched && !!error;\r\n  const label = strings.labels[name];\r\n  const placeholder = strings.placeholder[name];\r\n\r\n  return (\r\n    <TextField\r\n      {...fieldProps}\r\n      {...props}\r\n      aria-readonly={readonly || props[\"aria-readonly\"]}\r\n      error={hasError}\r\n      label={typeof label === \"string\" ? label : props.label}\r\n      helperText={hasError && error}\r\n      name={name}\r\n      onBlur={(event) => {\r\n        if (readonly) {\r\n          return;\r\n        }\r\n\r\n        onBlur(event);\r\n      }}\r\n      onChange={(event) => {\r\n        if (readonly) {\r\n          return;\r\n        }\r\n\r\n        onChange(event);\r\n      }}\r\n      placeholder={\r\n        typeof placeholder === \"string\" ? placeholder : props.placeholder\r\n      }\r\n      value={value}\r\n    />\r\n  );\r\n};\r\n","import Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles<Theme, { show: boolean }>(() => ({\r\n  root: ({ show }) => ({\r\n    transform: show ? \"rotate(180deg)\" : \"rotate(0)\",\r\n    transition: \"transform 300ms ease\",\r\n  }),\r\n}));\r\n\r\ninterface IHideButton {\r\n  show: boolean;\r\n  toggleShow: () => void;\r\n}\r\n\r\nexport const HideButton: React.FC<IHideButton> = ({ show, toggleShow }) => {\r\n  const { strings } = useLanguage();\r\n\r\n  return (\r\n    <Button onClick={toggleShow} variant=\"text\" size=\"small\">\r\n      {show ? strings.buttons.hide : strings.buttons.show}\r\n      <ArrowDropDown classes={useStyles({ show })} />\r\n    </Button>\r\n  );\r\n};\r\n","import { CSSProperties } from \"@material-ui/core/styles/withStyles\";\r\n\r\ninterface ISideStyle {\r\n  all?: number | string;\r\n  b?: number | string;\r\n  bottom?: number | string;\r\n  l?: number | string;\r\n  left?: number | string;\r\n  r?: number | string;\r\n  right?: number | string;\r\n  t?: number | string;\r\n  top?: number | string;\r\n  x?: number | string;\r\n  y?: number | string;\r\n}\r\n\r\ninterface ISideStyleMapping {\r\n  sides: string[];\r\n  value: string;\r\n}\r\n\r\ninterface ISideStyleValue<Value extends string | number = string | number> {\r\n  top?: Value;\r\n  left?: Value;\r\n  right?: Value;\r\n  bottom?: Value;\r\n}\r\n\r\ninterface ISideStyleOptions {\r\n  asProps?: boolean;\r\n  property: string;\r\n  separator?: string;\r\n  units?: SideStyleUnits;\r\n  value: SideStyleValue;\r\n}\r\n\r\ntype SideStyleUnits = \"%\" | \"px\";\r\n\r\nexport type SideStyleValue = ISideStyle | number | string;\r\n\r\nclass SideStyle {\r\n  private static convert = ({\r\n    asProps,\r\n    property,\r\n    separator = \";\",\r\n    units = \"px\",\r\n    value,\r\n  }: ISideStyleOptions): unknown => {\r\n    if (value === undefined) {\r\n      return asProps ? {} : \"\";\r\n    }\r\n\r\n    if (typeof value === \"number\" || typeof value === \"string\") {\r\n      return asProps\r\n        ? { [property]: value }\r\n        : `${property}: ${SideStyle.toValue(value, units)}`;\r\n    }\r\n\r\n    const b = value.b ?? value.bottom ?? value.y ?? value.all;\r\n    const l = value.l ?? value.left ?? value.x ?? value.all;\r\n    const r = value.r ?? value.right ?? value.x ?? value.all;\r\n    const t = value.t ?? value.top ?? value.y ?? value.all;\r\n\r\n    if (asProps) {\r\n      return t !== undefined && [l, r, b].every((side) => side === t)\r\n        ? SideStyle.convert({\r\n            asProps,\r\n            property,\r\n            separator,\r\n            units,\r\n            value: t,\r\n          })\r\n        : SideStyle.toProps(property, [\r\n            [\"bottom\", b],\r\n            [\"left\", l],\r\n            [\"right\", r],\r\n            [\"top\", t],\r\n          ]);\r\n    }\r\n\r\n    return SideStyle.toShorthand(property, separator, {\r\n      bottom: SideStyle.toValue(b, units),\r\n      left: SideStyle.toValue(l, units),\r\n      right: SideStyle.toValue(r, units),\r\n      top: SideStyle.toValue(t, units),\r\n    });\r\n  };\r\n\r\n  private static toLonghand = (property: string, sides: ISideStyleValue) => {\r\n    const { mapped, total } = SideStyle.toMapped(sides);\r\n\r\n    if (total !== 4 || mapped[0].sides.length === 1) {\r\n      return SideStyle.toStyles(property, mapped);\r\n    }\r\n\r\n    const [first, ...others] = mapped;\r\n\r\n    return [\r\n      `${property}: ${first.value}`,\r\n      ...SideStyle.toStyles(property, others),\r\n    ];\r\n  };\r\n\r\n  private static toMapped = (queue: ISideStyleValue) => {\r\n    // Track how many items exist in total\r\n    let total = 0;\r\n\r\n    // Process queue of items\r\n    const mapped = Object.entries(queue)\r\n      // .filter((item): item is [string, string] => item[] !== undefined)\r\n      .reduce((mappings, [side, value]) => {\r\n        if (value === undefined) {\r\n          return mappings;\r\n        }\r\n\r\n        const prevIndex = mappings.findIndex((prev) => prev.value === value);\r\n\r\n        if (prevIndex >= 0) {\r\n          mappings[prevIndex].sides.push(side);\r\n        } else {\r\n          mappings.push({ value, sides: [side] });\r\n        }\r\n\r\n        total++;\r\n\r\n        return mappings;\r\n      }, [] as ISideStyleMapping[]);\r\n\r\n    return { mapped, total };\r\n  };\r\n\r\n  private static toProps = (\r\n    property: string,\r\n    values: Array<[string, number | string | undefined]>\r\n  ) =>\r\n    values.reduce(\r\n      (styles, [side, value]) =>\r\n        value === undefined\r\n          ? styles\r\n          : {\r\n              ...styles,\r\n              [`${property}${side[0].toUpperCase()}${side.substr(1)}`]: value,\r\n            },\r\n      {} as Record<string, string | number>\r\n    );\r\n\r\n  private static toShorthand = (\r\n    property: string,\r\n    separator: string,\r\n    sides: ISideStyleValue\r\n  ) => {\r\n    const { bottom, left, right, top } = sides;\r\n\r\n    if ([bottom, left, right, top].includes(undefined)) {\r\n      return SideStyle.toLonghand(property, sides).join(separator);\r\n    }\r\n\r\n    if (left !== right) {\r\n      return `${property}: ${top} ${right} ${bottom} ${left}`;\r\n    }\r\n\r\n    if (top !== bottom) {\r\n      return `${property}: ${top} ${left} ${bottom}`;\r\n    }\r\n\r\n    if (top !== left) {\r\n      return `${property}: ${bottom} ${left}`;\r\n    }\r\n\r\n    return `${property}: ${bottom}`;\r\n  };\r\n\r\n  private static toStyles = (property: string, mapped: ISideStyleMapping[]) =>\r\n    mapped.reduce(\r\n      (styels, { sides, value }) => [\r\n        ...styels,\r\n        ...sides.map((side) => `${property}-${side}: ${value}`),\r\n      ],\r\n      [] as Array<string>\r\n    );\r\n\r\n  private static toValue = (\r\n    value?: number | string,\r\n    units: SideStyleUnits = \"px\"\r\n  ) => {\r\n    if (typeof value === \"string\" || typeof value === \"undefined\") {\r\n      return value;\r\n    }\r\n\r\n    if (!value) {\r\n      return `${value}`;\r\n    }\r\n\r\n    return `${value}${units}`;\r\n  };\r\n\r\n  public static createSideStyle = <\r\n    PropKeys extends number | string | symbol = keyof CSSProperties\r\n  >(\r\n    property: string,\r\n    separator?: string\r\n  ) => ({\r\n    toString: (value: SideStyleValue, units?: SideStyleUnits) =>\r\n      SideStyle.convert({ property, separator, value, units }) as string,\r\n    toProps: (value: SideStyleValue, units?: SideStyleUnits) =>\r\n      SideStyle.convert({\r\n        asProps: true,\r\n        property,\r\n        separator,\r\n        value,\r\n        units,\r\n      }) as Record<PropKeys, string | number>,\r\n  });\r\n}\r\n\r\nexport const { createSideStyle } = SideStyle;\r\n","import { createSideStyle } from \"./style-side\";\r\n\r\nexport const marginStyles = createSideStyle<\r\n  \"margin\" | \"marginTop\" | \"marginLeft\" | \"marginRight\" | \"marginBottom\"\r\n>(\"margin\");\r\n\r\nexport const paddingStyles = createSideStyle<\r\n  \"padding\" | \"paddingTop\" | \"paddingLeft\" | \"paddingRight\" | \"paddingBottom\"\r\n>(\"padding\");\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { Expandable } from \"components/expandable\";\r\nimport { HideButton } from \"components/hide-button\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport const ObjectionFormInformation: React.FC = () => {\r\n  const [showText, setShowText] = useState(false);\r\n  const { strings } = useLanguage();\r\n\r\n  return (\r\n    <Expandable open={showText} sneekPeek={90}>\r\n      <Grid container justifyContent=\"space-between\">\r\n        <Grid item>\r\n          <Typography variant=\"h6\" align=\"justify\">\r\n            {strings.titles.about}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <HideButton\r\n            show={showText}\r\n            toggleShow={() => setShowText(!showText)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {strings.info.description.map((description, index) => (\r\n        <React.Fragment key={index}>\r\n          <br />\r\n          <Typography variant=\"body1\" align=\"justify\">\r\n            {description}\r\n          </Typography>\r\n        </React.Fragment>\r\n      ))}\r\n      {strings.info.delivery}\r\n      {strings.info.more.map((more, index) => (\r\n        <React.Fragment key={index}>\r\n          <br />\r\n          <Typography variant=\"body1\" align=\"justify\">\r\n            {more}\r\n          </Typography>\r\n        </React.Fragment>\r\n      ))}\r\n      <br />\r\n    </Expandable>\r\n  );\r\n};\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useGrid } from \"common/hooks/use-grid\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\nimport { Expandable } from \"components/expandable\";\r\nimport { FormikField } from \"components/formik-field\";\r\nimport { HideButton } from \"components/hide-button\";\r\nimport { FormikProps } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { paddingStyles } from \"styles/utils\";\r\nimport { ObjectionFormInformation } from \"./objection-info\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  centered: { textAlign: \"center\" },\r\n  italics: { fontStyle: \"italic \" },\r\n  root: { ...paddingStyles.toProps(16) },\r\n}));\r\n\r\nexport const ObjectionFormTemplate: React.FC<FormikProps<IObjectionModel>> = ({\r\n  submitForm,\r\n  values,\r\n}) => {\r\n  const { strings } = useLanguage();\r\n  const { centered, italics, root } = useStyles();\r\n  const { GridFour, GridEight, GridTwelve } = useGrid(root);\r\n\r\n  const [showApplicant, setShowApplicant] = useState(false);\r\n  const [showConcernedParty, setShowConcernedParty] = useState(true);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <ObjectionFormInformation />\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <Typography variant=\"h6\">{strings.titles.proposal}</Typography>\r\n          <hr />\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography\r\n                align=\"justify\"\r\n                classes={{ root: showApplicant ? undefined : italics }}\r\n                variant=\"body1\"\r\n              >\r\n                {showApplicant\r\n                  ? strings.sections.proposal\r\n                  : strings.miscellaneous.hiddenFields}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <HideButton\r\n                show={showApplicant}\r\n                toggleShow={() => setShowApplicant(!showApplicant)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Expandable open={showApplicant}>\r\n        <Grid container>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Name of Applicant\"\r\n              name=\"proposal.applicationName\"\r\n              placeholder=\"Enter the applicant's Name or Business\"\r\n            />\r\n          </GridFour>\r\n          <GridEight>\r\n            <FormikField\r\n              label=\"Description of Proposal\"\r\n              name=\"proposal.description\"\r\n              placeholder=\"Enter a description for the purpose of the planning proposal\"\r\n            />\r\n          </GridEight>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Application Number\"\r\n              name=\"proposal.applicationNumber\"\r\n              placeholder=\"Enter the TPA number on the planning permit\"\r\n              readonly\r\n            />\r\n          </GridFour>\r\n          <GridEight>\r\n            <FormikField\r\n              label=\"Description of Land\"\r\n              name=\"proposal.applicantLand\"\r\n              placeholder=\"Enter a description of the land to be developed\"\r\n              readonly\r\n            />\r\n          </GridEight>\r\n        </Grid>\r\n      </Expandable>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <Expandable open={showApplicant}>\r\n            <br />\r\n          </Expandable>\r\n          <Typography variant=\"h6\">{strings.titles.concernedParty}</Typography>\r\n          <hr />\r\n          <Grid container justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Typography\r\n                align=\"justify\"\r\n                classes={{\r\n                  root: showConcernedParty ? undefined : italics,\r\n                }}\r\n                variant=\"body1\"\r\n              >\r\n                {showConcernedParty\r\n                  ? strings.sections.concernedParty\r\n                  : strings.miscellaneous.hiddenFields}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <HideButton\r\n                show={showConcernedParty}\r\n                toggleShow={() => setShowConcernedParty(!showConcernedParty)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Expandable open={showConcernedParty}>\r\n        <Grid container>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Name(s)\"\r\n              name=\"concernedParty.contactName\"\r\n              placeholder=\"Enter your name(s)\"\r\n            />\r\n          </GridFour>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Email Address\"\r\n              name=\"concernedParty.contactEmail\"\r\n              placeholder=\"Your Email Address\"\r\n            />\r\n          </GridFour>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Phone\"\r\n              name=\"concernedParty.contactPhone\"\r\n              placeholder=\"Enter your contact phone number\"\r\n            />\r\n          </GridFour>\r\n          <GridEight>\r\n            <FormikField\r\n              label=\"Residential Address\"\r\n              name=\"concernedParty.contactAddress\"\r\n              placeholder=\"Enter your residential address\"\r\n            />\r\n          </GridEight>\r\n          <GridFour>\r\n            <FormikField\r\n              label=\"Post Code\"\r\n              name=\"concernedParty.contactPostCode\"\r\n              placeholder=\"Enter your post code\"\r\n            />\r\n          </GridFour>\r\n        </Grid>\r\n      </Expandable>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <Expandable open={showConcernedParty}>\r\n            <br />\r\n          </Expandable>\r\n          <Typography variant=\"h6\">{strings.titles.objection}</Typography>\r\n          <hr />\r\n          <Typography variant=\"body1\" align=\"justify\">\r\n            {strings.sections.objection}\r\n          </Typography>\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <FormikField\r\n            label=\"Grounds of Objection\"\r\n            name=\"objection.concerns\"\r\n            placeholder=\"Detail your concerns with regards to this proposal\"\r\n            multiline\r\n            minRows={8}\r\n            maxRows={12}\r\n          />\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Grid container>\r\n        <GridTwelve>\r\n          <FormikField\r\n            label=\"Changes which could address your concern(s)\"\r\n            name=\"objection.suggestedChanges\"\r\n            placeholder=\"Enter any changes that could be made to the proposal that would address your concer(s)\"\r\n            multiline\r\n            minRows={4}\r\n            maxRows={8}\r\n          />\r\n        </GridTwelve>\r\n      </Grid>\r\n      <Grid container>\r\n        <GridTwelve classes={{ root: centered }}>\r\n          <Button color=\"primary\" onClick={submitForm} variant=\"contained\">\r\n            {strings.buttons.printObjectionForm}\r\n          </Button>\r\n        </GridTwelve>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import Grid, { GridProps } from \"@material-ui/core/Grid\";\r\nimport { PropsWithChildren, useMemo } from \"react\";\r\n\r\nexport const useGrid = (className: string) =>\r\n  useMemo(\r\n    () => ({\r\n      GridFour: ({ children, ...props }: PropsWithChildren<GridProps>) => (\r\n        <Grid item xs={12} lg={6} xl={4} {...props}>\r\n          <div className={className}>{children}</div>\r\n        </Grid>\r\n      ),\r\n      GridEight: ({ children, ...props }: PropsWithChildren<GridProps>) => (\r\n        <Grid item xs={12} lg={6} xl={8} {...props}>\r\n          <div className={className}>{children}</div>\r\n        </Grid>\r\n      ),\r\n      GridTwelve: ({ children, ...props }: PropsWithChildren<GridProps>) => (\r\n        <Grid item xs={12} {...props}>\r\n          <div className={className}>{children}</div>\r\n        </Grid>\r\n      ),\r\n    }),\r\n    [className]\r\n  );\r\n","import { useSaveData } from \"common/hooks/use-save-data\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\nimport { Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { ObjectionFormTemplate } from \"./objection-template\";\r\n\r\nexport const ObjectionForm: React.FC = () => {\r\n  const { initialValues, printData } = useSaveData();\r\n\r\n  return (\r\n    <Formik<IObjectionModel>\r\n      initialValues={initialValues}\r\n      onSubmit={(values) => printData(values)}\r\n    >\r\n      {ObjectionFormTemplate}\r\n    </Formik>\r\n  );\r\n};\r\n","import { AppContext } from \"common/context\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const useSaveData = () => {\r\n  const { state, printData, saveData } = useContext(AppContext);\r\n\r\n  return {\r\n    initialValues: state.values,\r\n    printData,\r\n    saveData,\r\n  };\r\n};\r\n","import Grid, { GridJustification } from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { paddingStyles, SideStyle } from \"styles/utils\";\r\n\r\ninterface IPageSectionStyles {\r\n  background?: string;\r\n  color?: string;\r\n  fontSize?: string | number;\r\n  height?: number;\r\n  justify?: GridJustification;\r\n  minHeight?: number;\r\n  padding?: SideStyle;\r\n  stretch?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles<{}, IPageSectionStyles>(() => ({\r\n  padding: ({ color, fontSize, padding }) =>\r\n    padding ? { color, fontSize, ...paddingStyles.toProps(padding) } : {},\r\n  root: ({\r\n    background,\r\n    color,\r\n    fontSize,\r\n    height,\r\n    minHeight,\r\n    padding,\r\n    stretch,\r\n  }) => ({\r\n    ...(background ? { background } : {}),\r\n    ...(height ? { height } : {}),\r\n    ...(minHeight ? { minHeight } : {}),\r\n    ...(!padding\r\n      ? {\r\n          ...(color ? { color } : {}),\r\n          ...(fontSize ? { fontSize } : {}),\r\n        }\r\n      : {}),\r\n    ...(stretch ? { flex: \"1 0 auto\" } : {}),\r\n  }),\r\n}));\r\n\r\nexport const PageSection: React.FC<IPageSectionStyles> = ({\r\n  children,\r\n  justify = \"center\",\r\n  ...props\r\n}) => {\r\n  const classes = useStyles(props);\r\n\r\n  const Wrapper = useMemo(\r\n    (): React.FC =>\r\n      props.padding\r\n        ? ({ children }) => (\r\n            <Grid\r\n              classes={{ root: classes.padding }}\r\n              container\r\n              item\r\n              justifyContent={justify}\r\n            >\r\n              {children}\r\n            </Grid>\r\n          )\r\n        : React.Fragment,\r\n    [classes.padding, justify, props.padding]\r\n  );\r\n\r\n  return (\r\n    <Grid\r\n      classes={{ root: classes.root }}\r\n      container\r\n      item\r\n      justifyContent={props.padding ? undefined : justify}\r\n    >\r\n      <Wrapper>{children}</Wrapper>\r\n    </Grid>\r\n  );\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ObjectionForm } from \"components/objection-form\";\r\nimport { PageSection } from \"components/page-section\";\r\nimport React from \"react\";\r\nimport { paddingStyles } from \"styles/utils\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    minHeight: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n  content: {\r\n    ...paddingStyles.toProps(16),\r\n  },\r\n}));\r\n\r\nexport const Content: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageSection justify=\"center\" stretch>\r\n      <Grid classes={{ root: classes.root }} item md={8} xs={12}>\r\n        <div className={classes.content}>\r\n          <ObjectionForm />\r\n        </div>\r\n      </Grid>\r\n    </PageSection>\r\n  );\r\n};\r\n","import { PageSection } from \"components/page-section\";\r\nimport React from \"react\";\r\n\r\nexport const Footer: React.FC = ({ children }) => (\r\n  <PageSection\r\n    background=\"#9CE\"\r\n    color=\"#048\"\r\n    fontSize={10}\r\n    justify=\"flex-end\"\r\n    padding={{ x: 6, y: 4 }}\r\n  >\r\n    {children}\r\n  </PageSection>\r\n);\r\n","import Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Translate from \"@material-ui/icons/Translate\";\r\nimport { useLanguage } from \"common/hooks/use-language\";\r\nimport { language } from \"common/languages\";\r\nimport { PageSection } from \"components/page-section\";\r\nimport React, { useRef, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  button: {\r\n    color: \"#FFF\",\r\n    width: 250,\r\n  },\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  icon: {\r\n    display: \"inline-flex\",\r\n    fill: \"#FFF\",\r\n    marginRight: 12,\r\n  },\r\n  menu: {\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst toLabel = (current: string, friendly: string, name: string) => {\r\n  if (current === \"english\") {\r\n    return name;\r\n  }\r\n\r\n  return `${name} (${friendly})`;\r\n};\r\n\r\nexport const Header: React.FC = () => {\r\n  const anchorEl = useRef<HTMLButtonElement | null>(null);\r\n  const { currentLanguage, setLanguage, strings } = useLanguage();\r\n  const [open, setOpen] = useState(false);\r\n  const { button, container, icon, menu } = useStyles();\r\n\r\n  return (\r\n    <PageSection\r\n      background=\"#28C\"\r\n      color=\"#F2F2F2\"\r\n      justify=\"space-between\"\r\n      padding={{ all: 16 }}\r\n    >\r\n      <Typography variant=\"h6\">{strings.titles.header}</Typography>\r\n      <div className={container}>\r\n        <Button\r\n          aria-controls={open ? \"menu-list-grow\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          classes={{ root: button }}\r\n          onClick={() => setOpen(true)}\r\n          ref={anchorEl}\r\n        >\r\n          {strings.icon === \"true\" && (\r\n            <Translate classes={{ root: icon }} fontSize=\"small\" />\r\n          )}\r\n          {toLabel(currentLanguage, strings.nameEnglish, strings.name)}\r\n        </Button>\r\n        <Popper\r\n          anchorEl={anchorEl.current}\r\n          disablePortal\r\n          open={open}\r\n          role={undefined}\r\n          style={{ zIndex: 999 }}\r\n          transition\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                marginTop: 36,\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={() => setOpen(false)}>\r\n                  <MenuList autoFocusItem={open} classes={{ root: menu }}>\r\n                    {language.meta.map(({ friendly, label, value }) => (\r\n                      <MenuItem\r\n                        key={value}\r\n                        onClick={() => {\r\n                          setOpen(false);\r\n                          setLanguage(value);\r\n                        }}\r\n                      >\r\n                        <span>{toLabel(value, friendly, label)}</span>\r\n                      </MenuItem>\r\n                    ))}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </PageSection>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    minHeight: \"100%\",\r\n  },\r\n}));\r\n\r\nexport const PageLayout: React.FC = ({ children }) => {\r\n  const { root } = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      alignItems=\"center\"\r\n      classes={{ root }}\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"space-between\"\r\n    >\r\n      {children}\r\n    </Grid>\r\n  );\r\n};\r\n","import { Content } from \"components/content\";\r\nimport { Footer } from \"components/footer\";\r\nimport { Header } from \"components/header\";\r\nimport { PageLayout } from \"components/page-layout\";\r\nimport React from \"react\";\r\n\r\nexport const FormViewPage: React.FC = () => (\r\n  <div className=\"form-root\">\r\n    <PageLayout>\r\n      <Header />\r\n      <Content />\r\n      <Footer>&copy; 2021 - Anthony Costabile</Footer>\r\n    </PageLayout>\r\n  </div>\r\n);\r\n","import { PrintView } from \"components/print/print\";\r\nimport React from \"react\";\r\nimport { usePrintView } from \"common/hooks/use-print-view\";\r\n\r\nexport const PrintViewPage: React.FC = () => {\r\n  const { values } = usePrintView();\r\n\r\n  return (\r\n    <div className=\"print-root\">\r\n      <div className=\"print-content\">\r\n        <PrintView values={values} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { AppView } from \"common/context/types\";\r\nimport { useAppView } from \"common/hooks/use-app-view\";\r\nimport React from \"react\";\r\nimport { FormViewPage } from \"./app-form\";\r\nimport { PrintViewPage } from \"./app-print\";\r\n\r\nexport const App: React.FC = () => {\r\n  const { view } = useAppView();\r\n\r\n  return (\r\n    <>\r\n      <FormViewPage />\r\n      {view === AppView.PRINT && <PrintViewPage />}\r\n    </>\r\n  );\r\n};\r\n","import { AppContext } from \"common/context\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const useAppView = () => {\r\n  const { toFormView, toPrintView, state } = useContext(AppContext);\r\n\r\n  return {\r\n    toFormView,\r\n    toPrintView,\r\n    view: state.view,\r\n  };\r\n};\r\n","import { AppProvider } from \"common/context\";\nimport { App } from \"components/app\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { getSaveData } from \"utils/local-storage\";\nimport \"styles/global.css\";\n\nrender(\n  <React.StrictMode>\n    <AppProvider appData={getSaveData()}>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export const classNames = (\r\n  ...args: Array<string | 0 | null | false | undefined>\r\n) =>\r\n  Array.from(args)\r\n    .filter((className) => !!className)\r\n    .join(\" \");\r\n","import Grid, { GridProps } from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { TEXT_DOTS } from \"common/constants/app\";\r\nimport React, { ReactNode, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { classNames } from \"utils/class-names\";\r\n\r\ninterface IPrintLine extends Omit<GridProps, \"classes\"> {\r\n  classes?: {\r\n    label?: string;\r\n    subLabel?: string;\r\n    value?: string;\r\n  };\r\n  label?: string;\r\n  minLines?: number;\r\n  onLines?: (lines: number) => void;\r\n  subLabel?: ReactNode;\r\n  value?: ReactNode;\r\n}\r\n\r\nconst heightOffset = 28;\r\n\r\nconst useStyles = makeStyles<Theme, { subLabel?: boolean }>(() => ({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  dots: {\r\n    color: \"#888\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n    zIndex: 0,\r\n  },\r\n  lineHeight: {\r\n    lineHeight: `${heightOffset}px`,\r\n  },\r\n  dotsLabel: {\r\n    opacity: 0,\r\n  },\r\n  space: {\r\n    height: ({ subLabel }) => (subLabel ? 20 : 4),\r\n  },\r\n  subLabel: {\r\n    color: \"#333\",\r\n    fontSize: \"0.75rem\",\r\n  },\r\n  text: {\r\n    color: \"#048\",\r\n    top: -4,\r\n    width: \"100%\",\r\n    position: \"absolute\",\r\n  },\r\n  textLabel: {\r\n    color: \"#333\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  value: {\r\n    whiteSpace: \"pre-wrap\",\r\n  },\r\n}));\r\n\r\nexport const PrintLine: React.FC<IPrintLine> = ({\r\n  children,\r\n  classes: classesProp = {},\r\n  label,\r\n  onLines,\r\n  minLines,\r\n  subLabel,\r\n  value,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles({ subLabel: !!subLabel });\r\n  const textField = useRef<HTMLDivElement | null>(null);\r\n  const [lines, setLines] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (!textField.current) {\r\n      return;\r\n    }\r\n\r\n    const { height } = textField.current.getBoundingClientRect();\r\n\r\n    const linesToAdd = Math.floor(height / heightOffset) - 1;\r\n    setLines(Math.max(linesToAdd, minLines ?? 0));\r\n  }, [minLines]);\r\n\r\n  useEffect(() => {\r\n    if (!onLines || !lines) {\r\n      return;\r\n    }\r\n\r\n    onLines(lines);\r\n  }, [lines, onLines]);\r\n\r\n  return (\r\n    <Grid xs={12} {...props} classes={{ root: classes.container }} item>\r\n      <div className={classes.dots}>\r\n        <Typography\r\n          classes={{ root: classes.lineHeight }}\r\n          noWrap\r\n          variant=\"body1\"\r\n        >\r\n          <span className={classes.dotsLabel}>{label} </span>\r\n          {TEXT_DOTS}\r\n        </Typography>\r\n        {lines > 0 &&\r\n          Array.from(Array(lines)).map((_, index) => (\r\n            <Typography\r\n              classes={{ root: classes.lineHeight }}\r\n              key={index}\r\n              noWrap\r\n              variant=\"body2\"\r\n            >\r\n              {TEXT_DOTS}\r\n            </Typography>\r\n          ))}\r\n        <div className={classes.space} />\r\n      </div>\r\n      <div className={classes.text} ref={textField}>\r\n        <Typography\r\n          classes={{\r\n            root: classNames(\r\n              classes.lineHeight,\r\n              classes.value,\r\n              classesProp.value\r\n            ),\r\n          }}\r\n          variant=\"body2\"\r\n          align=\"justify\"\r\n        >\r\n          <span className={classNames(classes.textLabel, classesProp.label)}>\r\n            {label}\r\n          </span>{\" \"}\r\n          {value}\r\n        </Typography>{\" \"}\r\n        <Typography\r\n          classes={{ root: classNames(classes.subLabel, classesProp.subLabel) }}\r\n          variant=\"subtitle2\"\r\n          align=\"justify\"\r\n        >\r\n          {subLabel}\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n// minLines\r\n","export const COMMUNITY_AMENITY =\r\n  \"https://www.monash.vic.gov.au/About-Us/Laws-Rules/Local-Law-No-3-Community-Amenity\";\r\n\r\nexport const PROPOSAL_LINK =\r\n  \"https://www.monash.vic.gov.au/About-Us/Council/Have-Your-Say/Proposed-development-at-251-261-Springvale-Road-Glen-Waverley\";\r\n\r\nexport const LOCAL_STORAGE_KEY = \"objection-data\";\r\n\r\nexport const TEXT_DOTS = Array.from(Array(127))\r\n  .map((_) => \".\")\r\n  .join(\".\");\r\n\r\nexport const NON_BREAKING_SPACE = \"\\u00A0\";\r\n","import { useContext } from \"react\";\r\nimport { AppContext } from \"common/context\";\r\n\r\nexport const useLanguage = () => {\r\n  const { setLanguage, state, strings } = useContext(AppContext);\r\n\r\n  return {\r\n    currentLanguage: state.language,\r\n    setLanguage,\r\n    strings,\r\n  };\r\n};\r\n","import { defaultFormData } from \"common/constants/defaults\";\r\nimport { english } from \"common/languages/english\";\r\nimport { ILanguage } from \"common/models/language\";\r\nimport { createContext } from \"react\";\r\nimport { AppView, IAppContext } from \"./types\";\r\n\r\nexport const defaultAppContext = {\r\n  language: \"english\",\r\n  save: false,\r\n  view: AppView.FORM,\r\n  values: defaultFormData,\r\n};\r\n\r\nexport const AppContext = createContext<IAppContext>({\r\n  printData: () => null,\r\n  resetData: () => null,\r\n  saveData: () => null,\r\n  setLanguage: () => null,\r\n  toFormView: () => null,\r\n  toPrintView: () => null,\r\n  state: defaultAppContext,\r\n  strings: english as ILanguage,\r\n});\r\n","import { defaultFormData } from \"common/constants/defaults\";\r\nimport {\r\n  AppContextAction,\r\n  AppContextActions,\r\n  AppView,\r\n  IAppContextState,\r\n} from \"./types\";\r\n\r\nexport const appContextReducer = (\r\n  state: IAppContextState,\r\n  action: AppContextActions\r\n): IAppContextState => {\r\n  switch (action.type) {\r\n    case AppContextAction.DONE:\r\n      return { ...state, save: false };\r\n\r\n    case AppContextAction.LANGUAGE:\r\n      return { ...state, language: action.language, save: true };\r\n\r\n    case AppContextAction.PRINT:\r\n      return {\r\n        ...state,\r\n        save: true,\r\n        view: AppView.PRINT,\r\n        values: action.values,\r\n      };\r\n\r\n    case AppContextAction.RESET:\r\n      return { ...state, values: defaultFormData };\r\n\r\n    case AppContextAction.SAVE:\r\n      return { ...state, save: true, values: action.values };\r\n\r\n    case AppContextAction.VIEW:\r\n      return { ...state, view: action.view };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { language } from \"common/languages\";\r\nimport { IAppData } from \"common/models/app-data\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\nimport React, { useCallback, useMemo, useReducer } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { setSaveData } from \"utils/local-storage\";\r\nimport { AppContext } from \"./context\";\r\nimport { appContextReducer } from \"./reducer\";\r\nimport { AppContextAction, AppView } from \"./types\";\r\n\r\ninterface IAppProviderProps {\r\n  appData: IAppData;\r\n}\r\n\r\nexport const AppProvider: React.FC<IAppProviderProps> = ({\r\n  appData,\r\n  children,\r\n}) => {\r\n  const [state, dispatch] = useReducer(\r\n    appContextReducer,\r\n    useMemo(\r\n      () => ({\r\n        language: appData.language,\r\n        save: false,\r\n        values: appData.form,\r\n        view: AppView.FORM,\r\n      }),\r\n      [] // eslint-disable-line react-hooks/exhaustive-deps\r\n    )\r\n  );\r\n\r\n  const strings = useMemo(() => {\r\n    language.set(state.language as \"english\");\r\n\r\n    return language.strings;\r\n  }, [state.language]);\r\n\r\n  const printData = useCallback((values: IObjectionModel) => {\r\n    dispatch({ type: AppContextAction.PRINT, values });\r\n  }, []);\r\n\r\n  const resetData = useCallback(() => {\r\n    dispatch({ type: AppContextAction.RESET });\r\n  }, []);\r\n\r\n  const saveData = useCallback((values: IObjectionModel) => {\r\n    dispatch({ type: AppContextAction.SAVE, values });\r\n  }, []);\r\n\r\n  const setLanguage = useCallback((nextLanguage: string) => {\r\n    if (language.is(nextLanguage)) {\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: AppContextAction.LANGUAGE, language: nextLanguage });\r\n  }, []);\r\n\r\n  const toPrintView = useCallback(() => {\r\n    dispatch({ type: AppContextAction.VIEW, view: AppView.PRINT });\r\n  }, []);\r\n\r\n  const toFormView = useCallback(() => {\r\n    dispatch({ type: AppContextAction.VIEW, view: AppView.FORM });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!state.save) {\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: AppContextAction.DONE });\r\n    setSaveData({ form: state.values, language: state.language });\r\n  }, [state]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        printData,\r\n        resetData,\r\n        saveData,\r\n        setLanguage,\r\n        toPrintView,\r\n        toFormView,\r\n        state,\r\n        strings,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n","import { IObjectionModel } from \"common/models/objection\";\r\n\r\nexport const defaultFormData: IObjectionModel = {\r\n  proposal: {\r\n    applicantLand: \"251 -261 Springvale Road, Glen Waverley\",\r\n    applicationName: \"Hongxing Springvale Road Pty Ltd\",\r\n    applicationNumber: \"TPA/52268\",\r\n    description:\r\n      \"21 storey mixed-use building (147 dwellings, 6 retail tenancies)\",\r\n  },\r\n  concernedParty: {\r\n    contactName: \"\",\r\n    contactEmail: \"\",\r\n    contactPhone: \"\",\r\n    contactAddress: \"\",\r\n    contactPostCode: 3150,\r\n  },\r\n  objection: {\r\n    concerns: \"\",\r\n    suggestedChanges: \"\",\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\ninterface ILinkProps {\r\n  to: string;\r\n}\r\n\r\nexport const Link: React.FC<ILinkProps> = ({ children, to }) => (\r\n  <a href={to} target=\"_blank\" rel=\"noreferrer\">\r\n    {children}\r\n  </a>\r\n);\r\n","import { ILanguageData } from \"common/models/language\";\r\n\r\ntype LanguageType = ILanguageData & { name: string; nameEnglish: string };\r\n\r\nexport class Languages<\r\n  LanguageData extends LanguageType = LanguageType,\r\n  LanguageName extends string = string\r\n> {\r\n  private currentLanguage: LanguageName;\r\n  private languages: Record<LanguageName, LanguageData>;\r\n\r\n  constructor(\r\n    languages: Record<LanguageName, LanguageData>,\r\n    currentLanguage: LanguageName = Object.keys(languages)[0] as LanguageName\r\n  ) {\r\n    this.currentLanguage = currentLanguage;\r\n    this.languages = languages;\r\n  }\r\n\r\n  public get meta() {\r\n    return (Object.keys(this.languages) as LanguageName[]).map((value) => ({\r\n      friendly: this.languages[value].nameEnglish,\r\n      label: this.languages[value].name,\r\n      value,\r\n    }));\r\n  }\r\n\r\n  public get strings() {\r\n    return this.languages[this.currentLanguage] as LanguageData;\r\n  }\r\n\r\n  public is = (language: string) => {\r\n    return language === this.currentLanguage;\r\n  };\r\n\r\n  public set = (nextLanguage: LanguageName) => {\r\n    this.currentLanguage = nextLanguage;\r\n    return this;\r\n  };\r\n}\r\n","import { COMMUNITY_AMENITY, PROPOSAL_LINK } from \"common/constants/app\";\r\nimport { ILanguage } from \"common/models/language\";\r\nimport { Link } from \"components/link\";\r\n\r\nexport const chinese: ILanguage = {\r\n  // ==========================================================================\r\n  //  LANGUAGE META DATA\r\n  // ==========================================================================\r\n\r\n  icon:                                       \"false\",\r\n  name:                                       \"中文\",\r\n  nameEnglish:                                \"Chinese - Simplified\",\r\n\r\n\r\n  // ==========================================================================\r\n  //  BUTTONS, INPUTS & UI ELEMENTS\r\n  // ==========================================================================\r\n\r\n  buttons: {\r\n    hide:                                     \"Hide\",\r\n    printObjectionForm:                       \"Download Object Form\",\r\n    show:                                     \"Show\",\r\n  },\r\n  document: {\r\n    date:                                     \"Date\",\r\n    signature:                                \"Signed\",\r\n  },\r\n  labels: {\r\n    \"concernedParty.contactAddress\":          \"Residential Address\",\r\n    \"concernedParty.contactEmail\":            \"Email Address\",\r\n    \"concernedParty.contactName\":             \"Name(s)\",\r\n    \"concernedParty.contactPhone\":            \"Phone\",\r\n    \"concernedParty.contactPostCode\":         \"Post Code\",\r\n    \"objection.concerns\":                     \"Grounds of Objection\",\r\n    \"objection.suggestedChanges\":             \"Changes which could address your concern(s)\",\r\n    \"proposal.applicantLand\":                 \"Description of Land\",\r\n    \"proposal.applicationName\":               \"Name of Applicant\",\r\n    \"proposal.applicationNumber\":             \"Application Number\",\r\n    \"proposal.description\":                   \"Description of Proposal\",\r\n  },\r\n  miscellaneous: {\r\n    hiddenFields: \"Fields are hidden\",\r\n  },\r\n  placeholder: {\r\n    \"concernedParty.contactAddress\":          \"Enter your residential address\",\r\n    \"concernedParty.contactEmail\":            \"Enter your email address\",\r\n    \"concernedParty.contactName\":             \"Enter your name(s)\",\r\n    \"concernedParty.contactPhone\":            \"Enter your contact phone number\",\r\n    \"concernedParty.contactPostCode\":         \"Enter your post code\",\r\n    \"objection.concerns\":                     \"Detail your concerns with regards to this proposal\",\r\n    \"objection.suggestedChanges\":             \"Enter any changes that could be made to the proposal that would address your concer(s)\",\r\n    \"proposal.applicantLand\":                 \"Enter a description of the land to be developed\",\r\n    \"proposal.applicationName\":               \"Enter the applicant's Name or Business\",\r\n    \"proposal.applicationNumber\":             \"Enter the TPA number on the planning permit\",\r\n    \"proposal.description\":                   \"Enter a description for the purpose of the planning proposal\",\r\n  },\r\n  sections: {\r\n    concernedParty:                           \"Enter your details as accurately as possible\",\r\n    proposal:                                 \"Fields are pre-populated for your convenience\",\r\n    objection:                                \"Enter your concerns and reasons for this object, as well as any changes you'd like to see\",\r\n  },\r\n  titles: {\r\n    about:                                    \"About this form\",\r\n    concernedParty:                           \"Concerned Party (You)\",\r\n    header:                                   \"Objection Helper\",\r\n    proposal:                                 \"Planning Permit being Objected\",\r\n    objection:                                \"Objection Details\",\r\n  },\r\n\r\n\r\n  // ==========================================================================\r\n  //  MAIN PARAGRAPH CONTENT\r\n  // ==========================================================================\r\n\r\n  info: {\r\n    delivery: (\r\n      <ul>\r\n        <li>Mail - PO Box 1, Glen Waverley VIC 3150</li>\r\n        <li>\r\n          Email -{\" \"}\r\n          <Link to={`mailto:mail@monash.vic.gov.au`}>\r\n            mail@monash.vic.gov.au\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    ),\r\n    description: [\r\n      <>\r\n        This form helper was created to assist the local residents of Glen\r\n        Waverley in their objections to the recent announcement of a planned\r\n        development at <em>251 -261 Springvale Road</em>. Using the fields\r\n        below, make certain that you supply as much information as you can to\r\n        ensure your objection is taken seriously. When you have completed all\r\n        the fields, you will be able to click the{\" \"}\r\n        <strong>Print Object Form</strong> button at the bottom of this page in\r\n        order to view your completed form and save it for printing.\r\n      </>,\r\n      <>\r\n        While you may include personal reasons for objecting to this proposal,\r\n        such as{\" \"}\r\n        <strong>\r\n          <em>my view will be blocked</em>\r\n        </strong>{\" \"}\r\n        or{\" \"}\r\n        <strong>\r\n          <em>my property's value is at risk</em>\r\n        </strong>\r\n        , it is important to remember that the Council's responsibility first\r\n        and formost is to look after the{\" \"}\r\n        <Link to={COMMUNITY_AMENITY}>community amenity</Link>, and as such, the\r\n        strongest arguments you can provide will relate to how this development\r\n        may affect public safety, how it may be a nuisance such as impact on\r\n        parking, and how it may negatively impact the character of Glen\r\n        Wavelery.\r\n      </>,\r\n      <>\r\n        Unfortunately, there is a high likelihood that this development will\r\n        indeed go ahead however the size and scope of the development may be\r\n        influenced by the number of objections made and the willingness to find\r\n        a compromise, so it is <strong>strongly</strong> recommended that you\r\n        make suggestions as to the sorts of changes to this development you\r\n        would be willing to consider.\r\n      </>,\r\n      <>\r\n        Unfortunately, there is a high likelihood that this development will\r\n        indeed go ahead however the size and scope of the development may be\r\n        influenced by the number of objections made and the willingness to find\r\n        a compromise, so it is <strong>strongly</strong> recommended that you\r\n        make suggestions as to the sorts of changes to this development you\r\n        would be willing to consider.\r\n      </>,\r\n      <>\r\n        As the deadline for objections is{\" \"}\r\n        <strong>Thursday 16 September 2021</strong>, you should aim to complete\r\n        this as soon as you can! Simply print off the form, sign and date the\r\n        physical copy, and then send it back to the Monash City council as soon\r\n        as possible via one of the following methods of delivery\r\n      </>,\r\n    ],\r\n    more: [\r\n      \"For information about the proposal itself, click the following link:\",\r\n      <Link to={PROPOSAL_LINK}>\r\n        Proposed development at 251 -261 Springvale Road, Glen Waverley\r\n      </Link>,\r\n    ],\r\n  },\r\n\r\n\r\n  // ==========================================================================\r\n  //  CREDITS -> Replace the name below with your name\r\n  // ==========================================================================\r\n\r\n  translationBy: \"Anthony Costabile\"\r\n};\r\n","import { Languages } from \"utils/language\";\r\nimport { chinese } from \"./chinese\";\r\nimport { english } from \"./english\";\r\n\r\nexport const language = new Languages({\r\n  english,\r\n  chinese,\r\n});\r\n","import { COMMUNITY_AMENITY, PROPOSAL_LINK } from \"common/constants/app\";\r\nimport { ILanguage } from \"common/models/language\";\r\nimport { Link } from \"components/link\";\r\n\r\nexport const english: ILanguage = {\r\n  // ==========================================================================\r\n  //  LANGUAGE META DATA\r\n  // ==========================================================================\r\n\r\n  icon:                                       \"true\",\r\n  name:                                       \"English\",\r\n  nameEnglish:                                \"English\",\r\n\r\n\r\n  // ==========================================================================\r\n  //  BUTTONS, INPUTS & UI ELEMENTS\r\n  // ==========================================================================\r\n\r\n  buttons: {\r\n    hide:                                     \"Hide\",\r\n    printObjectionForm:                       \"Download Object Form\",\r\n    show:                                     \"Show\",\r\n  },\r\n  document: {\r\n    date:                                     \"Date\",\r\n    signature:                                \"Signed\",\r\n  },\r\n  labels: {\r\n    \"concernedParty.contactAddress\":          \"Residential Address\",\r\n    \"concernedParty.contactEmail\":            \"Email Address\",\r\n    \"concernedParty.contactName\":             \"Name(s)\",\r\n    \"concernedParty.contactPhone\":            \"Phone\",\r\n    \"concernedParty.contactPostCode\":         \"Post Code\",\r\n    \"objection.concerns\":                     \"Grounds of Objection\",\r\n    \"objection.suggestedChanges\":             \"Changes which could address your concern(s)\",\r\n    \"proposal.applicantLand\":                 \"Description of Land\",\r\n    \"proposal.applicationName\":               \"Name of Applicant\",\r\n    \"proposal.applicationNumber\":             \"Application Number\",\r\n    \"proposal.description\":                   \"Description of Proposal\",\r\n  },\r\n  miscellaneous: {\r\n    hiddenFields: \"Fields are hidden\",\r\n  },\r\n  placeholder: {\r\n    \"concernedParty.contactAddress\":          \"Enter your residential address\",\r\n    \"concernedParty.contactEmail\":            \"Enter your email address\",\r\n    \"concernedParty.contactName\":             \"Enter your name(s)\",\r\n    \"concernedParty.contactPhone\":            \"Enter your contact phone number\",\r\n    \"concernedParty.contactPostCode\":         \"Enter your post code\",\r\n    \"objection.concerns\":                     \"Detail your concerns with regards to this proposal\",\r\n    \"objection.suggestedChanges\":             \"Enter any changes that could be made to the proposal that would address your concer(s)\",\r\n    \"proposal.applicantLand\":                 \"Enter a description of the land to be developed\",\r\n    \"proposal.applicationName\":               \"Enter the applicant's Name or Business\",\r\n    \"proposal.applicationNumber\":             \"Enter the TPA number on the planning permit\",\r\n    \"proposal.description\":                   \"Enter a description for the purpose of the planning proposal\",\r\n  },\r\n  sections: {\r\n    concernedParty:                           \"Enter your details as accurately as possible\",\r\n    proposal:                                 \"Fields are pre-populated for your convenience\",\r\n    objection:                                \"Enter your concerns and reasons for this object, as well as any changes you'd like to see\",\r\n  },\r\n  titles: {\r\n    about:                                    \"About this form\",\r\n    concernedParty:                           \"Concerned Party (You)\",\r\n    header:                                   \"Objection Helper\",\r\n    proposal:                                 \"Planning Permit being Objected\",\r\n    objection:                                \"Objection Details\",\r\n  },\r\n\r\n\r\n  // ==========================================================================\r\n  //  MAIN PARAGRAPH CONTENT\r\n  // ==========================================================================\r\n\r\n  info: {\r\n    delivery: (\r\n      <ul>\r\n        <li>Mail - PO Box 1, Glen Waverley VIC 3150</li>\r\n        <li>\r\n          Email -{\" \"}\r\n          <Link to={`mailto:mail@monash.vic.gov.au`}>\r\n            mail@monash.vic.gov.au\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    ),\r\n    description: [\r\n      <>\r\n        This form helper was created to assist the local residents of Glen\r\n        Waverley in their objections to the recent announcement of a planned\r\n        development at <em>251 -261 Springvale Road</em>. Using the fields\r\n        below, make certain that you supply as much information as you can to\r\n        ensure your objection is taken seriously. When you have completed all\r\n        the fields, you will be able to click the{\" \"}\r\n        <strong>Print Object Form</strong> button at the bottom of this page in\r\n        order to view your completed form and save it for printing.\r\n      </>,\r\n      <>\r\n        While you may include personal reasons for objecting to this proposal,\r\n        such as{\" \"}\r\n        <strong>\r\n          <em>my view will be blocked</em>\r\n        </strong>{\" \"}\r\n        or{\" \"}\r\n        <strong>\r\n          <em>my property's value is at risk</em>\r\n        </strong>\r\n        , it is important to remember that the Council's responsibility first\r\n        and formost is to look after the{\" \"}\r\n        <Link to={COMMUNITY_AMENITY}>community amenity</Link>, and as such, the\r\n        strongest arguments you can provide will relate to how this development\r\n        may affect public safety, how it may be a nuisance such as impact on\r\n        parking, and how it may negatively impact the character of Glen\r\n        Wavelery.\r\n      </>,\r\n      <>\r\n        Unfortunately, there is a high likelihood that this development will\r\n        indeed go ahead however the size and scope of the development may be\r\n        influenced by the number of objections made and the willingness to find\r\n        a compromise, so it is <strong>strongly</strong> recommended that you\r\n        make suggestions as to the sorts of changes to this development you\r\n        would be willing to consider.\r\n      </>,\r\n      <>\r\n        Unfortunately, there is a high likelihood that this development will\r\n        indeed go ahead however the size and scope of the development may be\r\n        influenced by the number of objections made and the willingness to find\r\n        a compromise, so it is <strong>strongly</strong> recommended that you\r\n        make suggestions as to the sorts of changes to this development you\r\n        would be willing to consider.\r\n      </>,\r\n      <>\r\n        As the deadline for objections is{\" \"}\r\n        <strong>Thursday 16 September 2021</strong>, you should aim to complete\r\n        this as soon as you can! Simply print off the form, sign and date the\r\n        physical copy, and then send it back to the Monash City council as soon\r\n        as possible via one of the following methods of delivery\r\n      </>,\r\n    ],\r\n    more: [\r\n      \"For information about the proposal itself, click the following link:\",\r\n      <Link to={PROPOSAL_LINK}>\r\n        Proposed development at 251 -261 Springvale Road, Glen Waverley\r\n      </Link>,\r\n    ],\r\n  },\r\n\r\n\r\n  // ==========================================================================\r\n  //  CREDITS -> Replace the name below with your name\r\n  // ==========================================================================\r\n\r\n  translationBy: \"Anthony Costabile\"\r\n};\r\n","import { LOCAL_STORAGE_KEY } from \"common/constants/app\";\r\nimport { defaultFormData } from \"common/constants/defaults\";\r\nimport { IAppData } from \"common/models/app-data\";\r\nimport { IObjectionModel } from \"common/models/objection\";\r\n\r\nexport const getSaveData = (): IAppData => {\r\n  if (!global.window) {\r\n    return {\r\n      form: defaultFormData,\r\n      language: \"english\",\r\n    };\r\n  }\r\n\r\n  const currentData = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n  const {\r\n    form = {} as IObjectionModel,\r\n    language = \"english\",\r\n    \"proposal.applicationNumber\": check = false,\r\n  } = JSON.parse(currentData || \"{}\") as IAppData & {\r\n    \"proposal.applicationNumber\"?: string;\r\n  };\r\n\r\n  // Fix for older sessions!\r\n  if (check) {\r\n    localStorage.clear();\r\n  }\r\n\r\n  return {\r\n    form: {\r\n      concernedParty: {\r\n        ...defaultFormData.concernedParty,\r\n        ...form.concernedParty,\r\n      },\r\n      objection: {\r\n        ...defaultFormData.objection,\r\n        ...form.objection,\r\n      },\r\n      proposal: {\r\n        ...defaultFormData.proposal,\r\n        ...form.proposal,\r\n      },\r\n    },\r\n    language,\r\n  };\r\n};\r\n\r\nexport const setSaveData = (values: IAppData) => {\r\n  if (!global.window) {\r\n    return defaultFormData;\r\n  }\r\n\r\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\r\n};\r\n","import { AppContext } from \"common/context\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const usePrintView = () => {\r\n  const { state, toFormView } = useContext(AppContext);\r\n\r\n  return {\r\n    toFormView,\r\n    values: state.values,\r\n  };\r\n};\r\n"],"sourceRoot":""}